{
	"id": "2768431fc9fba2e717e3d162738bb405",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CarbonTrader.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\nerror CarbonTrader_NotOwner();\r\nerror CarbonTrader_ParamError();\r\nerror CarbonTrader_transferFailed();\r\ncontract  CarbonTrader {\r\n\r\n    struct Trade {\r\n        address seller; // 卖家地址\r\n        uint256 sellAmount; // 要拍卖的额度\r\n        uint256 startTimeStamp; //拍卖开始时间戳\r\n        uint256 endTimeStamp; // 拍卖结束时间戳\r\n        uint256 minimumBidAmount; // 最少拍卖数量\r\n        uint256 initPriceOfUint; // 每单位的起拍价格\r\n        mapping (address => uint256) deeposits; //买家的押金\r\n        mapping (address => string) bidInfos;\r\n        mapping (address => string) bidSecrets;\r\n    }\r\n\r\n    // 发放的碳额度\r\n    mapping (address => uint256) private s_addressToAllowances;\r\n    // 被冻结的碳积分\r\n    mapping (address => uint256) private  s_freezeAllowance;\r\n    // 交易信息\r\n    mapping (string => Trade) private  s_trade;\r\n    // 用户账户金额\r\n    mapping (address => uint256) private s_auctionAmount;\r\n\r\n    // 管理员地址,补课修改\r\n    address private  immutable i_owner;\r\n    IERC20 private immutable i_usdt_token;\r\n    constructor (address usdtTokenAddress) {\r\n        i_owner = msg.sender;\r\n        i_usdt_token = IERC20(usdtTokenAddress);\r\n    }\r\n    // 装饰器\r\n    modifier onlyOwner() {\r\n        if (msg.sender != i_owner) {\r\n            revert CarbonTrader_NotOwner();\r\n        }\r\n        _;\r\n    }\r\n    // 给用户发放碳积分\r\n    function issueAllowance(address user,uint256 amount) public onlyOwner {\r\n        s_addressToAllowances[user]+= amount;\r\n    }\r\n    // 查询用户碳积分\r\n    function getAllowance(address user)public view  returns (uint256) {\r\n       return  s_addressToAllowances[user];\r\n    }\r\n    // 冻结碳积分\r\n    function freezeAllowance (address user,uint256 amount) public  onlyOwner {\r\n        s_addressToAllowances[user] -= amount;\r\n        s_freezeAllowance[user] += amount;\r\n    }   \r\n\r\n    // 解冻碳积分\r\n    function unFreezeAllowance (address user,uint256 amount) public onlyOwner {\r\n        s_addressToAllowances[user] += amount;\r\n        s_freezeAllowance[user] -= amount;\r\n    }\r\n\r\n    // 获取冻结的碳积分\r\n    function getFreezeAllowance(address user) public view  returns (uint256) {\r\n        return s_freezeAllowance[user];\r\n    }\r\n\r\n    // 销毁碳积分\r\n    function destroyAllowance(address user, uint256 amount) public onlyOwner {\r\n        s_addressToAllowances[user] -= amount;\r\n    }\r\n\r\n    // 销毁全部碳积分\r\n    function destroyAllAllowance(address user) public onlyOwner {\r\n        s_addressToAllowances[user] = 0;\r\n        s_freezeAllowance[user] = 0;\r\n    }\r\n\r\n    // 发起拍卖\r\n    function stertTrade (\r\n        string memory tradeId,\r\n        uint256 amount,\r\n        uint256 stratTimeStamp,\r\n        uint256 endTimeStamp,\r\n        uint256 minimumBidAmount,\r\n        uint256 initPriceOfUnit\r\n        \r\n    )public {\r\n        if (\r\n            amount <= 0 ||\r\n            stratTimeStamp >= stratTimeStamp ||\r\n            initPriceOfUnit <= 0 ||\r\n            minimumBidAmount > amount\r\n        ) revert CarbonTrader_ParamError();\r\n\r\n        Trade storage newTrade = s_trade[tradeId];\r\n        newTrade.seller = msg.sender;\r\n        newTrade.sellAmount = amount;\r\n        newTrade.startTimeStamp = stratTimeStamp;\r\n        newTrade.endTimeStamp = endTimeStamp;\r\n        newTrade.initPriceOfUint = initPriceOfUnit;\r\n        newTrade.minimumBidAmount = minimumBidAmount;\r\n\r\n        // 冻结资产\r\n        s_addressToAllowances[msg.sender] -= amount;\r\n        s_freezeAllowance[msg.sender] += amount;\r\n\r\n    }\r\n    // 获取交易\r\n    function getTread (string memory treadId) public view returns (address,uint256,uint256,uint256,uint256,uint256){\r\n        Trade storage curTrade = s_trade[treadId];\r\n        return (\r\n            curTrade.seller,\r\n            curTrade.sellAmount,\r\n            curTrade.startTimeStamp,\r\n            curTrade.endTimeStamp,\r\n            curTrade.initPriceOfUint,\r\n            curTrade.minimumBidAmount\r\n        );\r\n    }\r\n    function deposit(string memory treadId, uint256 amount, string memory info) public {\r\n        Trade storage curTrade = s_trade[treadId];\r\n        bool success = i_usdt_token.transferFrom(msg.sender, address(this), amount);\r\n        if (!success) revert CarbonTrader_transferFailed();\r\n        // 存储质押金额\r\n        curTrade.deeposits[msg.sender] = amount;\r\n        setInfo(treadId, info);\r\n\r\n    }\r\n    function refundDeposit(string memory treadId) public {\r\n        Trade storage curTrade = s_trade[treadId];\r\n        uint256 depositAmount = curTrade.deeposits[msg.sender];\r\n        curTrade.deeposits[msg.sender] = 0;\r\n        bool success = i_usdt_token.transfer(msg.sender, depositAmount);\r\n        if (!success) {\r\n            curTrade.deeposits[msg.sender] = depositAmount;\r\n            revert CarbonTrader_transferFailed();\r\n        }\r\n\r\n    }\r\n\r\n    function setInfo(string memory treadId,string memory info) private {\r\n        Trade storage curTrade = s_trade[treadId];\r\n        curTrade.bidInfos[msg.sender] = info;\r\n    }\r\n     \r\n     function setBidSecret(string memory treadId, string memory secret)public {\r\n        Trade storage curTrade = s_trade[treadId];\r\n        curTrade.bidSecrets[msg.sender] = secret;\r\n     }\r\n     function getBidSecret(string memory treadId) public view returns(string memory) {\r\n        Trade storage curTrade = s_trade[treadId];\r\n        return curTrade.bidSecrets[msg.sender];\r\n     }\r\n    // 结算\r\n    function finalizeAuctionAndTransferCarbon(\r\n        string memory treadId, uint256 allowanceAmount,uint256 addtionalAmountToPay\r\n        ) public {\r\n        Trade storage curTrade = s_trade[treadId];\r\n        // 获取保证金\r\n        uint256 depositAmount = curTrade.deeposits[msg.sender];\r\n        s_trade[treadId].deeposits[msg.sender] = 0;\r\n        s_auctionAmount[curTrade.seller] += depositAmount +addtionalAmountToPay;\r\n        // 扣除卖家碳额度\r\n        s_addressToAllowances[curTrade.seller] -= allowanceAmount;\r\n        // 增加买家碳额度\r\n        s_addressToAllowances[msg.sender] += allowanceAmount;\r\n\r\n        // 扣除需要补的钱\r\n         bool success = i_usdt_token.transferFrom(msg.sender, address(this), addtionalAmountToPay);\r\n        if (!success) revert CarbonTrader_transferFailed();\r\n\r\n\r\n    }\r\n    function withdrawAcutionAmount()public {\r\n        uint256 amount = s_auctionAmount[msg.sender];\r\n        s_auctionAmount[msg.sender] = 0;\r\n         bool success = i_usdt_token.transfer(msg.sender, amount);\r\n        if (!success) {\r\n           s_auctionAmount[msg.sender] = amount;\r\n            revert CarbonTrader_transferFailed();\r\n        }\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CarbonTrader.sol": {
				"CarbonTrader": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usdtTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "CarbonTrader_NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CarbonTrader_ParamError",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CarbonTrader_transferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "treadId",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "info",
									"type": "string"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "destroyAllAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "destroyAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "treadId",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "allowanceAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "addtionalAmountToPay",
									"type": "uint256"
								}
							],
							"name": "finalizeAuctionAndTransferCarbon",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "freezeAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "treadId",
									"type": "string"
								}
							],
							"name": "getBidSecret",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getFreezeAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "treadId",
									"type": "string"
								}
							],
							"name": "getTread",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "issueAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "treadId",
									"type": "string"
								}
							],
							"name": "refundDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "treadId",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "secret",
									"type": "string"
								}
							],
							"name": "setBidSecret",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tradeId",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stratTimeStamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTimeStamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minimumBidAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "initPriceOfUnit",
									"type": "uint256"
								}
							],
							"name": "stertTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unFreezeAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAcutionAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CarbonTrader.sol\":224:6821  contract  CarbonTrader {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/CarbonTrader.sol\":1236:1364  constructor (address usdtTokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CarbonTrader.sol\":1296:1306  msg.sender */\n  caller\n    /* \"contracts/CarbonTrader.sol\":1286:1306  i_owner = msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/CarbonTrader.sol\":1339:1355  usdtTokenAddress */\n  dup1\n    /* \"contracts/CarbonTrader.sol\":1317:1356  i_usdt_token = IERC20(usdtTokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/CarbonTrader.sol\":1236:1364  constructor (address usdtTokenAddress) {... */\n  pop\n    /* \"contracts/CarbonTrader.sol\":224:6821  contract  CarbonTrader {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CarbonTrader.sol\":224:6821  contract  CarbonTrader {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n  0x00\n  assignImmutable(\"0x94bf69fb65508f6e4ddb8e9d68af175b29ca55b7385169421c8fce2c4390b244\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/CarbonTrader.sol\":224:6821  contract  CarbonTrader {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x69524d31\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x97b1a8b7\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x97b1a8b7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd107a5cc\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd62b58ca\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xeb5a662e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x69524d31\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x69527363\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x733da7c8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7feab380\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x4fe19125\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x4fe19125\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5ed04c43\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x64502cae\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x68b377ca\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x17056d94\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19ec73e0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x459ccec7\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CarbonTrader.sol\":2295:2417  function getFreezeAllowance(address user) public view  returns (uint256) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CarbonTrader.sol\":2080:2254  function unFreezeAllowance (address user,uint256 amount) public onlyOwner {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/CarbonTrader.sol\":2616:2764  function destroyAllAllowance(address user) public onlyOwner {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/CarbonTrader.sol\":5223:5408  function setBidSecret(string memory treadId, string memory secret)public {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/CarbonTrader.sol\":5415:5605  function getBidSecret(string memory treadId) public view returns(string memory) {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CarbonTrader.sol\":2449:2578  function destroyAllowance(address user, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/CarbonTrader.sol\":4168:4574  function deposit(string memory treadId, uint256 amount, string memory info) public {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/CarbonTrader.sol\":4580:5027  function refundDeposit(string memory treadId) public {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/CarbonTrader.sol\":2793:3718  function stertTrade (... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/CarbonTrader.sol\":1562:1687  function issueAllowance(address user,uint256 amount) public onlyOwner {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/CarbonTrader.sol\":6467:6816  function withdrawAcutionAmount()public {... */\n    tag_13:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/CarbonTrader.sol\":3745:4162  function getTread (string memory treadId) public view returns (address,uint256,uint256,uint256,uint256,uint256){... */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CarbonTrader.sol\":1872:2045  function freezeAllowance (address user,uint256 amount) public  onlyOwner {... */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/CarbonTrader.sol\":5626:6461  function finalizeAuctionAndTransferCarbon(... */\n    tag_16:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/CarbonTrader.sol\":1723:1842  function getAllowance(address user)public view  returns (uint256) {... */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CarbonTrader.sol\":2295:2417  function getFreezeAllowance(address user) public view  returns (uint256) {... */\n    tag_24:\n        /* \"contracts/CarbonTrader.sol\":2359:2366  uint256 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2386:2403  s_freezeAllowance */\n      0x01\n        /* \"contracts/CarbonTrader.sol\":2386:2409  s_freezeAllowance[user] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2404:2408  user */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":2386:2409  s_freezeAllowance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CarbonTrader.sol\":2379:2409  return s_freezeAllowance[user] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":2295:2417  function getFreezeAllowance(address user) public view  returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":2080:2254  function unFreezeAllowance (address user,uint256 amount) public onlyOwner {... */\n    tag_30:\n        /* \"contracts/CarbonTrader.sol\":1438:1445  i_owner */\n      immutable(\"0x94bf69fb65508f6e4ddb8e9d68af175b29ca55b7385169421c8fce2c4390b244\")\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CarbonTrader.sol\":1424:1434  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n      tag_81\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":1469:1492  CarbonTrader_NotOwner() */\n      mload(0x40)\n      0xc31b2cfe00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n    tag_81:\n        /* \"contracts/CarbonTrader.sol\":2196:2202  amount */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":2165:2186  s_addressToAllowances */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2165:2192  s_addressToAllowances[user] */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":2187:2191  user */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":2165:2192  s_addressToAllowances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2165:2202  s_addressToAllowances[user] += amount */\n      dup3\n      dup3\n      sload\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":2240:2246  amount */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":2213:2230  s_freezeAllowance */\n      0x01\n        /* \"contracts/CarbonTrader.sol\":2213:2236  s_freezeAllowance[user] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2231:2235  user */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":2213:2236  s_freezeAllowance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2213:2246  s_freezeAllowance[user] -= amount */\n      dup3\n      dup3\n      sload\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":2080:2254  function unFreezeAllowance (address user,uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":2616:2764  function destroyAllAllowance(address user) public onlyOwner {... */\n    tag_33:\n        /* \"contracts/CarbonTrader.sol\":1438:1445  i_owner */\n      immutable(\"0x94bf69fb65508f6e4ddb8e9d68af175b29ca55b7385169421c8fce2c4390b244\")\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CarbonTrader.sol\":1424:1434  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n      tag_88\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":1469:1492  CarbonTrader_NotOwner() */\n      mload(0x40)\n      0xc31b2cfe00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n    tag_88:\n        /* \"contracts/CarbonTrader.sol\":2717:2718  0 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2687:2708  s_addressToAllowances */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":2687:2714  s_addressToAllowances[user] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2709:2713  user */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":2687:2714  s_addressToAllowances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":2687:2718  s_addressToAllowances[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":2755:2756  0 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2729:2746  s_freezeAllowance */\n      0x01\n        /* \"contracts/CarbonTrader.sol\":2729:2752  s_freezeAllowance[user] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2747:2751  user */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":2729:2752  s_freezeAllowance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":2729:2756  s_freezeAllowance[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":2616:2764  function destroyAllAllowance(address user) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":5223:5408  function setBidSecret(string memory treadId, string memory secret)public {... */\n    tag_37:\n        /* \"contracts/CarbonTrader.sol\":5307:5329  Trade storage curTrade */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5332:5339  s_trade */\n      0x02\n        /* \"contracts/CarbonTrader.sol\":5340:5347  treadId */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":5332:5348  s_trade[treadId] */\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":5307:5348  Trade storage curTrade = s_trade[treadId] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":5393:5399  secret */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":5359:5367  curTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":5359:5378  curTrade.bidSecrets */\n      0x08\n      add\n        /* \"contracts/CarbonTrader.sol\":5359:5390  curTrade.bidSecrets[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5379:5389  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":5359:5390  curTrade.bidSecrets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":5359:5399  curTrade.bidSecrets[msg.sender] = secret */\n      swap1\n      dup2\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      pop\n        /* \"contracts/CarbonTrader.sol\":5296:5408  {... */\n      pop\n        /* \"contracts/CarbonTrader.sol\":5223:5408  function setBidSecret(string memory treadId, string memory secret)public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":5415:5605  function getBidSecret(string memory treadId) public view returns(string memory) {... */\n    tag_41:\n        /* \"contracts/CarbonTrader.sol\":5480:5493  string memory */\n      0x60\n        /* \"contracts/CarbonTrader.sol\":5506:5528  Trade storage curTrade */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5531:5538  s_trade */\n      0x02\n        /* \"contracts/CarbonTrader.sol\":5539:5546  treadId */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":5531:5547  s_trade[treadId] */\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_96:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":5506:5547  Trade storage curTrade = s_trade[treadId] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":5565:5573  curTrade */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":5565:5584  curTrade.bidSecrets */\n      0x08\n      add\n        /* \"contracts/CarbonTrader.sol\":5565:5596  curTrade.bidSecrets[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5585:5595  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":5565:5596  curTrade.bidSecrets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":5558:5596  return curTrade.bidSecrets[msg.sender] */\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/CarbonTrader.sol\":5415:5605  function getBidSecret(string memory treadId) public view returns(string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":2449:2578  function destroyAllowance(address user, uint256 amount) public onlyOwner {... */\n    tag_46:\n        /* \"contracts/CarbonTrader.sol\":1438:1445  i_owner */\n      immutable(\"0x94bf69fb65508f6e4ddb8e9d68af175b29ca55b7385169421c8fce2c4390b244\")\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CarbonTrader.sol\":1424:1434  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n      tag_104\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":1469:1492  CarbonTrader_NotOwner() */\n      mload(0x40)\n      0xc31b2cfe00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n    tag_104:\n        /* \"contracts/CarbonTrader.sol\":2564:2570  amount */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":2533:2554  s_addressToAllowances */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2533:2560  s_addressToAllowances[user] */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":2555:2559  user */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":2533:2560  s_addressToAllowances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2533:2570  s_addressToAllowances[user] -= amount */\n      dup3\n      dup3\n      sload\n      tag_106\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_106:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":2449:2578  function destroyAllowance(address user, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":4168:4574  function deposit(string memory treadId, uint256 amount, string memory info) public {... */\n    tag_50:\n        /* \"contracts/CarbonTrader.sol\":4262:4284  Trade storage curTrade */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4287:4294  s_trade */\n      0x02\n        /* \"contracts/CarbonTrader.sol\":4295:4302  treadId */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":4287:4303  s_trade[treadId] */\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_108:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":4262:4303  Trade storage curTrade = s_trade[treadId] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":4314:4326  bool success */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4329:4341  i_usdt_token */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/CarbonTrader.sol\":4329:4354  i_usdt_token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/CarbonTrader.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":4375:4379  this */\n      address\n        /* \"contracts/CarbonTrader.sol\":4382:4388  amount */\n      dup8\n        /* \"contracts/CarbonTrader.sol\":4329:4389  i_usdt_token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"contracts/CarbonTrader.sol\":4314:4389  bool success = i_usdt_token.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":4405:4412  success */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":4400:4450  if (!success) revert CarbonTrader_transferFailed() */\n      tag_115\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":4421:4450  CarbonTrader_transferFailed() */\n      mload(0x40)\n      0x81b714be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":4400:4450  if (!success) revert CarbonTrader_transferFailed() */\n    tag_115:\n        /* \"contracts/CarbonTrader.sol\":4525:4531  amount */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":4492:4500  curTrade */\n      dup3\n        /* \"contracts/CarbonTrader.sol\":4492:4510  curTrade.deeposits */\n      0x06\n      add\n        /* \"contracts/CarbonTrader.sol\":4492:4522  curTrade.deeposits[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4511:4521  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":4492:4522  curTrade.deeposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":4492:4531  curTrade.deeposits[msg.sender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":4542:4564  setInfo(treadId, info) */\n      tag_116\n        /* \"contracts/CarbonTrader.sol\":4550:4557  treadId */\n      dup6\n        /* \"contracts/CarbonTrader.sol\":4559:4563  info */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":4542:4549  setInfo */\n      tag_117\n        /* \"contracts/CarbonTrader.sol\":4542:4564  setInfo(treadId, info) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/CarbonTrader.sol\":4251:4574  {... */\n      pop\n      pop\n        /* \"contracts/CarbonTrader.sol\":4168:4574  function deposit(string memory treadId, uint256 amount, string memory info) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":4580:5027  function refundDeposit(string memory treadId) public {... */\n    tag_53:\n        /* \"contracts/CarbonTrader.sol\":4644:4666  Trade storage curTrade */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4669:4676  s_trade */\n      0x02\n        /* \"contracts/CarbonTrader.sol\":4677:4684  treadId */\n      dup3\n        /* \"contracts/CarbonTrader.sol\":4669:4685  s_trade[treadId] */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_119:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":4644:4685  Trade storage curTrade = s_trade[treadId] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":4696:4717  uint256 depositAmount */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4720:4728  curTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":4720:4738  curTrade.deeposits */\n      0x06\n      add\n        /* \"contracts/CarbonTrader.sol\":4720:4750  curTrade.deeposits[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4739:4749  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":4720:4750  curTrade.deeposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CarbonTrader.sol\":4696:4750  uint256 depositAmount = curTrade.deeposits[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":4794:4795  0 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4761:4769  curTrade */\n      dup3\n        /* \"contracts/CarbonTrader.sol\":4761:4779  curTrade.deeposits */\n      0x06\n      add\n        /* \"contracts/CarbonTrader.sol\":4761:4791  curTrade.deeposits[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4780:4790  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":4761:4791  curTrade.deeposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":4761:4795  curTrade.deeposits[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":4806:4818  bool success */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4821:4833  i_usdt_token */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/CarbonTrader.sol\":4821:4842  i_usdt_token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/CarbonTrader.sol\":4843:4853  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":4855:4868  depositAmount */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":4821:4869  i_usdt_token.transfer(msg.sender, depositAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_124:\n        /* \"contracts/CarbonTrader.sol\":4806:4869  bool success = i_usdt_token.transfer(msg.sender, depositAmount) */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":4885:4892  success */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":4880:5018  if (!success) {... */\n      tag_125\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":4942:4955  depositAmount */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":4909:4917  curTrade */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":4909:4927  curTrade.deeposits */\n      0x06\n      add\n        /* \"contracts/CarbonTrader.sol\":4909:4939  curTrade.deeposits[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":4928:4938  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":4909:4939  curTrade.deeposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":4909:4955  curTrade.deeposits[msg.sender] = depositAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":4977:5006  CarbonTrader_transferFailed() */\n      mload(0x40)\n      0x81b714be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":4880:5018  if (!success) {... */\n    tag_125:\n        /* \"contracts/CarbonTrader.sol\":4633:5027  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/CarbonTrader.sol\":4580:5027  function refundDeposit(string memory treadId) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":2793:3718  function stertTrade (... */\n    tag_57:\n        /* \"contracts/CarbonTrader.sol\":3066:3067  0 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3056:3062  amount */\n      dup6\n        /* \"contracts/CarbonTrader.sol\":3056:3067  amount <= 0 */\n      gt\n      iszero\n        /* \"contracts/CarbonTrader.sol\":3056:3116  amount <= 0 ||... */\n      dup1\n      tag_127\n      jumpi\n      pop\n        /* \"contracts/CarbonTrader.sol\":3102:3116  stratTimeStamp */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":3084:3098  stratTimeStamp */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":3084:3116  stratTimeStamp >= stratTimeStamp */\n      lt\n      iszero\n        /* \"contracts/CarbonTrader.sol\":3056:3116  amount <= 0 ||... */\n    tag_127:\n        /* \"contracts/CarbonTrader.sol\":3056:3153  amount <= 0 ||... */\n      dup1\n      tag_128\n      jumpi\n      pop\n        /* \"contracts/CarbonTrader.sol\":3152:3153  0 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3133:3148  initPriceOfUnit */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":3133:3153  initPriceOfUnit <= 0 */\n      gt\n      iszero\n        /* \"contracts/CarbonTrader.sol\":3056:3153  amount <= 0 ||... */\n    tag_128:\n        /* \"contracts/CarbonTrader.sol\":3056:3195  amount <= 0 ||... */\n      dup1\n      tag_129\n      jumpi\n      pop\n        /* \"contracts/CarbonTrader.sol\":3189:3195  amount */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":3170:3186  minimumBidAmount */\n      dup3\n        /* \"contracts/CarbonTrader.sol\":3170:3195  minimumBidAmount > amount */\n      gt\n        /* \"contracts/CarbonTrader.sol\":3056:3195  amount <= 0 ||... */\n    tag_129:\n        /* \"contracts/CarbonTrader.sol\":3038:3239  if (... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":3214:3239  CarbonTrader_ParamError() */\n      mload(0x40)\n      0x0ecf0f1100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":3038:3239  if (... */\n    tag_130:\n        /* \"contracts/CarbonTrader.sol\":3252:3274  Trade storage newTrade */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3277:3284  s_trade */\n      0x02\n        /* \"contracts/CarbonTrader.sol\":3285:3292  tradeId */\n      dup8\n        /* \"contracts/CarbonTrader.sol\":3277:3293  s_trade[tradeId] */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_131:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":3252:3293  Trade storage newTrade = s_trade[tradeId] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":3322:3332  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":3304:3312  newTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":3304:3319  newTrade.seller */\n      0x00\n      add\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3304:3332  newTrade.seller = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":3365:3371  amount */\n      dup6\n        /* \"contracts/CarbonTrader.sol\":3343:3351  newTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":3343:3362  newTrade.sellAmount */\n      0x01\n      add\n        /* \"contracts/CarbonTrader.sol\":3343:3371  newTrade.sellAmount = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":3408:3422  stratTimeStamp */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":3382:3390  newTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":3382:3405  newTrade.startTimeStamp */\n      0x02\n      add\n        /* \"contracts/CarbonTrader.sol\":3382:3422  newTrade.startTimeStamp = stratTimeStamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":3457:3469  endTimeStamp */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":3433:3441  newTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":3433:3454  newTrade.endTimeStamp */\n      0x03\n      add\n        /* \"contracts/CarbonTrader.sol\":3433:3469  newTrade.endTimeStamp = endTimeStamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":3507:3522  initPriceOfUnit */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":3480:3488  newTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":3480:3504  newTrade.initPriceOfUint */\n      0x05\n      add\n        /* \"contracts/CarbonTrader.sol\":3480:3522  newTrade.initPriceOfUint = initPriceOfUnit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":3561:3577  minimumBidAmount */\n      dup3\n        /* \"contracts/CarbonTrader.sol\":3533:3541  newTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":3533:3558  newTrade.minimumBidAmount */\n      0x04\n      add\n        /* \"contracts/CarbonTrader.sol\":3533:3577  newTrade.minimumBidAmount = minimumBidAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":3652:3658  amount */\n      dup6\n        /* \"contracts/CarbonTrader.sol\":3615:3636  s_addressToAllowances */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3615:3648  s_addressToAllowances[msg.sender] */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":3637:3647  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":3615:3648  s_addressToAllowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3615:3658  s_addressToAllowances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_132\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_132:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":3702:3708  amount */\n      dup6\n        /* \"contracts/CarbonTrader.sol\":3669:3686  s_freezeAllowance */\n      0x01\n        /* \"contracts/CarbonTrader.sol\":3669:3698  s_freezeAllowance[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3687:3697  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":3669:3698  s_freezeAllowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3669:3708  s_freezeAllowance[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_133\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":3027:3718  {... */\n      pop\n        /* \"contracts/CarbonTrader.sol\":2793:3718  function stertTrade (... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":1562:1687  function issueAllowance(address user,uint256 amount) public onlyOwner {... */\n    tag_60:\n        /* \"contracts/CarbonTrader.sol\":1438:1445  i_owner */\n      immutable(\"0x94bf69fb65508f6e4ddb8e9d68af175b29ca55b7385169421c8fce2c4390b244\")\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CarbonTrader.sol\":1424:1434  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n      tag_135\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":1469:1492  CarbonTrader_NotOwner() */\n      mload(0x40)\n      0xc31b2cfe00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n    tag_135:\n        /* \"contracts/CarbonTrader.sol\":1673:1679  amount */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":1643:1664  s_addressToAllowances */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":1643:1670  s_addressToAllowances[user] */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":1665:1669  user */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":1643:1670  s_addressToAllowances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":1643:1679  s_addressToAllowances[user]+= amount */\n      dup3\n      dup3\n      sload\n      tag_137\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":1562:1687  function issueAllowance(address user,uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":6467:6816  function withdrawAcutionAmount()public {... */\n    tag_62:\n        /* \"contracts/CarbonTrader.sol\":6517:6531  uint256 amount */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6534:6549  s_auctionAmount */\n      0x03\n        /* \"contracts/CarbonTrader.sol\":6534:6561  s_auctionAmount[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6550:6560  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":6534:6561  s_auctionAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CarbonTrader.sol\":6517:6561  uint256 amount = s_auctionAmount[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":6602:6603  0 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6572:6587  s_auctionAmount */\n      0x03\n        /* \"contracts/CarbonTrader.sol\":6572:6599  s_auctionAmount[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6588:6598  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":6572:6599  s_auctionAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":6572:6603  s_auctionAmount[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":6615:6627  bool success */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6630:6642  i_usdt_token */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/CarbonTrader.sol\":6630:6651  i_usdt_token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/CarbonTrader.sol\":6652:6662  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":6664:6670  amount */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":6630:6671  i_usdt_token.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_142:\n        /* \"contracts/CarbonTrader.sol\":6615:6671  bool success = i_usdt_token.transfer(msg.sender, amount) */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":6687:6694  success */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":6682:6809  if (!success) {... */\n      tag_143\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":6740:6746  amount */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":6710:6725  s_auctionAmount */\n      0x03\n        /* \"contracts/CarbonTrader.sol\":6710:6737  s_auctionAmount[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6726:6736  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":6710:6737  s_auctionAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":6710:6746  s_auctionAmount[msg.sender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":6768:6797  CarbonTrader_transferFailed() */\n      mload(0x40)\n      0x81b714be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":6682:6809  if (!success) {... */\n    tag_143:\n        /* \"contracts/CarbonTrader.sol\":6506:6816  {... */\n      pop\n      pop\n        /* \"contracts/CarbonTrader.sol\":6467:6816  function withdrawAcutionAmount()public {... */\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":3745:4162  function getTread (string memory treadId) public view returns (address,uint256,uint256,uint256,uint256,uint256){... */\n    tag_65:\n        /* \"contracts/CarbonTrader.sol\":3808:3815  address */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3816:3823  uint256 */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":3824:3831  uint256 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3832:3839  uint256 */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":3840:3847  uint256 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3848:3855  uint256 */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":3867:3889  Trade storage curTrade */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":3892:3899  s_trade */\n      0x02\n        /* \"contracts/CarbonTrader.sol\":3900:3907  treadId */\n      dup9\n        /* \"contracts/CarbonTrader.sol\":3892:3908  s_trade[treadId] */\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_145:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":3867:3908  Trade storage curTrade = s_trade[treadId] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":3941:3949  curTrade */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":3941:3956  curTrade.seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CarbonTrader.sol\":3971:3979  curTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":3971:3990  curTrade.sellAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/CarbonTrader.sol\":4005:4013  curTrade */\n      dup3\n        /* \"contracts/CarbonTrader.sol\":4005:4028  curTrade.startTimeStamp */\n      0x02\n      add\n      sload\n        /* \"contracts/CarbonTrader.sol\":4043:4051  curTrade */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":4043:4064  curTrade.endTimeStamp */\n      0x03\n      add\n      sload\n        /* \"contracts/CarbonTrader.sol\":4079:4087  curTrade */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":4079:4103  curTrade.initPriceOfUint */\n      0x05\n      add\n      sload\n        /* \"contracts/CarbonTrader.sol\":4118:4126  curTrade */\n      dup6\n        /* \"contracts/CarbonTrader.sol\":4118:4143  curTrade.minimumBidAmount */\n      0x04\n      add\n      sload\n        /* \"contracts/CarbonTrader.sol\":3919:4154  return (... */\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      pop\n        /* \"contracts/CarbonTrader.sol\":3745:4162  function getTread (string memory treadId) public view returns (address,uint256,uint256,uint256,uint256,uint256){... */\n      swap2\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      swap6\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":1872:2045  function freezeAllowance (address user,uint256 amount) public  onlyOwner {... */\n    tag_70:\n        /* \"contracts/CarbonTrader.sol\":1438:1445  i_owner */\n      immutable(\"0x94bf69fb65508f6e4ddb8e9d68af175b29ca55b7385169421c8fce2c4390b244\")\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CarbonTrader.sol\":1424:1434  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":1424:1445  msg.sender != i_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n      tag_147\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":1469:1492  CarbonTrader_NotOwner() */\n      mload(0x40)\n      0xc31b2cfe00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":1420:1504  if (msg.sender != i_owner) {... */\n    tag_147:\n        /* \"contracts/CarbonTrader.sol\":1987:1993  amount */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":1956:1977  s_addressToAllowances */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":1956:1983  s_addressToAllowances[user] */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":1978:1982  user */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":1956:1983  s_addressToAllowances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":1956:1993  s_addressToAllowances[user] -= amount */\n      dup3\n      dup3\n      sload\n      tag_149\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_149:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":2031:2037  amount */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":2004:2021  s_freezeAllowance */\n      0x01\n        /* \"contracts/CarbonTrader.sol\":2004:2027  s_freezeAllowance[user] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2022:2026  user */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":2004:2027  s_freezeAllowance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":2004:2037  s_freezeAllowance[user] += amount */\n      dup3\n      dup3\n      sload\n      tag_150\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_150:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":1872:2045  function freezeAllowance (address user,uint256 amount) public  onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":5626:6461  function finalizeAuctionAndTransferCarbon(... */\n    tag_74:\n        /* \"contracts/CarbonTrader.sol\":5783:5805  Trade storage curTrade */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5808:5815  s_trade */\n      0x02\n        /* \"contracts/CarbonTrader.sol\":5816:5823  treadId */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":5808:5824  s_trade[treadId] */\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_152:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":5783:5824  Trade storage curTrade = s_trade[treadId] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":5863:5884  uint256 depositAmount */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5887:5895  curTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":5887:5905  curTrade.deeposits */\n      0x06\n      add\n        /* \"contracts/CarbonTrader.sol\":5887:5917  curTrade.deeposits[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5906:5916  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":5887:5917  curTrade.deeposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CarbonTrader.sol\":5863:5917  uint256 depositAmount = curTrade.deeposits[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":5969:5970  0 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5928:5935  s_trade */\n      0x02\n        /* \"contracts/CarbonTrader.sol\":5936:5943  treadId */\n      dup7\n        /* \"contracts/CarbonTrader.sol\":5928:5944  s_trade[treadId] */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_153:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":5928:5954  s_trade[treadId].deeposits */\n      0x06\n      add\n        /* \"contracts/CarbonTrader.sol\":5928:5966  s_trade[treadId].deeposits[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5955:5965  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":5928:5966  s_trade[treadId].deeposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":5928:5970  s_trade[treadId].deeposits[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":6032:6052  addtionalAmountToPay */\n      dup3\n        /* \"contracts/CarbonTrader.sol\":6017:6030  depositAmount */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":6017:6052  depositAmount +addtionalAmountToPay */\n      tag_154\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_154:\n        /* \"contracts/CarbonTrader.sol\":5981:5996  s_auctionAmount */\n      0x03\n        /* \"contracts/CarbonTrader.sol\":5981:6013  s_auctionAmount[curTrade.seller] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5997:6005  curTrade */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":5997:6012  curTrade.seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CarbonTrader.sol\":5981:6013  s_auctionAmount[curTrade.seller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5981:6052  s_auctionAmount[curTrade.seller] += depositAmount +addtionalAmountToPay */\n      dup3\n      dup3\n      sload\n      tag_155\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_155:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":6139:6154  allowanceAmount */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":6097:6118  s_addressToAllowances */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6097:6135  s_addressToAllowances[curTrade.seller] */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":6119:6127  curTrade */\n      dup5\n        /* \"contracts/CarbonTrader.sol\":6119:6134  curTrade.seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CarbonTrader.sol\":6097:6135  s_addressToAllowances[curTrade.seller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6097:6154  s_addressToAllowances[curTrade.seller] -= allowanceAmount */\n      dup3\n      dup3\n      sload\n      tag_156\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_156:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":6236:6251  allowanceAmount */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":6199:6220  s_addressToAllowances */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6199:6232  s_addressToAllowances[msg.sender] */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":6221:6231  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":6199:6232  s_addressToAllowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6199:6251  s_addressToAllowances[msg.sender] += allowanceAmount */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CarbonTrader.sol\":6299:6311  bool success */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":6314:6326  i_usdt_token */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/CarbonTrader.sol\":6314:6339  i_usdt_token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/CarbonTrader.sol\":6340:6350  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":6360:6364  this */\n      address\n        /* \"contracts/CarbonTrader.sol\":6367:6387  addtionalAmountToPay */\n      dup8\n        /* \"contracts/CarbonTrader.sol\":6314:6388  i_usdt_token.transferFrom(msg.sender, address(this), addtionalAmountToPay) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_158:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_161:\n        /* \"contracts/CarbonTrader.sol\":6299:6388  bool success = i_usdt_token.transferFrom(msg.sender, address(this), addtionalAmountToPay) */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":6404:6411  success */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":6399:6449  if (!success) revert CarbonTrader_transferFailed() */\n      tag_162\n      jumpi\n        /* \"contracts/CarbonTrader.sol\":6420:6449  CarbonTrader_transferFailed() */\n      mload(0x40)\n      0x81b714be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CarbonTrader.sol\":6399:6449  if (!success) revert CarbonTrader_transferFailed() */\n    tag_162:\n        /* \"contracts/CarbonTrader.sol\":5772:6461  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/CarbonTrader.sol\":5626:6461  function finalizeAuctionAndTransferCarbon(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":1723:1842  function getAllowance(address user)public view  returns (uint256) {... */\n    tag_77:\n        /* \"contracts/CarbonTrader.sol\":1780:1787  uint256 */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":1807:1828  s_addressToAllowances */\n      dup1\n        /* \"contracts/CarbonTrader.sol\":1807:1834  s_addressToAllowances[user] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":1829:1833  user */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":1807:1834  s_addressToAllowances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CarbonTrader.sol\":1799:1834  return  s_addressToAllowances[user] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":1723:1842  function getAllowance(address user)public view  returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CarbonTrader.sol\":5035:5209  function setInfo(string memory treadId,string memory info) private {... */\n    tag_117:\n        /* \"contracts/CarbonTrader.sol\":5113:5135  Trade storage curTrade */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5138:5145  s_trade */\n      0x02\n        /* \"contracts/CarbonTrader.sol\":5146:5153  treadId */\n      dup4\n        /* \"contracts/CarbonTrader.sol\":5138:5154  s_trade[treadId] */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_165:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":5113:5154  Trade storage curTrade = s_trade[treadId] */\n      swap1\n      pop\n        /* \"contracts/CarbonTrader.sol\":5197:5201  info */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":5165:5173  curTrade */\n      dup2\n        /* \"contracts/CarbonTrader.sol\":5165:5182  curTrade.bidInfos */\n      0x07\n      add\n        /* \"contracts/CarbonTrader.sol\":5165:5194  curTrade.bidInfos[msg.sender] */\n      0x00\n        /* \"contracts/CarbonTrader.sol\":5183:5193  msg.sender */\n      caller\n        /* \"contracts/CarbonTrader.sol\":5165:5194  curTrade.bidInfos[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CarbonTrader.sol\":5165:5201  curTrade.bidInfos[msg.sender] = info */\n      swap1\n      dup2\n      tag_166\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_166:\n      pop\n        /* \"contracts/CarbonTrader.sol\":5102:5209  {... */\n      pop\n        /* \"contracts/CarbonTrader.sol\":5035:5209  function setInfo(string memory treadId,string memory info) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_167:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_168:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_169:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_170:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_171:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_221\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_170\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_172:\n        /* \"#utility.yul\":641:665   */\n      tag_223\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_171\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_224:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_173:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_226\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_172\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_23:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_229\n      tag_168\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":917:1036   */\n    tag_228:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_230\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_173\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_174:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_175:\n        /* \"#utility.yul\":1346:1370   */\n      tag_233\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_174\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_26:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_235\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_175\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_176:\n        /* \"#utility.yul\":1684:1708   */\n      tag_237\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_174\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_238:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_177:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_240\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_176\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_29:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      dup1\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_243\n      tag_168\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1977:2096   */\n    tag_242:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_244\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_173\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_245\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_177\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2481   */\n    tag_178:\n        /* \"#utility.yul\":2473:2474   */\n      0x00\n        /* \"#utility.yul\":2470:2471   */\n      dup1\n        /* \"#utility.yul\":2463:2475   */\n      revert\n        /* \"#utility.yul\":2487:2604   */\n    tag_179:\n        /* \"#utility.yul\":2596:2597   */\n      0x00\n        /* \"#utility.yul\":2593:2594   */\n      dup1\n        /* \"#utility.yul\":2586:2598   */\n      revert\n        /* \"#utility.yul\":2610:2712   */\n    tag_180:\n        /* \"#utility.yul\":2651:2657   */\n      0x00\n        /* \"#utility.yul\":2702:2704   */\n      0x1f\n        /* \"#utility.yul\":2698:2705   */\n      not\n        /* \"#utility.yul\":2693:2695   */\n      0x1f\n        /* \"#utility.yul\":2686:2691   */\n      dup4\n        /* \"#utility.yul\":2682:2696   */\n      add\n        /* \"#utility.yul\":2678:2706   */\n      and\n        /* \"#utility.yul\":2668:2706   */\n      swap1\n      pop\n        /* \"#utility.yul\":2610:2712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2718:2898   */\n    tag_181:\n        /* \"#utility.yul\":2766:2843   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2763:2764   */\n      0x00\n        /* \"#utility.yul\":2756:2844   */\n      mstore\n        /* \"#utility.yul\":2863:2867   */\n      0x41\n        /* \"#utility.yul\":2860:2861   */\n      0x04\n        /* \"#utility.yul\":2853:2868   */\n      mstore\n        /* \"#utility.yul\":2887:2891   */\n      0x24\n        /* \"#utility.yul\":2884:2885   */\n      0x00\n        /* \"#utility.yul\":2877:2892   */\n      revert\n        /* \"#utility.yul\":2904:3185   */\n    tag_182:\n        /* \"#utility.yul\":2987:3014   */\n      tag_251\n        /* \"#utility.yul\":3009:3013   */\n      dup3\n        /* \"#utility.yul\":2987:3014   */\n      tag_180\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2979:2985   */\n      dup2\n        /* \"#utility.yul\":2975:3015   */\n      add\n        /* \"#utility.yul\":3117:3123   */\n      dup2\n        /* \"#utility.yul\":3105:3115   */\n      dup2\n        /* \"#utility.yul\":3102:3124   */\n      lt\n        /* \"#utility.yul\":3081:3099   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3069:3079   */\n      dup3\n        /* \"#utility.yul\":3066:3100   */\n      gt\n        /* \"#utility.yul\":3063:3125   */\n      or\n        /* \"#utility.yul\":3060:3148   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3128:3146   */\n      tag_253\n      tag_181\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3060:3148   */\n    tag_252:\n        /* \"#utility.yul\":3168:3178   */\n      dup1\n        /* \"#utility.yul\":3164:3166   */\n      0x40\n        /* \"#utility.yul\":3157:3179   */\n      mstore\n        /* \"#utility.yul\":2947:3185   */\n      pop\n        /* \"#utility.yul\":2904:3185   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3191:3320   */\n    tag_183:\n        /* \"#utility.yul\":3225:3231   */\n      0x00\n        /* \"#utility.yul\":3252:3272   */\n      tag_255\n      tag_167\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3242:3272   */\n      swap1\n      pop\n        /* \"#utility.yul\":3281:3314   */\n      tag_256\n        /* \"#utility.yul\":3309:3313   */\n      dup3\n        /* \"#utility.yul\":3301:3307   */\n      dup3\n        /* \"#utility.yul\":3281:3314   */\n      tag_182\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3191:3320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3326:3634   */\n    tag_184:\n        /* \"#utility.yul\":3388:3392   */\n      0x00\n        /* \"#utility.yul\":3478:3496   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3470:3476   */\n      dup3\n        /* \"#utility.yul\":3467:3497   */\n      gt\n        /* \"#utility.yul\":3464:3520   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3500:3518   */\n      tag_259\n      tag_181\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3464:3520   */\n    tag_258:\n        /* \"#utility.yul\":3538:3567   */\n      tag_260\n        /* \"#utility.yul\":3560:3566   */\n      dup3\n        /* \"#utility.yul\":3538:3567   */\n      tag_180\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3530:3567   */\n      swap1\n      pop\n        /* \"#utility.yul\":3622:3626   */\n      0x20\n        /* \"#utility.yul\":3616:3620   */\n      dup2\n        /* \"#utility.yul\":3612:3627   */\n      add\n        /* \"#utility.yul\":3604:3627   */\n      swap1\n      pop\n        /* \"#utility.yul\":3326:3634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3640:3788   */\n    tag_185:\n        /* \"#utility.yul\":3738:3744   */\n      dup3\n        /* \"#utility.yul\":3733:3736   */\n      dup2\n        /* \"#utility.yul\":3728:3731   */\n      dup4\n        /* \"#utility.yul\":3715:3745   */\n      calldatacopy\n        /* \"#utility.yul\":3779:3780   */\n      0x00\n        /* \"#utility.yul\":3770:3776   */\n      dup4\n        /* \"#utility.yul\":3765:3768   */\n      dup4\n        /* \"#utility.yul\":3761:3777   */\n      add\n        /* \"#utility.yul\":3754:3781   */\n      mstore\n        /* \"#utility.yul\":3640:3788   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3794:4219   */\n    tag_186:\n        /* \"#utility.yul\":3872:3877   */\n      0x00\n        /* \"#utility.yul\":3897:3963   */\n      tag_263\n        /* \"#utility.yul\":3913:3962   */\n      tag_264\n        /* \"#utility.yul\":3955:3961   */\n      dup5\n        /* \"#utility.yul\":3913:3962   */\n      tag_184\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3897:3963   */\n      tag_183\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3888:3963   */\n      swap1\n      pop\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3979:3984   */\n      dup2\n        /* \"#utility.yul\":3972:3993   */\n      mstore\n        /* \"#utility.yul\":4024:4028   */\n      0x20\n        /* \"#utility.yul\":4017:4022   */\n      dup2\n        /* \"#utility.yul\":4013:4029   */\n      add\n        /* \"#utility.yul\":4062:4065   */\n      dup5\n        /* \"#utility.yul\":4053:4059   */\n      dup5\n        /* \"#utility.yul\":4048:4051   */\n      dup5\n        /* \"#utility.yul\":4044:4060   */\n      add\n        /* \"#utility.yul\":4041:4066   */\n      gt\n        /* \"#utility.yul\":4038:4150   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":4069:4148   */\n      tag_266\n      tag_179\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4038:4150   */\n    tag_265:\n        /* \"#utility.yul\":4159:4213   */\n      tag_267\n        /* \"#utility.yul\":4206:4212   */\n      dup5\n        /* \"#utility.yul\":4201:4204   */\n      dup3\n        /* \"#utility.yul\":4196:4199   */\n      dup6\n        /* \"#utility.yul\":4159:4213   */\n      tag_185\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3878:4219   */\n      pop\n        /* \"#utility.yul\":3794:4219   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4579   */\n    tag_187:\n        /* \"#utility.yul\":4295:4300   */\n      0x00\n        /* \"#utility.yul\":4344:4347   */\n      dup3\n        /* \"#utility.yul\":4337:4341   */\n      0x1f\n        /* \"#utility.yul\":4329:4335   */\n      dup4\n        /* \"#utility.yul\":4325:4342   */\n      add\n        /* \"#utility.yul\":4321:4348   */\n      slt\n        /* \"#utility.yul\":4311:4433   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4352:4431   */\n      tag_270\n      tag_178\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4311:4433   */\n    tag_269:\n        /* \"#utility.yul\":4469:4475   */\n      dup2\n        /* \"#utility.yul\":4456:4476   */\n      calldataload\n        /* \"#utility.yul\":4494:4573   */\n      tag_271\n        /* \"#utility.yul\":4569:4572   */\n      dup5\n        /* \"#utility.yul\":4561:4567   */\n      dup3\n        /* \"#utility.yul\":4554:4558   */\n      0x20\n        /* \"#utility.yul\":4546:4552   */\n      dup7\n        /* \"#utility.yul\":4542:4559   */\n      add\n        /* \"#utility.yul\":4494:4573   */\n      tag_186\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4485:4573   */\n      swap2\n      pop\n        /* \"#utility.yul\":4301:4579   */\n      pop\n        /* \"#utility.yul\":4239:4579   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4585:5419   */\n    tag_36:\n        /* \"#utility.yul\":4673:4679   */\n      0x00\n        /* \"#utility.yul\":4681:4687   */\n      dup1\n        /* \"#utility.yul\":4730:4732   */\n      0x40\n        /* \"#utility.yul\":4718:4727   */\n      dup4\n        /* \"#utility.yul\":4709:4716   */\n      dup6\n        /* \"#utility.yul\":4705:4728   */\n      sub\n        /* \"#utility.yul\":4701:4733   */\n      slt\n        /* \"#utility.yul\":4698:4817   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4736:4815   */\n      tag_274\n      tag_168\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4698:4817   */\n    tag_273:\n        /* \"#utility.yul\":4884:4885   */\n      0x00\n        /* \"#utility.yul\":4873:4882   */\n      dup4\n        /* \"#utility.yul\":4869:4886   */\n      add\n        /* \"#utility.yul\":4856:4887   */\n      calldataload\n        /* \"#utility.yul\":4914:4932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4906:4912   */\n      dup2\n        /* \"#utility.yul\":4903:4933   */\n      gt\n        /* \"#utility.yul\":4900:5017   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4936:5015   */\n      tag_276\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4900:5017   */\n    tag_275:\n        /* \"#utility.yul\":5041:5104   */\n      tag_277\n        /* \"#utility.yul\":5096:5103   */\n      dup6\n        /* \"#utility.yul\":5087:5093   */\n      dup3\n        /* \"#utility.yul\":5076:5085   */\n      dup7\n        /* \"#utility.yul\":5072:5094   */\n      add\n        /* \"#utility.yul\":5041:5104   */\n      tag_187\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5031:5104   */\n      swap3\n      pop\n        /* \"#utility.yul\":4827:5114   */\n      pop\n        /* \"#utility.yul\":5181:5183   */\n      0x20\n        /* \"#utility.yul\":5170:5179   */\n      dup4\n        /* \"#utility.yul\":5166:5184   */\n      add\n        /* \"#utility.yul\":5153:5185   */\n      calldataload\n        /* \"#utility.yul\":5212:5230   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5204:5210   */\n      dup2\n        /* \"#utility.yul\":5201:5231   */\n      gt\n        /* \"#utility.yul\":5198:5315   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":5234:5313   */\n      tag_279\n      tag_169\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5198:5315   */\n    tag_278:\n        /* \"#utility.yul\":5339:5402   */\n      tag_280\n        /* \"#utility.yul\":5394:5401   */\n      dup6\n        /* \"#utility.yul\":5385:5391   */\n      dup3\n        /* \"#utility.yul\":5374:5383   */\n      dup7\n        /* \"#utility.yul\":5370:5392   */\n      add\n        /* \"#utility.yul\":5339:5402   */\n      tag_187\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5329:5402   */\n      swap2\n      pop\n        /* \"#utility.yul\":5124:5412   */\n      pop\n        /* \"#utility.yul\":4585:5419   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5425:5934   */\n    tag_40:\n        /* \"#utility.yul\":5494:5500   */\n      0x00\n        /* \"#utility.yul\":5543:5545   */\n      0x20\n        /* \"#utility.yul\":5531:5540   */\n      dup3\n        /* \"#utility.yul\":5522:5529   */\n      dup5\n        /* \"#utility.yul\":5518:5541   */\n      sub\n        /* \"#utility.yul\":5514:5546   */\n      slt\n        /* \"#utility.yul\":5511:5630   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5549:5628   */\n      tag_283\n      tag_168\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5511:5630   */\n    tag_282:\n        /* \"#utility.yul\":5697:5698   */\n      0x00\n        /* \"#utility.yul\":5686:5695   */\n      dup3\n        /* \"#utility.yul\":5682:5699   */\n      add\n        /* \"#utility.yul\":5669:5700   */\n      calldataload\n        /* \"#utility.yul\":5727:5745   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5719:5725   */\n      dup2\n        /* \"#utility.yul\":5716:5746   */\n      gt\n        /* \"#utility.yul\":5713:5830   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5749:5828   */\n      tag_285\n      tag_169\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5713:5830   */\n    tag_284:\n        /* \"#utility.yul\":5854:5917   */\n      tag_286\n        /* \"#utility.yul\":5909:5916   */\n      dup5\n        /* \"#utility.yul\":5900:5906   */\n      dup3\n        /* \"#utility.yul\":5889:5898   */\n      dup6\n        /* \"#utility.yul\":5885:5907   */\n      add\n        /* \"#utility.yul\":5854:5917   */\n      tag_187\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5844:5917   */\n      swap2\n      pop\n        /* \"#utility.yul\":5640:5927   */\n      pop\n        /* \"#utility.yul\":5425:5934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5940:6039   */\n    tag_188:\n        /* \"#utility.yul\":5992:5998   */\n      0x00\n        /* \"#utility.yul\":6026:6031   */\n      dup2\n        /* \"#utility.yul\":6020:6032   */\n      mload\n        /* \"#utility.yul\":6010:6032   */\n      swap1\n      pop\n        /* \"#utility.yul\":5940:6039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6045:6214   */\n    tag_189:\n        /* \"#utility.yul\":6129:6140   */\n      0x00\n        /* \"#utility.yul\":6163:6169   */\n      dup3\n        /* \"#utility.yul\":6158:6161   */\n      dup3\n        /* \"#utility.yul\":6151:6170   */\n      mstore\n        /* \"#utility.yul\":6203:6207   */\n      0x20\n        /* \"#utility.yul\":6198:6201   */\n      dup3\n        /* \"#utility.yul\":6194:6208   */\n      add\n        /* \"#utility.yul\":6179:6208   */\n      swap1\n      pop\n        /* \"#utility.yul\":6045:6214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6220:6359   */\n    tag_190:\n        /* \"#utility.yul\":6309:6315   */\n      dup3\n        /* \"#utility.yul\":6304:6307   */\n      dup2\n        /* \"#utility.yul\":6299:6302   */\n      dup4\n        /* \"#utility.yul\":6293:6316   */\n      mcopy\n        /* \"#utility.yul\":6350:6351   */\n      0x00\n        /* \"#utility.yul\":6341:6347   */\n      dup4\n        /* \"#utility.yul\":6336:6339   */\n      dup4\n        /* \"#utility.yul\":6332:6348   */\n      add\n        /* \"#utility.yul\":6325:6352   */\n      mstore\n        /* \"#utility.yul\":6220:6359   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6365:6742   */\n    tag_191:\n        /* \"#utility.yul\":6453:6456   */\n      0x00\n        /* \"#utility.yul\":6481:6520   */\n      tag_291\n        /* \"#utility.yul\":6514:6519   */\n      dup3\n        /* \"#utility.yul\":6481:6520   */\n      tag_188\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6536:6607   */\n      tag_292\n        /* \"#utility.yul\":6600:6606   */\n      dup2\n        /* \"#utility.yul\":6595:6598   */\n      dup6\n        /* \"#utility.yul\":6536:6607   */\n      tag_189\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6529:6607   */\n      swap4\n      pop\n        /* \"#utility.yul\":6616:6681   */\n      tag_293\n        /* \"#utility.yul\":6674:6680   */\n      dup2\n        /* \"#utility.yul\":6669:6672   */\n      dup6\n        /* \"#utility.yul\":6662:6666   */\n      0x20\n        /* \"#utility.yul\":6655:6660   */\n      dup7\n        /* \"#utility.yul\":6651:6667   */\n      add\n        /* \"#utility.yul\":6616:6681   */\n      tag_190\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6706:6735   */\n      tag_294\n        /* \"#utility.yul\":6728:6734   */\n      dup2\n        /* \"#utility.yul\":6706:6735   */\n      tag_180\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6701:6704   */\n      dup5\n        /* \"#utility.yul\":6697:6736   */\n      add\n        /* \"#utility.yul\":6690:6736   */\n      swap2\n      pop\n        /* \"#utility.yul\":6457:6742   */\n      pop\n        /* \"#utility.yul\":6365:6742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6748:7061   */\n    tag_43:\n        /* \"#utility.yul\":6861:6865   */\n      0x00\n        /* \"#utility.yul\":6899:6901   */\n      0x20\n        /* \"#utility.yul\":6888:6897   */\n      dup3\n        /* \"#utility.yul\":6884:6902   */\n      add\n        /* \"#utility.yul\":6876:6902   */\n      swap1\n      pop\n        /* \"#utility.yul\":6948:6957   */\n      dup2\n        /* \"#utility.yul\":6942:6946   */\n      dup2\n        /* \"#utility.yul\":6938:6958   */\n      sub\n        /* \"#utility.yul\":6934:6935   */\n      0x00\n        /* \"#utility.yul\":6923:6932   */\n      dup4\n        /* \"#utility.yul\":6919:6936   */\n      add\n        /* \"#utility.yul\":6912:6959   */\n      mstore\n        /* \"#utility.yul\":6976:7054   */\n      tag_296\n        /* \"#utility.yul\":7049:7053   */\n      dup2\n        /* \"#utility.yul\":7040:7046   */\n      dup5\n        /* \"#utility.yul\":6976:7054   */\n      tag_191\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6968:7054   */\n      swap1\n      pop\n        /* \"#utility.yul\":6748:7061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7067:8046   */\n    tag_49:\n        /* \"#utility.yul\":7164:7170   */\n      0x00\n        /* \"#utility.yul\":7172:7178   */\n      dup1\n        /* \"#utility.yul\":7180:7186   */\n      0x00\n        /* \"#utility.yul\":7229:7231   */\n      0x60\n        /* \"#utility.yul\":7217:7226   */\n      dup5\n        /* \"#utility.yul\":7208:7215   */\n      dup7\n        /* \"#utility.yul\":7204:7227   */\n      sub\n        /* \"#utility.yul\":7200:7232   */\n      slt\n        /* \"#utility.yul\":7197:7316   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":7235:7314   */\n      tag_299\n      tag_168\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7197:7316   */\n    tag_298:\n        /* \"#utility.yul\":7383:7384   */\n      0x00\n        /* \"#utility.yul\":7372:7381   */\n      dup5\n        /* \"#utility.yul\":7368:7385   */\n      add\n        /* \"#utility.yul\":7355:7386   */\n      calldataload\n        /* \"#utility.yul\":7413:7431   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7405:7411   */\n      dup2\n        /* \"#utility.yul\":7402:7432   */\n      gt\n        /* \"#utility.yul\":7399:7516   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":7435:7514   */\n      tag_301\n      tag_169\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7399:7516   */\n    tag_300:\n        /* \"#utility.yul\":7540:7603   */\n      tag_302\n        /* \"#utility.yul\":7595:7602   */\n      dup7\n        /* \"#utility.yul\":7586:7592   */\n      dup3\n        /* \"#utility.yul\":7575:7584   */\n      dup8\n        /* \"#utility.yul\":7571:7593   */\n      add\n        /* \"#utility.yul\":7540:7603   */\n      tag_187\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7530:7603   */\n      swap4\n      pop\n        /* \"#utility.yul\":7326:7613   */\n      pop\n        /* \"#utility.yul\":7652:7654   */\n      0x20\n        /* \"#utility.yul\":7678:7731   */\n      tag_303\n        /* \"#utility.yul\":7723:7730   */\n      dup7\n        /* \"#utility.yul\":7714:7720   */\n      dup3\n        /* \"#utility.yul\":7703:7712   */\n      dup8\n        /* \"#utility.yul\":7699:7721   */\n      add\n        /* \"#utility.yul\":7678:7731   */\n      tag_177\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7668:7731   */\n      swap3\n      pop\n        /* \"#utility.yul\":7623:7741   */\n      pop\n        /* \"#utility.yul\":7808:7810   */\n      0x40\n        /* \"#utility.yul\":7797:7806   */\n      dup5\n        /* \"#utility.yul\":7793:7811   */\n      add\n        /* \"#utility.yul\":7780:7812   */\n      calldataload\n        /* \"#utility.yul\":7839:7857   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7831:7837   */\n      dup2\n        /* \"#utility.yul\":7828:7858   */\n      gt\n        /* \"#utility.yul\":7825:7942   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":7861:7940   */\n      tag_305\n      tag_169\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7825:7942   */\n    tag_304:\n        /* \"#utility.yul\":7966:8029   */\n      tag_306\n        /* \"#utility.yul\":8021:8028   */\n      dup7\n        /* \"#utility.yul\":8012:8018   */\n      dup3\n        /* \"#utility.yul\":8001:8010   */\n      dup8\n        /* \"#utility.yul\":7997:8019   */\n      add\n        /* \"#utility.yul\":7966:8029   */\n      tag_187\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7956:8029   */\n      swap2\n      pop\n        /* \"#utility.yul\":7751:8039   */\n      pop\n        /* \"#utility.yul\":7067:8046   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8052:9289   */\n    tag_56:\n        /* \"#utility.yul\":8166:8172   */\n      0x00\n        /* \"#utility.yul\":8174:8180   */\n      dup1\n        /* \"#utility.yul\":8182:8188   */\n      0x00\n        /* \"#utility.yul\":8190:8196   */\n      dup1\n        /* \"#utility.yul\":8198:8204   */\n      0x00\n        /* \"#utility.yul\":8206:8212   */\n      dup1\n        /* \"#utility.yul\":8255:8258   */\n      0xc0\n        /* \"#utility.yul\":8243:8252   */\n      dup8\n        /* \"#utility.yul\":8234:8241   */\n      dup10\n        /* \"#utility.yul\":8230:8253   */\n      sub\n        /* \"#utility.yul\":8226:8259   */\n      slt\n        /* \"#utility.yul\":8223:8343   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":8262:8341   */\n      tag_309\n      tag_168\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8223:8343   */\n    tag_308:\n        /* \"#utility.yul\":8410:8411   */\n      0x00\n        /* \"#utility.yul\":8399:8408   */\n      dup8\n        /* \"#utility.yul\":8395:8412   */\n      add\n        /* \"#utility.yul\":8382:8413   */\n      calldataload\n        /* \"#utility.yul\":8440:8458   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8432:8438   */\n      dup2\n        /* \"#utility.yul\":8429:8459   */\n      gt\n        /* \"#utility.yul\":8426:8543   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":8462:8541   */\n      tag_311\n      tag_169\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8426:8543   */\n    tag_310:\n        /* \"#utility.yul\":8567:8630   */\n      tag_312\n        /* \"#utility.yul\":8622:8629   */\n      dup10\n        /* \"#utility.yul\":8613:8619   */\n      dup3\n        /* \"#utility.yul\":8602:8611   */\n      dup11\n        /* \"#utility.yul\":8598:8620   */\n      add\n        /* \"#utility.yul\":8567:8630   */\n      tag_187\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":8557:8630   */\n      swap7\n      pop\n        /* \"#utility.yul\":8353:8640   */\n      pop\n        /* \"#utility.yul\":8679:8681   */\n      0x20\n        /* \"#utility.yul\":8705:8758   */\n      tag_313\n        /* \"#utility.yul\":8750:8757   */\n      dup10\n        /* \"#utility.yul\":8741:8747   */\n      dup3\n        /* \"#utility.yul\":8730:8739   */\n      dup11\n        /* \"#utility.yul\":8726:8748   */\n      add\n        /* \"#utility.yul\":8705:8758   */\n      tag_177\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8695:8758   */\n      swap6\n      pop\n        /* \"#utility.yul\":8650:8768   */\n      pop\n        /* \"#utility.yul\":8807:8809   */\n      0x40\n        /* \"#utility.yul\":8833:8886   */\n      tag_314\n        /* \"#utility.yul\":8878:8885   */\n      dup10\n        /* \"#utility.yul\":8869:8875   */\n      dup3\n        /* \"#utility.yul\":8858:8867   */\n      dup11\n        /* \"#utility.yul\":8854:8876   */\n      add\n        /* \"#utility.yul\":8833:8886   */\n      tag_177\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8823:8886   */\n      swap5\n      pop\n        /* \"#utility.yul\":8778:8896   */\n      pop\n        /* \"#utility.yul\":8935:8937   */\n      0x60\n        /* \"#utility.yul\":8961:9014   */\n      tag_315\n        /* \"#utility.yul\":9006:9013   */\n      dup10\n        /* \"#utility.yul\":8997:9003   */\n      dup3\n        /* \"#utility.yul\":8986:8995   */\n      dup11\n        /* \"#utility.yul\":8982:9004   */\n      add\n        /* \"#utility.yul\":8961:9014   */\n      tag_177\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8951:9014   */\n      swap4\n      pop\n        /* \"#utility.yul\":8906:9024   */\n      pop\n        /* \"#utility.yul\":9063:9066   */\n      0x80\n        /* \"#utility.yul\":9090:9143   */\n      tag_316\n        /* \"#utility.yul\":9135:9142   */\n      dup10\n        /* \"#utility.yul\":9126:9132   */\n      dup3\n        /* \"#utility.yul\":9115:9124   */\n      dup11\n        /* \"#utility.yul\":9111:9133   */\n      add\n        /* \"#utility.yul\":9090:9143   */\n      tag_177\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9080:9143   */\n      swap3\n      pop\n        /* \"#utility.yul\":9034:9153   */\n      pop\n        /* \"#utility.yul\":9192:9195   */\n      0xa0\n        /* \"#utility.yul\":9219:9272   */\n      tag_317\n        /* \"#utility.yul\":9264:9271   */\n      dup10\n        /* \"#utility.yul\":9255:9261   */\n      dup3\n        /* \"#utility.yul\":9244:9253   */\n      dup11\n        /* \"#utility.yul\":9240:9262   */\n      add\n        /* \"#utility.yul\":9219:9272   */\n      tag_177\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":9209:9272   */\n      swap2\n      pop\n        /* \"#utility.yul\":9163:9282   */\n      pop\n        /* \"#utility.yul\":8052:9289   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":9295:9413   */\n    tag_192:\n        /* \"#utility.yul\":9382:9406   */\n      tag_319\n        /* \"#utility.yul\":9400:9405   */\n      dup2\n        /* \"#utility.yul\":9382:9406   */\n      tag_171\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9377:9380   */\n      dup3\n        /* \"#utility.yul\":9370:9407   */\n      mstore\n        /* \"#utility.yul\":9295:9413   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9419:10194   */\n    tag_67:\n        /* \"#utility.yul\":9652:9656   */\n      0x00\n        /* \"#utility.yul\":9690:9693   */\n      0xc0\n        /* \"#utility.yul\":9679:9688   */\n      dup3\n        /* \"#utility.yul\":9675:9694   */\n      add\n        /* \"#utility.yul\":9667:9694   */\n      swap1\n      pop\n        /* \"#utility.yul\":9704:9775   */\n      tag_321\n        /* \"#utility.yul\":9772:9773   */\n      0x00\n        /* \"#utility.yul\":9761:9770   */\n      dup4\n        /* \"#utility.yul\":9757:9774   */\n      add\n        /* \"#utility.yul\":9748:9754   */\n      dup10\n        /* \"#utility.yul\":9704:9775   */\n      tag_192\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9785:9857   */\n      tag_322\n        /* \"#utility.yul\":9853:9855   */\n      0x20\n        /* \"#utility.yul\":9842:9851   */\n      dup4\n        /* \"#utility.yul\":9838:9856   */\n      add\n        /* \"#utility.yul\":9829:9835   */\n      dup9\n        /* \"#utility.yul\":9785:9857   */\n      tag_175\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9867:9939   */\n      tag_323\n        /* \"#utility.yul\":9935:9937   */\n      0x40\n        /* \"#utility.yul\":9924:9933   */\n      dup4\n        /* \"#utility.yul\":9920:9938   */\n      add\n        /* \"#utility.yul\":9911:9917   */\n      dup8\n        /* \"#utility.yul\":9867:9939   */\n      tag_175\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9949:10021   */\n      tag_324\n        /* \"#utility.yul\":10017:10019   */\n      0x60\n        /* \"#utility.yul\":10006:10015   */\n      dup4\n        /* \"#utility.yul\":10002:10020   */\n      add\n        /* \"#utility.yul\":9993:9999   */\n      dup7\n        /* \"#utility.yul\":9949:10021   */\n      tag_175\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":10031:10104   */\n      tag_325\n        /* \"#utility.yul\":10099:10102   */\n      0x80\n        /* \"#utility.yul\":10088:10097   */\n      dup4\n        /* \"#utility.yul\":10084:10103   */\n      add\n        /* \"#utility.yul\":10075:10081   */\n      dup6\n        /* \"#utility.yul\":10031:10104   */\n      tag_175\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10114:10187   */\n      tag_326\n        /* \"#utility.yul\":10182:10185   */\n      0xa0\n        /* \"#utility.yul\":10171:10180   */\n      dup4\n        /* \"#utility.yul\":10167:10186   */\n      add\n        /* \"#utility.yul\":10158:10164   */\n      dup5\n        /* \"#utility.yul\":10114:10187   */\n      tag_175\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9419:10194   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10200:10999   */\n    tag_73:\n        /* \"#utility.yul\":10287:10293   */\n      0x00\n        /* \"#utility.yul\":10295:10301   */\n      dup1\n        /* \"#utility.yul\":10303:10309   */\n      0x00\n        /* \"#utility.yul\":10352:10354   */\n      0x60\n        /* \"#utility.yul\":10340:10349   */\n      dup5\n        /* \"#utility.yul\":10331:10338   */\n      dup7\n        /* \"#utility.yul\":10327:10350   */\n      sub\n        /* \"#utility.yul\":10323:10355   */\n      slt\n        /* \"#utility.yul\":10320:10439   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":10358:10437   */\n      tag_329\n      tag_168\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10320:10439   */\n    tag_328:\n        /* \"#utility.yul\":10506:10507   */\n      0x00\n        /* \"#utility.yul\":10495:10504   */\n      dup5\n        /* \"#utility.yul\":10491:10508   */\n      add\n        /* \"#utility.yul\":10478:10509   */\n      calldataload\n        /* \"#utility.yul\":10536:10554   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10528:10534   */\n      dup2\n        /* \"#utility.yul\":10525:10555   */\n      gt\n        /* \"#utility.yul\":10522:10639   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":10558:10637   */\n      tag_331\n      tag_169\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":10522:10639   */\n    tag_330:\n        /* \"#utility.yul\":10663:10726   */\n      tag_332\n        /* \"#utility.yul\":10718:10725   */\n      dup7\n        /* \"#utility.yul\":10709:10715   */\n      dup3\n        /* \"#utility.yul\":10698:10707   */\n      dup8\n        /* \"#utility.yul\":10694:10716   */\n      add\n        /* \"#utility.yul\":10663:10726   */\n      tag_187\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10653:10726   */\n      swap4\n      pop\n        /* \"#utility.yul\":10449:10736   */\n      pop\n        /* \"#utility.yul\":10775:10777   */\n      0x20\n        /* \"#utility.yul\":10801:10854   */\n      tag_333\n        /* \"#utility.yul\":10846:10853   */\n      dup7\n        /* \"#utility.yul\":10837:10843   */\n      dup3\n        /* \"#utility.yul\":10826:10835   */\n      dup8\n        /* \"#utility.yul\":10822:10844   */\n      add\n        /* \"#utility.yul\":10801:10854   */\n      tag_177\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10791:10854   */\n      swap3\n      pop\n        /* \"#utility.yul\":10746:10864   */\n      pop\n        /* \"#utility.yul\":10903:10905   */\n      0x40\n        /* \"#utility.yul\":10929:10982   */\n      tag_334\n        /* \"#utility.yul\":10974:10981   */\n      dup7\n        /* \"#utility.yul\":10965:10971   */\n      dup3\n        /* \"#utility.yul\":10954:10963   */\n      dup8\n        /* \"#utility.yul\":10950:10972   */\n      add\n        /* \"#utility.yul\":10929:10982   */\n      tag_177\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10919:10982   */\n      swap2\n      pop\n        /* \"#utility.yul\":10874:10992   */\n      pop\n        /* \"#utility.yul\":10200:10999   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11005:11185   */\n    tag_193:\n        /* \"#utility.yul\":11053:11130   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11050:11051   */\n      0x00\n        /* \"#utility.yul\":11043:11131   */\n      mstore\n        /* \"#utility.yul\":11150:11154   */\n      0x11\n        /* \"#utility.yul\":11147:11148   */\n      0x04\n        /* \"#utility.yul\":11140:11155   */\n      mstore\n        /* \"#utility.yul\":11174:11178   */\n      0x24\n        /* \"#utility.yul\":11171:11172   */\n      0x00\n        /* \"#utility.yul\":11164:11179   */\n      revert\n        /* \"#utility.yul\":11191:11382   */\n    tag_84:\n        /* \"#utility.yul\":11231:11234   */\n      0x00\n        /* \"#utility.yul\":11250:11270   */\n      tag_337\n        /* \"#utility.yul\":11268:11269   */\n      dup3\n        /* \"#utility.yul\":11250:11270   */\n      tag_174\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11245:11270   */\n      swap2\n      pop\n        /* \"#utility.yul\":11284:11304   */\n      tag_338\n        /* \"#utility.yul\":11302:11303   */\n      dup4\n        /* \"#utility.yul\":11284:11304   */\n      tag_174\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11279:11304   */\n      swap3\n      pop\n        /* \"#utility.yul\":11327:11328   */\n      dup3\n        /* \"#utility.yul\":11324:11325   */\n      dup3\n        /* \"#utility.yul\":11320:11329   */\n      add\n        /* \"#utility.yul\":11313:11329   */\n      swap1\n      pop\n        /* \"#utility.yul\":11348:11351   */\n      dup1\n        /* \"#utility.yul\":11345:11346   */\n      dup3\n        /* \"#utility.yul\":11342:11352   */\n      gt\n        /* \"#utility.yul\":11339:11375   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":11355:11373   */\n      tag_340\n      tag_193\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11339:11375   */\n    tag_339:\n        /* \"#utility.yul\":11191:11382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11388:11582   */\n    tag_86:\n        /* \"#utility.yul\":11428:11432   */\n      0x00\n        /* \"#utility.yul\":11448:11468   */\n      tag_342\n        /* \"#utility.yul\":11466:11467   */\n      dup3\n        /* \"#utility.yul\":11448:11468   */\n      tag_174\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11443:11468   */\n      swap2\n      pop\n        /* \"#utility.yul\":11482:11502   */\n      tag_343\n        /* \"#utility.yul\":11500:11501   */\n      dup4\n        /* \"#utility.yul\":11482:11502   */\n      tag_174\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11477:11502   */\n      swap3\n      pop\n        /* \"#utility.yul\":11526:11527   */\n      dup3\n        /* \"#utility.yul\":11523:11524   */\n      dup3\n        /* \"#utility.yul\":11519:11528   */\n      sub\n        /* \"#utility.yul\":11511:11528   */\n      swap1\n      pop\n        /* \"#utility.yul\":11550:11551   */\n      dup2\n        /* \"#utility.yul\":11544:11548   */\n      dup2\n        /* \"#utility.yul\":11541:11552   */\n      gt\n        /* \"#utility.yul\":11538:11575   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":11555:11573   */\n      tag_345\n      tag_193\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11538:11575   */\n    tag_344:\n        /* \"#utility.yul\":11388:11582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11588:11736   */\n    tag_194:\n        /* \"#utility.yul\":11690:11701   */\n      0x00\n        /* \"#utility.yul\":11727:11730   */\n      dup2\n        /* \"#utility.yul\":11712:11730   */\n      swap1\n      pop\n        /* \"#utility.yul\":11588:11736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11742:12132   */\n    tag_195:\n        /* \"#utility.yul\":11848:11851   */\n      0x00\n        /* \"#utility.yul\":11876:11915   */\n      tag_348\n        /* \"#utility.yul\":11909:11914   */\n      dup3\n        /* \"#utility.yul\":11876:11915   */\n      tag_188\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11931:12020   */\n      tag_349\n        /* \"#utility.yul\":12013:12019   */\n      dup2\n        /* \"#utility.yul\":12008:12011   */\n      dup6\n        /* \"#utility.yul\":11931:12020   */\n      tag_194\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":11924:12020   */\n      swap4\n      pop\n        /* \"#utility.yul\":12029:12094   */\n      tag_350\n        /* \"#utility.yul\":12087:12093   */\n      dup2\n        /* \"#utility.yul\":12082:12085   */\n      dup6\n        /* \"#utility.yul\":12075:12079   */\n      0x20\n        /* \"#utility.yul\":12068:12073   */\n      dup7\n        /* \"#utility.yul\":12064:12080   */\n      add\n        /* \"#utility.yul\":12029:12094   */\n      tag_190\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":12119:12125   */\n      dup1\n        /* \"#utility.yul\":12114:12117   */\n      dup5\n        /* \"#utility.yul\":12110:12126   */\n      add\n        /* \"#utility.yul\":12103:12126   */\n      swap2\n      pop\n        /* \"#utility.yul\":11852:12132   */\n      pop\n        /* \"#utility.yul\":11742:12132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12138:12413   */\n    tag_92:\n        /* \"#utility.yul\":12270:12273   */\n      0x00\n        /* \"#utility.yul\":12292:12387   */\n      tag_352\n        /* \"#utility.yul\":12383:12386   */\n      dup3\n        /* \"#utility.yul\":12374:12380   */\n      dup5\n        /* \"#utility.yul\":12292:12387   */\n      tag_195\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":12285:12387   */\n      swap2\n      pop\n        /* \"#utility.yul\":12404:12407   */\n      dup2\n        /* \"#utility.yul\":12397:12407   */\n      swap1\n      pop\n        /* \"#utility.yul\":12138:12413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12419:12599   */\n    tag_196:\n        /* \"#utility.yul\":12467:12544   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12464:12465   */\n      0x00\n        /* \"#utility.yul\":12457:12545   */\n      mstore\n        /* \"#utility.yul\":12564:12568   */\n      0x22\n        /* \"#utility.yul\":12561:12562   */\n      0x04\n        /* \"#utility.yul\":12554:12569   */\n      mstore\n        /* \"#utility.yul\":12588:12592   */\n      0x24\n        /* \"#utility.yul\":12585:12586   */\n      0x00\n        /* \"#utility.yul\":12578:12593   */\n      revert\n        /* \"#utility.yul\":12605:12925   */\n    tag_98:\n        /* \"#utility.yul\":12649:12655   */\n      0x00\n        /* \"#utility.yul\":12686:12687   */\n      0x02\n        /* \"#utility.yul\":12680:12684   */\n      dup3\n        /* \"#utility.yul\":12676:12688   */\n      div\n        /* \"#utility.yul\":12666:12688   */\n      swap1\n      pop\n        /* \"#utility.yul\":12733:12734   */\n      0x01\n        /* \"#utility.yul\":12727:12731   */\n      dup3\n        /* \"#utility.yul\":12723:12735   */\n      and\n        /* \"#utility.yul\":12754:12772   */\n      dup1\n        /* \"#utility.yul\":12744:12825   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":12810:12814   */\n      0x7f\n        /* \"#utility.yul\":12802:12808   */\n      dup3\n        /* \"#utility.yul\":12798:12815   */\n      and\n        /* \"#utility.yul\":12788:12815   */\n      swap2\n      pop\n        /* \"#utility.yul\":12744:12825   */\n    tag_355:\n        /* \"#utility.yul\":12872:12874   */\n      0x20\n        /* \"#utility.yul\":12864:12870   */\n      dup3\n        /* \"#utility.yul\":12861:12875   */\n      lt\n        /* \"#utility.yul\":12841:12859   */\n      dup2\n        /* \"#utility.yul\":12838:12876   */\n      sub\n        /* \"#utility.yul\":12835:12919   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":12891:12909   */\n      tag_357\n      tag_196\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":12835:12919   */\n    tag_356:\n        /* \"#utility.yul\":12656:12925   */\n      pop\n        /* \"#utility.yul\":12605:12925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12931:13072   */\n    tag_197:\n        /* \"#utility.yul\":12980:12984   */\n      0x00\n        /* \"#utility.yul\":13003:13006   */\n      dup2\n        /* \"#utility.yul\":12995:13006   */\n      swap1\n      pop\n        /* \"#utility.yul\":13026:13029   */\n      dup2\n        /* \"#utility.yul\":13023:13024   */\n      0x00\n        /* \"#utility.yul\":13016:13030   */\n      mstore\n        /* \"#utility.yul\":13060:13064   */\n      0x20\n        /* \"#utility.yul\":13057:13058   */\n      0x00\n        /* \"#utility.yul\":13047:13065   */\n      keccak256\n        /* \"#utility.yul\":13039:13065   */\n      swap1\n      pop\n        /* \"#utility.yul\":12931:13072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13078:13171   */\n    tag_198:\n        /* \"#utility.yul\":13115:13121   */\n      0x00\n        /* \"#utility.yul\":13162:13164   */\n      0x20\n        /* \"#utility.yul\":13157:13159   */\n      0x1f\n        /* \"#utility.yul\":13150:13155   */\n      dup4\n        /* \"#utility.yul\":13146:13160   */\n      add\n        /* \"#utility.yul\":13142:13165   */\n      div\n        /* \"#utility.yul\":13132:13165   */\n      swap1\n      pop\n        /* \"#utility.yul\":13078:13171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13177:13284   */\n    tag_199:\n        /* \"#utility.yul\":13221:13229   */\n      0x00\n        /* \"#utility.yul\":13271:13276   */\n      dup3\n        /* \"#utility.yul\":13265:13269   */\n      dup3\n        /* \"#utility.yul\":13261:13277   */\n      shl\n        /* \"#utility.yul\":13240:13277   */\n      swap1\n      pop\n        /* \"#utility.yul\":13177:13284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13290:13683   */\n    tag_200:\n        /* \"#utility.yul\":13359:13365   */\n      0x00\n        /* \"#utility.yul\":13409:13410   */\n      0x08\n        /* \"#utility.yul\":13397:13407   */\n      dup4\n        /* \"#utility.yul\":13393:13411   */\n      mul\n        /* \"#utility.yul\":13432:13529   */\n      tag_362\n        /* \"#utility.yul\":13462:13528   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13451:13460   */\n      dup3\n        /* \"#utility.yul\":13432:13529   */\n      tag_199\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":13550:13589   */\n      tag_363\n        /* \"#utility.yul\":13580:13588   */\n      dup7\n        /* \"#utility.yul\":13569:13578   */\n      dup4\n        /* \"#utility.yul\":13550:13589   */\n      tag_199\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":13538:13589   */\n      swap6\n      pop\n        /* \"#utility.yul\":13622:13626   */\n      dup1\n        /* \"#utility.yul\":13618:13627   */\n      not\n        /* \"#utility.yul\":13611:13616   */\n      dup5\n        /* \"#utility.yul\":13607:13628   */\n      and\n        /* \"#utility.yul\":13598:13628   */\n      swap4\n      pop\n        /* \"#utility.yul\":13671:13675   */\n      dup1\n        /* \"#utility.yul\":13661:13669   */\n      dup7\n        /* \"#utility.yul\":13657:13676   */\n      and\n        /* \"#utility.yul\":13650:13655   */\n      dup5\n        /* \"#utility.yul\":13647:13677   */\n      or\n        /* \"#utility.yul\":13637:13677   */\n      swap3\n      pop\n        /* \"#utility.yul\":13366:13683   */\n      pop\n      pop\n        /* \"#utility.yul\":13290:13683   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13689:13749   */\n    tag_201:\n        /* \"#utility.yul\":13717:13720   */\n      0x00\n        /* \"#utility.yul\":13738:13743   */\n      dup2\n        /* \"#utility.yul\":13731:13743   */\n      swap1\n      pop\n        /* \"#utility.yul\":13689:13749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13755:13897   */\n    tag_202:\n        /* \"#utility.yul\":13805:13814   */\n      0x00\n        /* \"#utility.yul\":13838:13891   */\n      tag_366\n        /* \"#utility.yul\":13856:13890   */\n      tag_367\n        /* \"#utility.yul\":13865:13889   */\n      tag_368\n        /* \"#utility.yul\":13883:13888   */\n      dup5\n        /* \"#utility.yul\":13865:13889   */\n      tag_174\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":13856:13890   */\n      tag_201\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":13838:13891   */\n      tag_174\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":13825:13891   */\n      swap1\n      pop\n        /* \"#utility.yul\":13755:13897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13903:13978   */\n    tag_203:\n        /* \"#utility.yul\":13946:13949   */\n      0x00\n        /* \"#utility.yul\":13967:13972   */\n      dup2\n        /* \"#utility.yul\":13960:13972   */\n      swap1\n      pop\n        /* \"#utility.yul\":13903:13978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13984:14253   */\n    tag_204:\n        /* \"#utility.yul\":14094:14133   */\n      tag_371\n        /* \"#utility.yul\":14125:14132   */\n      dup4\n        /* \"#utility.yul\":14094:14133   */\n      tag_202\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":14155:14246   */\n      tag_372\n        /* \"#utility.yul\":14204:14245   */\n      tag_373\n        /* \"#utility.yul\":14228:14244   */\n      dup3\n        /* \"#utility.yul\":14204:14245   */\n      tag_203\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":14196:14202   */\n      dup5\n        /* \"#utility.yul\":14189:14193   */\n      dup5\n        /* \"#utility.yul\":14183:14194   */\n      sload\n        /* \"#utility.yul\":14155:14246   */\n      tag_200\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":14149:14153   */\n      dup3\n        /* \"#utility.yul\":14142:14247   */\n      sstore\n        /* \"#utility.yul\":14060:14253   */\n      pop\n        /* \"#utility.yul\":13984:14253   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14259:14332   */\n    tag_205:\n        /* \"#utility.yul\":14304:14307   */\n      0x00\n        /* \"#utility.yul\":14259:14332   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14338:14527   */\n    tag_206:\n        /* \"#utility.yul\":14415:14447   */\n      tag_376\n      tag_205\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":14456:14521   */\n      tag_377\n        /* \"#utility.yul\":14514:14520   */\n      dup2\n        /* \"#utility.yul\":14506:14512   */\n      dup5\n        /* \"#utility.yul\":14500:14504   */\n      dup5\n        /* \"#utility.yul\":14456:14521   */\n      tag_204\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":14391:14527   */\n      pop\n        /* \"#utility.yul\":14338:14527   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14533:14719   */\n    tag_207:\n        /* \"#utility.yul\":14593:14713   */\n    tag_379:\n        /* \"#utility.yul\":14610:14613   */\n      dup2\n        /* \"#utility.yul\":14603:14608   */\n      dup2\n        /* \"#utility.yul\":14600:14614   */\n      lt\n        /* \"#utility.yul\":14593:14713   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":14664:14703   */\n      tag_382\n        /* \"#utility.yul\":14701:14702   */\n      0x00\n        /* \"#utility.yul\":14694:14699   */\n      dup3\n        /* \"#utility.yul\":14664:14703   */\n      tag_206\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":14637:14638   */\n      0x01\n        /* \"#utility.yul\":14630:14635   */\n      dup2\n        /* \"#utility.yul\":14626:14639   */\n      add\n        /* \"#utility.yul\":14617:14639   */\n      swap1\n      pop\n        /* \"#utility.yul\":14593:14713   */\n      jump(tag_379)\n    tag_381:\n        /* \"#utility.yul\":14533:14719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14725:15268   */\n    tag_208:\n        /* \"#utility.yul\":14826:14828   */\n      0x1f\n        /* \"#utility.yul\":14821:14824   */\n      dup3\n        /* \"#utility.yul\":14818:14829   */\n      gt\n        /* \"#utility.yul\":14815:15261   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":14860:14898   */\n      tag_385\n        /* \"#utility.yul\":14892:14897   */\n      dup2\n        /* \"#utility.yul\":14860:14898   */\n      tag_197\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":14944:14973   */\n      tag_386\n        /* \"#utility.yul\":14962:14972   */\n      dup5\n        /* \"#utility.yul\":14944:14973   */\n      tag_198\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":14934:14942   */\n      dup2\n        /* \"#utility.yul\":14930:14974   */\n      add\n        /* \"#utility.yul\":15127:15129   */\n      0x20\n        /* \"#utility.yul\":15115:15125   */\n      dup6\n        /* \"#utility.yul\":15112:15130   */\n      lt\n        /* \"#utility.yul\":15109:15158   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":15148:15156   */\n      dup2\n        /* \"#utility.yul\":15133:15156   */\n      swap1\n      pop\n        /* \"#utility.yul\":15109:15158   */\n    tag_387:\n        /* \"#utility.yul\":15171:15251   */\n      tag_388\n        /* \"#utility.yul\":15227:15249   */\n      tag_389\n        /* \"#utility.yul\":15245:15248   */\n      dup6\n        /* \"#utility.yul\":15227:15249   */\n      tag_198\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":15217:15225   */\n      dup4\n        /* \"#utility.yul\":15213:15250   */\n      add\n        /* \"#utility.yul\":15200:15211   */\n      dup3\n        /* \"#utility.yul\":15171:15251   */\n      tag_207\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":14830:15261   */\n      pop\n      pop\n        /* \"#utility.yul\":14815:15261   */\n    tag_384:\n        /* \"#utility.yul\":14725:15268   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15274:15391   */\n    tag_209:\n        /* \"#utility.yul\":15328:15336   */\n      0x00\n        /* \"#utility.yul\":15378:15383   */\n      dup3\n        /* \"#utility.yul\":15372:15376   */\n      dup3\n        /* \"#utility.yul\":15368:15384   */\n      shr\n        /* \"#utility.yul\":15347:15384   */\n      swap1\n      pop\n        /* \"#utility.yul\":15274:15391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15397:15566   */\n    tag_210:\n        /* \"#utility.yul\":15441:15447   */\n      0x00\n        /* \"#utility.yul\":15474:15525   */\n      tag_392\n        /* \"#utility.yul\":15522:15523   */\n      0x00\n        /* \"#utility.yul\":15518:15524   */\n      not\n        /* \"#utility.yul\":15510:15515   */\n      dup5\n        /* \"#utility.yul\":15507:15508   */\n      0x08\n        /* \"#utility.yul\":15503:15516   */\n      mul\n        /* \"#utility.yul\":15474:15525   */\n      tag_209\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":15470:15526   */\n      not\n        /* \"#utility.yul\":15555:15559   */\n      dup1\n        /* \"#utility.yul\":15549:15553   */\n      dup4\n        /* \"#utility.yul\":15545:15560   */\n      and\n        /* \"#utility.yul\":15535:15560   */\n      swap2\n      pop\n        /* \"#utility.yul\":15448:15566   */\n      pop\n        /* \"#utility.yul\":15397:15566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15571:15866   */\n    tag_211:\n        /* \"#utility.yul\":15647:15651   */\n      0x00\n        /* \"#utility.yul\":15793:15822   */\n      tag_394\n        /* \"#utility.yul\":15818:15821   */\n      dup4\n        /* \"#utility.yul\":15812:15816   */\n      dup4\n        /* \"#utility.yul\":15793:15822   */\n      tag_210\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":15785:15822   */\n      swap2\n      pop\n        /* \"#utility.yul\":15855:15858   */\n      dup3\n        /* \"#utility.yul\":15852:15853   */\n      0x02\n        /* \"#utility.yul\":15848:15859   */\n      mul\n        /* \"#utility.yul\":15842:15846   */\n      dup3\n        /* \"#utility.yul\":15839:15860   */\n      or\n        /* \"#utility.yul\":15831:15860   */\n      swap1\n      pop\n        /* \"#utility.yul\":15571:15866   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15871:17266   */\n    tag_94:\n        /* \"#utility.yul\":15988:16025   */\n      tag_396\n        /* \"#utility.yul\":16021:16024   */\n      dup3\n        /* \"#utility.yul\":15988:16025   */\n      tag_188\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":16090:16108   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16082:16088   */\n      dup2\n        /* \"#utility.yul\":16079:16109   */\n      gt\n        /* \"#utility.yul\":16076:16132   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":16112:16130   */\n      tag_398\n      tag_181\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":16076:16132   */\n    tag_397:\n        /* \"#utility.yul\":16156:16194   */\n      tag_399\n        /* \"#utility.yul\":16188:16192   */\n      dup3\n        /* \"#utility.yul\":16182:16193   */\n      sload\n        /* \"#utility.yul\":16156:16194   */\n      tag_98\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":16241:16308   */\n      tag_400\n        /* \"#utility.yul\":16301:16307   */\n      dup3\n        /* \"#utility.yul\":16293:16299   */\n      dup3\n        /* \"#utility.yul\":16287:16291   */\n      dup6\n        /* \"#utility.yul\":16241:16308   */\n      tag_208\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":16335:16336   */\n      0x00\n        /* \"#utility.yul\":16359:16363   */\n      0x20\n        /* \"#utility.yul\":16346:16363   */\n      swap1\n      pop\n        /* \"#utility.yul\":16391:16393   */\n      0x1f\n        /* \"#utility.yul\":16383:16389   */\n      dup4\n        /* \"#utility.yul\":16380:16394   */\n      gt\n        /* \"#utility.yul\":16408:16409   */\n      0x01\n        /* \"#utility.yul\":16403:17021   */\n      dup2\n      eq\n      tag_402\n      jumpi\n        /* \"#utility.yul\":17065:17066   */\n      0x00\n        /* \"#utility.yul\":17082:17088   */\n      dup5\n        /* \"#utility.yul\":17079:17156   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":17131:17140   */\n      dup3\n        /* \"#utility.yul\":17126:17129   */\n      dup8\n        /* \"#utility.yul\":17122:17141   */\n      add\n        /* \"#utility.yul\":17116:17142   */\n      mload\n        /* \"#utility.yul\":17107:17142   */\n      swap1\n      pop\n        /* \"#utility.yul\":17079:17156   */\n    tag_403:\n        /* \"#utility.yul\":17182:17249   */\n      tag_404\n        /* \"#utility.yul\":17242:17248   */\n      dup6\n        /* \"#utility.yul\":17235:17240   */\n      dup3\n        /* \"#utility.yul\":17182:17249   */\n      tag_211\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":17176:17180   */\n      dup7\n        /* \"#utility.yul\":17169:17250   */\n      sstore\n        /* \"#utility.yul\":17038:17260   */\n      pop\n        /* \"#utility.yul\":16373:17260   */\n      jump(tag_401)\n        /* \"#utility.yul\":16403:17021   */\n    tag_402:\n        /* \"#utility.yul\":16455:16459   */\n      0x1f\n        /* \"#utility.yul\":16451:16460   */\n      not\n        /* \"#utility.yul\":16443:16449   */\n      dup5\n        /* \"#utility.yul\":16439:16461   */\n      and\n        /* \"#utility.yul\":16489:16526   */\n      tag_405\n        /* \"#utility.yul\":16521:16525   */\n      dup7\n        /* \"#utility.yul\":16489:16526   */\n      tag_197\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":16548:16549   */\n      0x00\n        /* \"#utility.yul\":16562:16770   */\n    tag_406:\n        /* \"#utility.yul\":16576:16583   */\n      dup3\n        /* \"#utility.yul\":16573:16574   */\n      dup2\n        /* \"#utility.yul\":16570:16584   */\n      lt\n        /* \"#utility.yul\":16562:16770   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":16655:16664   */\n      dup5\n        /* \"#utility.yul\":16650:16653   */\n      dup10\n        /* \"#utility.yul\":16646:16665   */\n      add\n        /* \"#utility.yul\":16640:16666   */\n      mload\n        /* \"#utility.yul\":16632:16638   */\n      dup3\n        /* \"#utility.yul\":16625:16667   */\n      sstore\n        /* \"#utility.yul\":16706:16707   */\n      0x01\n        /* \"#utility.yul\":16698:16704   */\n      dup3\n        /* \"#utility.yul\":16694:16708   */\n      add\n        /* \"#utility.yul\":16684:16708   */\n      swap2\n      pop\n        /* \"#utility.yul\":16753:16755   */\n      0x20\n        /* \"#utility.yul\":16742:16751   */\n      dup6\n        /* \"#utility.yul\":16738:16756   */\n      add\n        /* \"#utility.yul\":16725:16756   */\n      swap5\n      pop\n        /* \"#utility.yul\":16599:16603   */\n      0x20\n        /* \"#utility.yul\":16596:16597   */\n      dup2\n        /* \"#utility.yul\":16592:16604   */\n      add\n        /* \"#utility.yul\":16587:16604   */\n      swap1\n      pop\n        /* \"#utility.yul\":16562:16770   */\n      jump(tag_406)\n    tag_408:\n        /* \"#utility.yul\":16798:16804   */\n      dup7\n        /* \"#utility.yul\":16789:16796   */\n      dup4\n        /* \"#utility.yul\":16786:16805   */\n      lt\n        /* \"#utility.yul\":16783:16962   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":16856:16865   */\n      dup5\n        /* \"#utility.yul\":16851:16854   */\n      dup10\n        /* \"#utility.yul\":16847:16866   */\n      add\n        /* \"#utility.yul\":16841:16867   */\n      mload\n        /* \"#utility.yul\":16899:16947   */\n      tag_410\n        /* \"#utility.yul\":16941:16945   */\n      0x1f\n        /* \"#utility.yul\":16933:16939   */\n      dup10\n        /* \"#utility.yul\":16929:16946   */\n      and\n        /* \"#utility.yul\":16918:16927   */\n      dup3\n        /* \"#utility.yul\":16899:16947   */\n      tag_210\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":16891:16897   */\n      dup4\n        /* \"#utility.yul\":16884:16948   */\n      sstore\n        /* \"#utility.yul\":16806:16962   */\n      pop\n        /* \"#utility.yul\":16783:16962   */\n    tag_409:\n        /* \"#utility.yul\":17008:17009   */\n      0x01\n        /* \"#utility.yul\":17004:17005   */\n      0x02\n        /* \"#utility.yul\":16996:17002   */\n      dup9\n        /* \"#utility.yul\":16992:17006   */\n      mul\n        /* \"#utility.yul\":16988:17010   */\n      add\n        /* \"#utility.yul\":16982:16986   */\n      dup9\n        /* \"#utility.yul\":16975:17011   */\n      sstore\n        /* \"#utility.yul\":16410:17021   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16373:17260   */\n    tag_401:\n      pop\n        /* \"#utility.yul\":15963:17266   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15871:17266   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17272:17714   */\n    tag_110:\n        /* \"#utility.yul\":17421:17425   */\n      0x00\n        /* \"#utility.yul\":17459:17461   */\n      0x60\n        /* \"#utility.yul\":17448:17457   */\n      dup3\n        /* \"#utility.yul\":17444:17462   */\n      add\n        /* \"#utility.yul\":17436:17462   */\n      swap1\n      pop\n        /* \"#utility.yul\":17472:17543   */\n      tag_412\n        /* \"#utility.yul\":17540:17541   */\n      0x00\n        /* \"#utility.yul\":17529:17538   */\n      dup4\n        /* \"#utility.yul\":17525:17542   */\n      add\n        /* \"#utility.yul\":17516:17522   */\n      dup7\n        /* \"#utility.yul\":17472:17543   */\n      tag_192\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":17553:17625   */\n      tag_413\n        /* \"#utility.yul\":17621:17623   */\n      0x20\n        /* \"#utility.yul\":17610:17619   */\n      dup4\n        /* \"#utility.yul\":17606:17624   */\n      add\n        /* \"#utility.yul\":17597:17603   */\n      dup6\n        /* \"#utility.yul\":17553:17625   */\n      tag_192\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":17635:17707   */\n      tag_414\n        /* \"#utility.yul\":17703:17705   */\n      0x40\n        /* \"#utility.yul\":17692:17701   */\n      dup4\n        /* \"#utility.yul\":17688:17706   */\n      add\n        /* \"#utility.yul\":17679:17685   */\n      dup5\n        /* \"#utility.yul\":17635:17707   */\n      tag_175\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":17272:17714   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17720:17810   */\n    tag_212:\n        /* \"#utility.yul\":17754:17761   */\n      0x00\n        /* \"#utility.yul\":17797:17802   */\n      dup2\n        /* \"#utility.yul\":17790:17803   */\n      iszero\n        /* \"#utility.yul\":17783:17804   */\n      iszero\n        /* \"#utility.yul\":17772:17804   */\n      swap1\n      pop\n        /* \"#utility.yul\":17720:17810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17816:17932   */\n    tag_213:\n        /* \"#utility.yul\":17886:17907   */\n      tag_417\n        /* \"#utility.yul\":17901:17906   */\n      dup2\n        /* \"#utility.yul\":17886:17907   */\n      tag_212\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":17879:17884   */\n      dup2\n        /* \"#utility.yul\":17876:17908   */\n      eq\n        /* \"#utility.yul\":17866:17926   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":17922:17923   */\n      0x00\n        /* \"#utility.yul\":17919:17920   */\n      dup1\n        /* \"#utility.yul\":17912:17924   */\n      revert\n        /* \"#utility.yul\":17866:17926   */\n    tag_418:\n        /* \"#utility.yul\":17816:17932   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17938:18075   */\n    tag_214:\n        /* \"#utility.yul\":17992:17997   */\n      0x00\n        /* \"#utility.yul\":18023:18029   */\n      dup2\n        /* \"#utility.yul\":18017:18030   */\n      mload\n        /* \"#utility.yul\":18008:18030   */\n      swap1\n      pop\n        /* \"#utility.yul\":18039:18069   */\n      tag_420\n        /* \"#utility.yul\":18063:18068   */\n      dup2\n        /* \"#utility.yul\":18039:18069   */\n      tag_213\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":17938:18075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18081:18426   */\n    tag_114:\n        /* \"#utility.yul\":18148:18154   */\n      0x00\n        /* \"#utility.yul\":18197:18199   */\n      0x20\n        /* \"#utility.yul\":18185:18194   */\n      dup3\n        /* \"#utility.yul\":18176:18183   */\n      dup5\n        /* \"#utility.yul\":18172:18195   */\n      sub\n        /* \"#utility.yul\":18168:18200   */\n      slt\n        /* \"#utility.yul\":18165:18284   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":18203:18282   */\n      tag_423\n      tag_168\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":18165:18284   */\n    tag_422:\n        /* \"#utility.yul\":18323:18324   */\n      0x00\n        /* \"#utility.yul\":18348:18409   */\n      tag_424\n        /* \"#utility.yul\":18401:18408   */\n      dup5\n        /* \"#utility.yul\":18392:18398   */\n      dup3\n        /* \"#utility.yul\":18381:18390   */\n      dup6\n        /* \"#utility.yul\":18377:18399   */\n      add\n        /* \"#utility.yul\":18348:18409   */\n      tag_214\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":18338:18409   */\n      swap2\n      pop\n        /* \"#utility.yul\":18294:18419   */\n      pop\n        /* \"#utility.yul\":18081:18426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18432:18764   */\n    tag_121:\n        /* \"#utility.yul\":18553:18557   */\n      0x00\n        /* \"#utility.yul\":18591:18593   */\n      0x40\n        /* \"#utility.yul\":18580:18589   */\n      dup3\n        /* \"#utility.yul\":18576:18594   */\n      add\n        /* \"#utility.yul\":18568:18594   */\n      swap1\n      pop\n        /* \"#utility.yul\":18604:18675   */\n      tag_426\n        /* \"#utility.yul\":18672:18673   */\n      0x00\n        /* \"#utility.yul\":18661:18670   */\n      dup4\n        /* \"#utility.yul\":18657:18674   */\n      add\n        /* \"#utility.yul\":18648:18654   */\n      dup6\n        /* \"#utility.yul\":18604:18675   */\n      tag_192\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":18685:18757   */\n      tag_427\n        /* \"#utility.yul\":18753:18755   */\n      0x20\n        /* \"#utility.yul\":18742:18751   */\n      dup4\n        /* \"#utility.yul\":18738:18756   */\n      add\n        /* \"#utility.yul\":18729:18735   */\n      dup5\n        /* \"#utility.yul\":18685:18757   */\n      tag_175\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":18432:18764   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b52cb36ab509a72eb118687d78c6e5544d55fde87fb93ffe695fea319f6f526a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_858": {
									"entryPoint": null,
									"id": 858,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:6",
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "922:274:6",
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:6",
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nativeSrc": "970:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nativeSrc": "970:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nativeSrc": "939:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nativeSrc": "935:32:6",
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nativeSrc": "932:119:6",
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nativeSrc": "1061:128:6",
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nativeSrc": "1076:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nativeSrc": "1147:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nativeSrc": "1115:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:6",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:6",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:6",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051611fd1380380611fd1833981810160405281019061003191906100fd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050610128565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100cc826100a3565b9050919050565b6100dc816100c2565b81146100e6575f80fd5b50565b5f815190506100f7816100d3565b92915050565b5f602082840312156101125761011161009f565b5b5f61011f848285016100e9565b91505092915050565b60805160a051611e5761017a5f395f81816107c00152818161099401528181610da9015261127601525f818161032601528181610454015281816106c301528181610c4a0152610f3c0152611e575ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806369524d311161009557806397b1a8b71161006457806397b1a8b714610241578063d107a5cc14610276578063d62b58ca14610292578063eb5a662e146102ae576100f3565b806369524d31146101e357806369527363146101ff578063733da7c81461021b5780637feab38014610237576100f3565b80634fe19125116100d15780634fe191251461015f5780635ed04c431461017b57806364502cae146101ab57806368b377ca146101c7576100f3565b806317056d94146100f757806319ec73e014610127578063459ccec714610143575b5f80fd5b610111600480360381019061010c9190611475565b6102de565b60405161011e91906114b8565b60405180910390f35b610141600480360381019061013c91906114fb565b610324565b005b61015d60048036038101906101589190611475565b610452565b005b61017960048036038101906101749190611675565b61055d565b005b610195600480360381019061019091906116eb565b6105d0565b6040516101a29190611792565b60405180910390f35b6101c560048036038101906101c091906114fb565b6106c1565b005b6101e160048036038101906101dc91906117b2565b61079c565b005b6101fd60048036038101906101f891906116eb565b6108e9565b005b6102196004803603810190610214919061183a565b610ab0565b005b610235600480360381019061023091906114fb565b610c48565b005b61023f610d23565b005b61025b600480360381019061025691906116eb565b610ec1565b60405161026d969594939291906118ee565b60405180910390f35b610290600480360381019061028b91906114fb565b610f3a565b005b6102ac60048036038101906102a7919061194d565b611068565b005b6102c860048036038101906102c39190611475565b611352565b6040516102d591906114b8565b60405180910390f35b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a9576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103f491906119e6565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104479190611a19565b925050819055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d7576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f60028360405161056e9190611a86565b9081526020016040518091039020905081816008015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090816105ca9190611c96565b50505050565b60605f6002836040516105e39190611a86565b90815260200160405180910390209050806008015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461063d90611ac9565b80601f016020809104026020016040519081016040528092919081815260200182805461066990611ac9565b80156106b45780601f1061068b576101008083540402835291602001916106b4565b820191905f5260205f20905b81548152906001019060200180831161069757829003601f168201915b5050505050915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610746576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107919190611a19565b925050819055505050565b5f6002846040516107ad9190611a86565b908152602001604051809103902090505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161081b93929190611d65565b6020604051808303815f875af1158015610837573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085b9190611dcf565b905080610894576040517f81b714be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83826006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506108e28584611397565b5050505050565b5f6002826040516108fa9190611a86565b908152602001604051809103902090505f816006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f826006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016109ed929190611dfa565b6020604051808303815f875af1158015610a09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2d9190611dcf565b905080610aaa5781836006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506040517f81b714be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b5f85111580610abf5750838410155b80610aca57505f8111155b80610ad457508482115b15610b0b576040517f0ecf0f1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600287604051610b1c9190611a86565b9081526020016040518091039020905033815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160010181905550848160020181905550838160030181905550818160050181905550828160040181905550855f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610be59190611a19565b925050819055508560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c3891906119e6565b9250508190555050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ccd576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d1891906119e6565b925050819055505050565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610e02929190611dfa565b6020604051808303815f875af1158015610e1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e429190611dcf565b905080610ebd578160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506040517f81b714be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f805f805f805f600288604051610ed89190611a86565b90815260200160405180910390209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001015482600201548360030154846005015485600401549650965096509650965096505091939550919395565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fbf576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461100a9190611a19565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461105d91906119e6565b925050819055505050565b5f6002846040516110799190611a86565b908152602001604051809103902090505f816006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f6002866040516110dd9190611a86565b90815260200160405180910390206006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550828161113991906119e6565b60035f845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546111a691906119e6565b92505081905550835f80845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461121a9190611a19565b92505081905550835f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461126c91906119e6565b925050819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016112d193929190611d65565b6020604051808303815f875af11580156112ed573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113119190611dcf565b90508061134a576040517f81b714be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6002836040516113a89190611a86565b9081526020016040518091039020905081816007015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090816114049190611c96565b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114448261141b565b9050919050565b6114548161143a565b811461145e575f80fd5b50565b5f8135905061146f8161144b565b92915050565b5f6020828403121561148a57611489611413565b5b5f61149784828501611461565b91505092915050565b5f819050919050565b6114b2816114a0565b82525050565b5f6020820190506114cb5f8301846114a9565b92915050565b6114da816114a0565b81146114e4575f80fd5b50565b5f813590506114f5816114d1565b92915050565b5f806040838503121561151157611510611413565b5b5f61151e85828601611461565b925050602061152f858286016114e7565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61158782611541565b810181811067ffffffffffffffff821117156115a6576115a5611551565b5b80604052505050565b5f6115b861140a565b90506115c4828261157e565b919050565b5f67ffffffffffffffff8211156115e3576115e2611551565b5b6115ec82611541565b9050602081019050919050565b828183375f83830152505050565b5f611619611614846115c9565b6115af565b9050828152602081018484840111156116355761163461153d565b5b6116408482856115f9565b509392505050565b5f82601f83011261165c5761165b611539565b5b813561166c848260208601611607565b91505092915050565b5f806040838503121561168b5761168a611413565b5b5f83013567ffffffffffffffff8111156116a8576116a7611417565b5b6116b485828601611648565b925050602083013567ffffffffffffffff8111156116d5576116d4611417565b5b6116e185828601611648565b9150509250929050565b5f60208284031215611700576116ff611413565b5b5f82013567ffffffffffffffff81111561171d5761171c611417565b5b61172984828501611648565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61176482611732565b61176e818561173c565b935061177e81856020860161174c565b61178781611541565b840191505092915050565b5f6020820190508181035f8301526117aa818461175a565b905092915050565b5f805f606084860312156117c9576117c8611413565b5b5f84013567ffffffffffffffff8111156117e6576117e5611417565b5b6117f286828701611648565b9350506020611803868287016114e7565b925050604084013567ffffffffffffffff81111561182457611823611417565b5b61183086828701611648565b9150509250925092565b5f805f805f8060c0878903121561185457611853611413565b5b5f87013567ffffffffffffffff81111561187157611870611417565b5b61187d89828a01611648565b965050602061188e89828a016114e7565b955050604061189f89828a016114e7565b94505060606118b089828a016114e7565b93505060806118c189828a016114e7565b92505060a06118d289828a016114e7565b9150509295509295509295565b6118e88161143a565b82525050565b5f60c0820190506119015f8301896118df565b61190e60208301886114a9565b61191b60408301876114a9565b61192860608301866114a9565b61193560808301856114a9565b61194260a08301846114a9565b979650505050505050565b5f805f6060848603121561196457611963611413565b5b5f84013567ffffffffffffffff81111561198157611980611417565b5b61198d86828701611648565b935050602061199e868287016114e7565b92505060406119af868287016114e7565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119f0826114a0565b91506119fb836114a0565b9250828201905080821115611a1357611a126119b9565b5b92915050565b5f611a23826114a0565b9150611a2e836114a0565b9250828203905081811115611a4657611a456119b9565b5b92915050565b5f81905092915050565b5f611a6082611732565b611a6a8185611a4c565b9350611a7a81856020860161174c565b80840191505092915050565b5f611a918284611a56565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ae057607f821691505b602082108103611af357611af2611a9c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611b557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b1a565b611b5f8683611b1a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611b9a611b95611b90846114a0565b611b77565b6114a0565b9050919050565b5f819050919050565b611bb383611b80565b611bc7611bbf82611ba1565b848454611b26565b825550505050565b5f90565b611bdb611bcf565b611be6818484611baa565b505050565b5b81811015611c0957611bfe5f82611bd3565b600181019050611bec565b5050565b601f821115611c4e57611c1f81611af9565b611c2884611b0b565b81016020851015611c37578190505b611c4b611c4385611b0b565b830182611beb565b50505b505050565b5f82821c905092915050565b5f611c6e5f1984600802611c53565b1980831691505092915050565b5f611c868383611c5f565b9150826002028217905092915050565b611c9f82611732565b67ffffffffffffffff811115611cb857611cb7611551565b5b611cc28254611ac9565b611ccd828285611c0d565b5f60209050601f831160018114611cfe575f8415611cec578287015190505b611cf68582611c7b565b865550611d5d565b601f198416611d0c86611af9565b5f5b82811015611d3357848901518255600182019150602085019450602081019050611d0e565b86831015611d505784890151611d4c601f891682611c5f565b8355505b6001600288020188555050505b505050505050565b5f606082019050611d785f8301866118df565b611d8560208301856118df565b611d9260408301846114a9565b949350505050565b5f8115159050919050565b611dae81611d9a565b8114611db8575f80fd5b50565b5f81519050611dc981611da5565b92915050565b5f60208284031215611de457611de3611413565b5b5f611df184828501611dbb565b91505092915050565b5f604082019050611e0d5f8301856118df565b611e1a60208301846114a9565b939250505056fea2646970667358221220b52cb36ab509a72eb118687d78c6e5544d55fde87fb93ffe695fea319f6f526a64736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1FD1 CODESIZE SUB DUP1 PUSH2 0x1FD1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xFD JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x128 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC DUP3 PUSH2 0xA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC DUP2 PUSH2 0xC2 JUMP JUMPDEST DUP2 EQ PUSH2 0xE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF7 DUP2 PUSH2 0xD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112 JUMPI PUSH2 0x111 PUSH2 0x9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11F DUP5 DUP3 DUP6 ADD PUSH2 0xE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1E57 PUSH2 0x17A PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x7C0 ADD MSTORE DUP2 DUP2 PUSH2 0x994 ADD MSTORE DUP2 DUP2 PUSH2 0xDA9 ADD MSTORE PUSH2 0x1276 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x326 ADD MSTORE DUP2 DUP2 PUSH2 0x454 ADD MSTORE DUP2 DUP2 PUSH2 0x6C3 ADD MSTORE DUP2 DUP2 PUSH2 0xC4A ADD MSTORE PUSH2 0xF3C ADD MSTORE PUSH2 0x1E57 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69524D31 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x97B1A8B7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x97B1A8B7 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xD107A5CC EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xD62B58CA EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xEB5A662E EQ PUSH2 0x2AE JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x69524D31 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x69527363 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x733DA7C8 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x7FEAB380 EQ PUSH2 0x237 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x4FE19125 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4FE19125 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x5ED04C43 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x64502CAE EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x68B377CA EQ PUSH2 0x1C7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x17056D94 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x19EC73E0 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x459CCEC7 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xC48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH2 0xD23 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xF3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x1068 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x8 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 PUSH1 0x8 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x63D SWAP1 PUSH2 0x1AC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x669 SWAP1 PUSH2 0x1AC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x68B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x697 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x837 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH32 0x81B714BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8E2 DUP6 DUP5 PUSH2 0x1397 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8FA SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9ED SWAP3 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xAAA JUMPI DUP2 DUP4 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x81B714BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP6 GT ISZERO DUP1 PUSH2 0xABF JUMPI POP DUP4 DUP5 LT ISZERO JUMPDEST DUP1 PUSH2 0xACA JUMPI POP PUSH0 DUP2 GT ISZERO JUMPDEST DUP1 PUSH2 0xAD4 JUMPI POP DUP5 DUP3 GT JUMPDEST ISZERO PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0xECF0F1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP CALLER DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xEBD JUMPI DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x81B714BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x2 DUP9 PUSH1 0x40 MLOAD PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD DUP6 PUSH1 0x4 ADD SLOAD SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1079 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH2 0x1139 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11A6 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH0 DUP1 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH32 0x81B714BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x7 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1404 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1444 DUP3 PUSH2 0x141B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1454 DUP2 PUSH2 0x143A JUMP JUMPDEST DUP2 EQ PUSH2 0x145E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146F DUP2 PUSH2 0x144B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH2 0x1489 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1497 DUP5 DUP3 DUP6 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B2 DUP2 PUSH2 0x14A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CB PUSH0 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14DA DUP2 PUSH2 0x14A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F5 DUP2 PUSH2 0x14D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x151E DUP6 DUP3 DUP7 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x152F DUP6 DUP3 DUP7 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1587 DUP3 PUSH2 0x1541 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15A6 JUMPI PUSH2 0x15A5 PUSH2 0x1551 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15B8 PUSH2 0x140A JUMP JUMPDEST SWAP1 POP PUSH2 0x15C4 DUP3 DUP3 PUSH2 0x157E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15E3 JUMPI PUSH2 0x15E2 PUSH2 0x1551 JUMP JUMPDEST JUMPDEST PUSH2 0x15EC DUP3 PUSH2 0x1541 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1619 PUSH2 0x1614 DUP5 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0x15AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1635 JUMPI PUSH2 0x1634 PUSH2 0x153D JUMP JUMPDEST JUMPDEST PUSH2 0x1640 DUP5 DUP3 DUP6 PUSH2 0x15F9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1539 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x166C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1607 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x168B JUMPI PUSH2 0x168A PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A8 JUMPI PUSH2 0x16A7 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x16B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x16E1 DUP6 DUP3 DUP7 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1700 JUMPI PUSH2 0x16FF PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x171D JUMPI PUSH2 0x171C PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x1729 DUP5 DUP3 DUP6 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1764 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x176E DUP2 DUP6 PUSH2 0x173C JUMP JUMPDEST SWAP4 POP PUSH2 0x177E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174C JUMP JUMPDEST PUSH2 0x1787 DUP2 PUSH2 0x1541 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17AA DUP2 DUP5 PUSH2 0x175A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17C9 JUMPI PUSH2 0x17C8 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x17E5 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x17F2 DUP7 DUP3 DUP8 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1803 DUP7 DUP3 DUP8 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH2 0x1823 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x1830 DUP7 DUP3 DUP8 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x187D DUP10 DUP3 DUP11 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x188E DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x189F DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x18B0 DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x18C1 DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x18D2 DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x18E8 DUP2 PUSH2 0x143A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1901 PUSH0 DUP4 ADD DUP10 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x190E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x191B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1928 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1935 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1942 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1964 JUMPI PUSH2 0x1963 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x198D DUP7 DUP3 DUP8 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x199E DUP7 DUP3 DUP8 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19AF DUP7 DUP3 DUP8 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19F0 DUP3 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x19FB DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A13 JUMPI PUSH2 0x1A12 PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A23 DUP3 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2E DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A46 JUMPI PUSH2 0x1A45 PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A60 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1A6A DUP2 DUP6 PUSH2 0x1A4C JUMP JUMPDEST SWAP4 POP PUSH2 0x1A7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A91 DUP3 DUP5 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AE0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AF3 JUMPI PUSH2 0x1AF2 PUSH2 0x1A9C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1B55 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x1B5F DUP7 DUP4 PUSH2 0x1B1A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9A PUSH2 0x1B95 PUSH2 0x1B90 DUP5 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB3 DUP4 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x1BC7 PUSH2 0x1BBF DUP3 PUSH2 0x1BA1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1B26 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1BDB PUSH2 0x1BCF JUMP JUMPDEST PUSH2 0x1BE6 DUP2 DUP5 DUP5 PUSH2 0x1BAA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1BFE PUSH0 DUP3 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C4E JUMPI PUSH2 0x1C1F DUP2 PUSH2 0x1AF9 JUMP JUMPDEST PUSH2 0x1C28 DUP5 PUSH2 0x1B0B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1C37 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1C4B PUSH2 0x1C43 DUP6 PUSH2 0x1B0B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1BEB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1C53 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C86 DUP4 DUP4 PUSH2 0x1C5F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C9F DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB7 PUSH2 0x1551 JUMP JUMPDEST JUMPDEST PUSH2 0x1CC2 DUP3 SLOAD PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1CCD DUP3 DUP3 DUP6 PUSH2 0x1C0D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1CFE JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1CEC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1CF6 DUP6 DUP3 PUSH2 0x1C7B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1D0C DUP7 PUSH2 0x1AF9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D33 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D0E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1D50 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1D4C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1C5F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D78 PUSH0 DUP4 ADD DUP7 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1D85 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1D92 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DAE DUP2 PUSH2 0x1D9A JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DC9 DUP2 PUSH2 0x1DA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE4 JUMPI PUSH2 0x1DE3 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DF1 DUP5 DUP3 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E0D PUSH0 DUP4 ADD DUP6 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1E1A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0x2C 0xB3 PUSH11 0xB509A72EB118687D78C6E5 SLOAD 0x4D SSTORE REVERT 0xE8 PUSH32 0xB93FFE695FEA319F6F526A64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "224:6597:5:-:0;;;1236:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1296:10;1286:20;;;;;;;;;;1339:16;1317:39;;;;;;;;;;1236:128;224:6597;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;224:6597:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_1173": {
									"entryPoint": 1948,
									"id": 1173,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@destroyAllAllowance_991": {
									"entryPoint": 1106,
									"id": 991,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@destroyAllowance_971": {
									"entryPoint": 1729,
									"id": 971,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@finalizeAuctionAndTransferCarbon_1374": {
									"entryPoint": 4200,
									"id": 1374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@freezeAllowance_921": {
									"entryPoint": 3898,
									"id": 921,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getAllowance_899": {
									"entryPoint": 4946,
									"id": 899,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBidSecret_1297": {
									"entryPoint": 1488,
									"id": 1297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getFreezeAllowance_955": {
									"entryPoint": 734,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTread_1123": {
									"entryPoint": 3777,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 6
								},
								"@issueAllowance_887": {
									"entryPoint": 3144,
									"id": 887,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@refundDeposit_1228": {
									"entryPoint": 2281,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBidSecret_1276": {
									"entryPoint": 1373,
									"id": 1276,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setInfo_1252": {
									"entryPoint": 5015,
									"id": 1252,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stertTrade_1084": {
									"entryPoint": 2736,
									"id": 1084,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@unFreezeAllowance_943": {
									"entryPoint": 804,
									"id": 943,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawAcutionAmount_1415": {
									"entryPoint": 3363,
									"id": 1415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 5749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr": {
									"entryPoint": 6066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7525,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7674,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6382,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 6905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5625,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 7082,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 7119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18767:6",
										"nodeType": "YulBlock",
										"src": "0:18767:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "907:263:6",
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:6",
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nativeSrc": "955:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nativeSrc": "955:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nativeSrc": "924:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:6",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nativeSrc": "920:32:6",
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nativeSrc": "917:119:6",
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nativeSrc": "1046:117:6",
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nativeSrc": "1061:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nativeSrc": "1121:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nativeSrc": "1100:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:6",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:6",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:6",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nativeSrc": "1221:32:6",
													"nodeType": "YulBlock",
													"src": "1221:32:6",
													"statements": [
														{
															"nativeSrc": "1231:16:6",
															"nodeType": "YulAssignment",
															"src": "1231:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:6",
																"nodeType": "YulIdentifier",
																"src": "1242:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:6",
														"nodeType": "YulTypedName",
														"src": "1203:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:6",
														"nodeType": "YulTypedName",
														"src": "1213:7:6",
														"type": ""
													}
												],
												"src": "1176:77:6"
											},
											{
												"body": {
													"nativeSrc": "1324:53:6",
													"nodeType": "YulBlock",
													"src": "1324:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:6"
																		},
																		"nativeSrc": "1346:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nativeSrc": "1334:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:6"
															},
															"nativeSrc": "1334:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:6",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:6",
														"nodeType": "YulTypedName",
														"src": "1319:3:6",
														"type": ""
													}
												],
												"src": "1259:118:6"
											},
											{
												"body": {
													"nativeSrc": "1481:124:6",
													"nodeType": "YulBlock",
													"src": "1481:124:6",
													"statements": [
														{
															"nativeSrc": "1491:26:6",
															"nodeType": "YulAssignment",
															"src": "1491:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:6"
																},
																"nativeSrc": "1499:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:6"
																		},
																		"nativeSrc": "1580:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:6"
																},
																"nativeSrc": "1527:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:6"
															},
															"nativeSrc": "1527:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:6",
														"nodeType": "YulTypedName",
														"src": "1453:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:6",
														"nodeType": "YulTypedName",
														"src": "1465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:6",
														"nodeType": "YulTypedName",
														"src": "1476:4:6",
														"type": ""
													}
												],
												"src": "1383:222:6"
											},
											{
												"body": {
													"nativeSrc": "1654:79:6",
													"nodeType": "YulBlock",
													"src": "1654:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:6",
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nativeSrc": "1713:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nativeSrc": "1713:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:6"
																				},
																				"nativeSrc": "1684:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:6"
																		},
																		"nativeSrc": "1674:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nativeSrc": "1667:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:6"
															},
															"nativeSrc": "1664:63:6",
															"nodeType": "YulIf",
															"src": "1664:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:6",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													}
												],
												"src": "1611:122:6"
											},
											{
												"body": {
													"nativeSrc": "1791:87:6",
													"nodeType": "YulBlock",
													"src": "1791:87:6",
													"statements": [
														{
															"nativeSrc": "1801:29:6",
															"nodeType": "YulAssignment",
															"src": "1801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:6"
																},
																"nativeSrc": "1810:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:6"
																},
																"nativeSrc": "1839:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:6"
															},
															"nativeSrc": "1839:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:6",
														"nodeType": "YulTypedName",
														"src": "1769:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:6",
														"nodeType": "YulTypedName",
														"src": "1777:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:6",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													}
												],
												"src": "1739:139:6"
											},
											{
												"body": {
													"nativeSrc": "1967:391:6",
													"nodeType": "YulBlock",
													"src": "1967:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2013:83:6",
																"nodeType": "YulBlock",
																"src": "2013:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2015:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:6"
																			},
																			"nativeSrc": "2015:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:6"
																		},
																		"nativeSrc": "2015:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1988:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1997:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:6"
																		},
																		"nativeSrc": "1984:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2009:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1980:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:6"
																},
																"nativeSrc": "1980:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1980:32:6"
															},
															"nativeSrc": "1977:119:6",
															"nodeType": "YulIf",
															"src": "1977:119:6"
														},
														{
															"nativeSrc": "2106:117:6",
															"nodeType": "YulBlock",
															"src": "2106:117:6",
															"statements": [
																{
																	"nativeSrc": "2121:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2135:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2125:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2150:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2150:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2185:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2196:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2181:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:6"
																				},
																				"nativeSrc": "2181:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2205:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2160:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:6"
																		},
																		"nativeSrc": "2160:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2150:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2233:118:6",
															"nodeType": "YulBlock",
															"src": "2233:118:6",
															"statements": [
																{
																	"nativeSrc": "2248:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2262:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2252:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:6"
																				},
																				"nativeSrc": "2309:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2288:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:6"
																		},
																		"nativeSrc": "2288:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2278:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1884:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1929:9:6",
														"nodeType": "YulTypedName",
														"src": "1929:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1940:7:6",
														"nodeType": "YulTypedName",
														"src": "1940:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1952:6:6",
														"nodeType": "YulTypedName",
														"src": "1952:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1960:6:6",
														"nodeType": "YulTypedName",
														"src": "1960:6:6",
														"type": ""
													}
												],
												"src": "1884:474:6"
											},
											{
												"body": {
													"nativeSrc": "2453:28:6",
													"nodeType": "YulBlock",
													"src": "2453:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2470:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2473:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2473:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2463:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2463:6:6"
																},
																"nativeSrc": "2463:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2463:12:6"
															},
															"nativeSrc": "2463:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2463:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2364:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2364:117:6"
											},
											{
												"body": {
													"nativeSrc": "2576:28:6",
													"nodeType": "YulBlock",
													"src": "2576:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2593:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2593:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2596:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2596:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2586:6:6"
																},
																"nativeSrc": "2586:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2586:12:6"
															},
															"nativeSrc": "2586:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2586:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "2487:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2487:117:6"
											},
											{
												"body": {
													"nativeSrc": "2658:54:6",
													"nodeType": "YulBlock",
													"src": "2658:54:6",
													"statements": [
														{
															"nativeSrc": "2668:38:6",
															"nodeType": "YulAssignment",
															"src": "2668:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2686:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2686:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2693:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2693:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2682:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:6"
																		},
																		"nativeSrc": "2682:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2682:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2702:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2702:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2698:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:6"
																		},
																		"nativeSrc": "2698:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2678:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2678:3:6"
																},
																"nativeSrc": "2678:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2678:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2668:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2668:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2610:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2641:5:6",
														"nodeType": "YulTypedName",
														"src": "2641:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2651:6:6",
														"nodeType": "YulTypedName",
														"src": "2651:6:6",
														"type": ""
													}
												],
												"src": "2610:102:6"
											},
											{
												"body": {
													"nativeSrc": "2746:152:6",
													"nodeType": "YulBlock",
													"src": "2746:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2763:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2763:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2766:77:6",
																		"nodeType": "YulLiteral",
																		"src": "2766:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2756:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2756:6:6"
																},
																"nativeSrc": "2756:88:6",
																"nodeType": "YulFunctionCall",
																"src": "2756:88:6"
															},
															"nativeSrc": "2756:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "2756:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2860:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2860:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2863:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2863:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2853:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2853:6:6"
																},
																"nativeSrc": "2853:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2853:15:6"
															},
															"nativeSrc": "2853:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2853:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2884:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2884:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2887:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2887:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2877:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2877:6:6"
																},
																"nativeSrc": "2877:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2877:15:6"
															},
															"nativeSrc": "2877:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2877:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2718:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2718:180:6"
											},
											{
												"body": {
													"nativeSrc": "2947:238:6",
													"nodeType": "YulBlock",
													"src": "2947:238:6",
													"statements": [
														{
															"nativeSrc": "2957:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2957:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2979:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2979:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3009:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3009:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2987:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "2987:21:6"
																		},
																		"nativeSrc": "2987:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2987:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2975:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:3:6"
																},
																"nativeSrc": "2975:40:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2961:10:6",
																	"nodeType": "YulTypedName",
																	"src": "2961:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3126:22:6",
																"nodeType": "YulBlock",
																"src": "3126:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3128:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3128:16:6"
																			},
																			"nativeSrc": "3128:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3128:18:6"
																		},
																		"nativeSrc": "3128:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3128:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3069:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "3069:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3081:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3081:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3066:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3066:2:6"
																		},
																		"nativeSrc": "3066:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3066:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3105:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "3105:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3117:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3102:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3102:2:6"
																		},
																		"nativeSrc": "3102:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3102:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3063:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3063:2:6"
																},
																"nativeSrc": "3063:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3063:62:6"
															},
															"nativeSrc": "3060:88:6",
															"nodeType": "YulIf",
															"src": "3060:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3164:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3164:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3168:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "3168:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3157:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3157:6:6"
																},
																"nativeSrc": "3157:22:6",
																"nodeType": "YulFunctionCall",
																"src": "3157:22:6"
															},
															"nativeSrc": "3157:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "3157:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2904:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2933:6:6",
														"nodeType": "YulTypedName",
														"src": "2933:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2941:4:6",
														"nodeType": "YulTypedName",
														"src": "2941:4:6",
														"type": ""
													}
												],
												"src": "2904:281:6"
											},
											{
												"body": {
													"nativeSrc": "3232:88:6",
													"nodeType": "YulBlock",
													"src": "3232:88:6",
													"statements": [
														{
															"nativeSrc": "3242:30:6",
															"nodeType": "YulAssignment",
															"src": "3242:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "3252:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3252:18:6"
																},
																"nativeSrc": "3252:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3252:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3242:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3242:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3301:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3301:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "3309:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3309:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "3281:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "3281:19:6"
																},
																"nativeSrc": "3281:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3281:33:6"
															},
															"nativeSrc": "3281:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3281:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3191:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "3216:4:6",
														"nodeType": "YulTypedName",
														"src": "3216:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3225:6:6",
														"nodeType": "YulTypedName",
														"src": "3225:6:6",
														"type": ""
													}
												],
												"src": "3191:129:6"
											},
											{
												"body": {
													"nativeSrc": "3393:241:6",
													"nodeType": "YulBlock",
													"src": "3393:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3498:22:6",
																"nodeType": "YulBlock",
																"src": "3498:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3500:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3500:16:6"
																			},
																			"nativeSrc": "3500:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3500:18:6"
																		},
																		"nativeSrc": "3500:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3500:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3470:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3470:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3478:18:6",
																		"nodeType": "YulLiteral",
																		"src": "3478:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3467:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3467:2:6"
																},
																"nativeSrc": "3467:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3467:30:6"
															},
															"nativeSrc": "3464:56:6",
															"nodeType": "YulIf",
															"src": "3464:56:6"
														},
														{
															"nativeSrc": "3530:37:6",
															"nodeType": "YulAssignment",
															"src": "3530:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3560:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3560:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "3538:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "3538:21:6"
																},
																"nativeSrc": "3538:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3538:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3530:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3530:4:6"
																}
															]
														},
														{
															"nativeSrc": "3604:23:6",
															"nodeType": "YulAssignment",
															"src": "3604:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "3616:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3616:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3622:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3622:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3612:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3612:3:6"
																},
																"nativeSrc": "3612:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3612:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3604:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3604:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "3326:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3377:6:6",
														"nodeType": "YulTypedName",
														"src": "3377:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3388:4:6",
														"nodeType": "YulTypedName",
														"src": "3388:4:6",
														"type": ""
													}
												],
												"src": "3326:308:6"
											},
											{
												"body": {
													"nativeSrc": "3704:84:6",
													"nodeType": "YulBlock",
													"src": "3704:84:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3728:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3733:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3733:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3738:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3738:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3715:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3715:12:6"
																},
																"nativeSrc": "3715:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3715:30:6"
															},
															"nativeSrc": "3715:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3715:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3765:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3765:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3770:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3770:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3761:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:6"
																		},
																		"nativeSrc": "3761:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3779:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3779:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3754:6:6"
																},
																"nativeSrc": "3754:27:6",
																"nodeType": "YulFunctionCall",
																"src": "3754:27:6"
															},
															"nativeSrc": "3754:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "3754:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "3640:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3686:3:6",
														"nodeType": "YulTypedName",
														"src": "3686:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3691:3:6",
														"nodeType": "YulTypedName",
														"src": "3691:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3696:6:6",
														"nodeType": "YulTypedName",
														"src": "3696:6:6",
														"type": ""
													}
												],
												"src": "3640:148:6"
											},
											{
												"body": {
													"nativeSrc": "3878:341:6",
													"nodeType": "YulBlock",
													"src": "3878:341:6",
													"statements": [
														{
															"nativeSrc": "3888:75:6",
															"nodeType": "YulAssignment",
															"src": "3888:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3955:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3955:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "3913:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3913:41:6"
																		},
																		"nativeSrc": "3913:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3913:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3897:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "3897:15:6"
																},
																"nativeSrc": "3897:66:6",
																"nodeType": "YulFunctionCall",
																"src": "3897:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3888:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3888:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3979:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3979:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3986:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3972:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3972:6:6"
																},
																"nativeSrc": "3972:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3972:21:6"
															},
															"nativeSrc": "3972:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3972:21:6"
														},
														{
															"nativeSrc": "4002:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4002:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4017:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4017:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4024:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4024:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4013:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:6"
																},
																"nativeSrc": "4013:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4013:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4006:3:6",
																	"nodeType": "YulTypedName",
																	"src": "4006:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4067:83:6",
																"nodeType": "YulBlock",
																"src": "4067:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "4069:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4069:77:6"
																			},
																			"nativeSrc": "4069:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4069:79:6"
																		},
																		"nativeSrc": "4069:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4069:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4048:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4048:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4053:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4053:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4044:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4044:3:6"
																		},
																		"nativeSrc": "4044:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4044:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4062:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4062:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:6"
																},
																"nativeSrc": "4041:25:6",
																"nodeType": "YulFunctionCall",
																"src": "4041:25:6"
															},
															"nativeSrc": "4038:112:6",
															"nodeType": "YulIf",
															"src": "4038:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4196:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4196:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "4201:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4201:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4206:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4206:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "4159:36:6",
																	"nodeType": "YulIdentifier",
																	"src": "4159:36:6"
																},
																"nativeSrc": "4159:54:6",
																"nodeType": "YulFunctionCall",
																"src": "4159:54:6"
															},
															"nativeSrc": "4159:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "4159:54:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "3794:425:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3851:3:6",
														"nodeType": "YulTypedName",
														"src": "3851:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3856:6:6",
														"nodeType": "YulTypedName",
														"src": "3856:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3864:3:6",
														"nodeType": "YulTypedName",
														"src": "3864:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3872:5:6",
														"nodeType": "YulTypedName",
														"src": "3872:5:6",
														"type": ""
													}
												],
												"src": "3794:425:6"
											},
											{
												"body": {
													"nativeSrc": "4301:278:6",
													"nodeType": "YulBlock",
													"src": "4301:278:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4350:83:6",
																"nodeType": "YulBlock",
																"src": "4350:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4352:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4352:77:6"
																			},
																			"nativeSrc": "4352:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4352:79:6"
																		},
																		"nativeSrc": "4352:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4352:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4329:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4329:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4337:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4337:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4325:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4325:3:6"
																				},
																				"nativeSrc": "4325:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4325:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4344:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4344:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4321:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4321:3:6"
																		},
																		"nativeSrc": "4321:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4321:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4314:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:6"
																},
																"nativeSrc": "4314:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4314:35:6"
															},
															"nativeSrc": "4311:122:6",
															"nodeType": "YulIf",
															"src": "4311:122:6"
														},
														{
															"nativeSrc": "4442:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4442:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4469:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4469:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4456:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "4456:12:6"
																},
																"nativeSrc": "4456:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4456:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4446:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4446:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4485:88:6",
															"nodeType": "YulAssignment",
															"src": "4485:88:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4546:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4546:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4554:4:6",
																				"nodeType": "YulLiteral",
																				"src": "4554:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4542:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4542:3:6"
																		},
																		"nativeSrc": "4542:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4542:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4561:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4561:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4569:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "4494:47:6",
																	"nodeType": "YulIdentifier",
																	"src": "4494:47:6"
																},
																"nativeSrc": "4494:79:6",
																"nodeType": "YulFunctionCall",
																"src": "4494:79:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4485:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4485:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "4239:340:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4279:6:6",
														"nodeType": "YulTypedName",
														"src": "4279:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4287:3:6",
														"nodeType": "YulTypedName",
														"src": "4287:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4295:5:6",
														"nodeType": "YulTypedName",
														"src": "4295:5:6",
														"type": ""
													}
												],
												"src": "4239:340:6"
											},
											{
												"body": {
													"nativeSrc": "4688:731:6",
													"nodeType": "YulBlock",
													"src": "4688:731:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4734:83:6",
																"nodeType": "YulBlock",
																"src": "4734:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4736:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4736:77:6"
																			},
																			"nativeSrc": "4736:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4736:79:6"
																		},
																		"nativeSrc": "4736:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4736:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4709:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4709:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4718:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4718:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4705:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4705:3:6"
																		},
																		"nativeSrc": "4705:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4705:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4730:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4730:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4701:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4701:3:6"
																},
																"nativeSrc": "4701:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4701:32:6"
															},
															"nativeSrc": "4698:119:6",
															"nodeType": "YulIf",
															"src": "4698:119:6"
														},
														{
															"nativeSrc": "4827:287:6",
															"nodeType": "YulBlock",
															"src": "4827:287:6",
															"statements": [
																{
																	"nativeSrc": "4842:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4842:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4873:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4873:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4884:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4884:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4869:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:6"
																				},
																				"nativeSrc": "4869:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4869:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4856:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "4856:12:6"
																		},
																		"nativeSrc": "4856:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4856:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4846:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4846:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4934:83:6",
																		"nodeType": "YulBlock",
																		"src": "4934:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4936:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4936:77:6"
																					},
																					"nativeSrc": "4936:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4936:79:6"
																				},
																				"nativeSrc": "4936:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4936:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4906:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4906:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4914:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4914:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4903:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4903:2:6"
																		},
																		"nativeSrc": "4903:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4903:30:6"
																	},
																	"nativeSrc": "4900:117:6",
																	"nodeType": "YulIf",
																	"src": "4900:117:6"
																},
																{
																	"nativeSrc": "5031:73:6",
																	"nodeType": "YulAssignment",
																	"src": "5031:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5076:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5076:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5087:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5087:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5072:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5072:3:6"
																				},
																				"nativeSrc": "5072:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5072:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5096:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5096:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5041:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "5041:30:6"
																		},
																		"nativeSrc": "5041:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5041:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5031:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5031:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5124:288:6",
															"nodeType": "YulBlock",
															"src": "5124:288:6",
															"statements": [
																{
																	"nativeSrc": "5139:46:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5139:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5170:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5170:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5181:2:6",
																						"nodeType": "YulLiteral",
																						"src": "5181:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5166:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5166:3:6"
																				},
																				"nativeSrc": "5166:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5166:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5153:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "5153:12:6"
																		},
																		"nativeSrc": "5153:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5153:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5143:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5143:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5232:83:6",
																		"nodeType": "YulBlock",
																		"src": "5232:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5234:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "5234:77:6"
																					},
																					"nativeSrc": "5234:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5234:79:6"
																				},
																				"nativeSrc": "5234:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5234:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5204:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5204:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5212:18:6",
																				"nodeType": "YulLiteral",
																				"src": "5212:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5201:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5201:2:6"
																		},
																		"nativeSrc": "5201:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5201:30:6"
																	},
																	"nativeSrc": "5198:117:6",
																	"nodeType": "YulIf",
																	"src": "5198:117:6"
																},
																{
																	"nativeSrc": "5329:73:6",
																	"nodeType": "YulAssignment",
																	"src": "5329:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5374:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5374:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5385:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5385:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5370:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5370:3:6"
																				},
																				"nativeSrc": "5370:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5370:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5394:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5394:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5339:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "5339:30:6"
																		},
																		"nativeSrc": "5339:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5329:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5329:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "4585:834:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4650:9:6",
														"nodeType": "YulTypedName",
														"src": "4650:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4661:7:6",
														"nodeType": "YulTypedName",
														"src": "4661:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4673:6:6",
														"nodeType": "YulTypedName",
														"src": "4673:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4681:6:6",
														"nodeType": "YulTypedName",
														"src": "4681:6:6",
														"type": ""
													}
												],
												"src": "4585:834:6"
											},
											{
												"body": {
													"nativeSrc": "5501:433:6",
													"nodeType": "YulBlock",
													"src": "5501:433:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5547:83:6",
																"nodeType": "YulBlock",
																"src": "5547:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5549:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5549:77:6"
																			},
																			"nativeSrc": "5549:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5549:79:6"
																		},
																		"nativeSrc": "5549:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5549:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5522:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5522:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5531:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5531:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5518:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:6"
																		},
																		"nativeSrc": "5518:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5518:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5543:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5543:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5514:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5514:3:6"
																},
																"nativeSrc": "5514:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5514:32:6"
															},
															"nativeSrc": "5511:119:6",
															"nodeType": "YulIf",
															"src": "5511:119:6"
														},
														{
															"nativeSrc": "5640:287:6",
															"nodeType": "YulBlock",
															"src": "5640:287:6",
															"statements": [
																{
																	"nativeSrc": "5655:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5655:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5686:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5686:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5697:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5697:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5682:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5682:3:6"
																				},
																				"nativeSrc": "5682:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5682:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5669:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "5669:12:6"
																		},
																		"nativeSrc": "5669:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5669:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5659:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5659:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5747:83:6",
																		"nodeType": "YulBlock",
																		"src": "5747:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5749:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "5749:77:6"
																					},
																					"nativeSrc": "5749:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5749:79:6"
																				},
																				"nativeSrc": "5749:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5749:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5719:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5719:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5727:18:6",
																				"nodeType": "YulLiteral",
																				"src": "5727:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5716:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5716:2:6"
																		},
																		"nativeSrc": "5716:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5716:30:6"
																	},
																	"nativeSrc": "5713:117:6",
																	"nodeType": "YulIf",
																	"src": "5713:117:6"
																},
																{
																	"nativeSrc": "5844:73:6",
																	"nodeType": "YulAssignment",
																	"src": "5844:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5889:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5889:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5900:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5900:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5885:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5885:3:6"
																				},
																				"nativeSrc": "5885:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5885:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5909:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5909:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5854:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "5854:30:6"
																		},
																		"nativeSrc": "5854:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5854:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5844:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5844:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "5425:509:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5471:9:6",
														"nodeType": "YulTypedName",
														"src": "5471:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5482:7:6",
														"nodeType": "YulTypedName",
														"src": "5482:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5494:6:6",
														"nodeType": "YulTypedName",
														"src": "5494:6:6",
														"type": ""
													}
												],
												"src": "5425:509:6"
											},
											{
												"body": {
													"nativeSrc": "5999:40:6",
													"nodeType": "YulBlock",
													"src": "5999:40:6",
													"statements": [
														{
															"nativeSrc": "6010:22:6",
															"nodeType": "YulAssignment",
															"src": "6010:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6026:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6020:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6020:5:6"
																},
																"nativeSrc": "6020:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6020:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6010:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6010:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5940:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5982:5:6",
														"nodeType": "YulTypedName",
														"src": "5982:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5992:6:6",
														"nodeType": "YulTypedName",
														"src": "5992:6:6",
														"type": ""
													}
												],
												"src": "5940:99:6"
											},
											{
												"body": {
													"nativeSrc": "6141:73:6",
													"nodeType": "YulBlock",
													"src": "6141:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6158:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6158:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6163:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6163:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6151:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6151:6:6"
																},
																"nativeSrc": "6151:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6151:19:6"
															},
															"nativeSrc": "6151:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "6151:19:6"
														},
														{
															"nativeSrc": "6179:29:6",
															"nodeType": "YulAssignment",
															"src": "6179:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6198:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6198:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6203:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6203:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6194:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6194:3:6"
																},
																"nativeSrc": "6194:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6194:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6179:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "6179:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6045:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6113:3:6",
														"nodeType": "YulTypedName",
														"src": "6113:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6118:6:6",
														"nodeType": "YulTypedName",
														"src": "6118:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6129:11:6",
														"nodeType": "YulTypedName",
														"src": "6129:11:6",
														"type": ""
													}
												],
												"src": "6045:169:6"
											},
											{
												"body": {
													"nativeSrc": "6282:77:6",
													"nodeType": "YulBlock",
													"src": "6282:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6299:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6299:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6304:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6304:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6309:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6309:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6293:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6293:5:6"
																},
																"nativeSrc": "6293:23:6",
																"nodeType": "YulFunctionCall",
																"src": "6293:23:6"
															},
															"nativeSrc": "6293:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "6293:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6336:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6336:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6341:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6341:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6332:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:6"
																		},
																		"nativeSrc": "6332:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6332:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6350:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6350:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6325:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6325:6:6"
																},
																"nativeSrc": "6325:27:6",
																"nodeType": "YulFunctionCall",
																"src": "6325:27:6"
															},
															"nativeSrc": "6325:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "6325:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6220:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6264:3:6",
														"nodeType": "YulTypedName",
														"src": "6264:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6269:3:6",
														"nodeType": "YulTypedName",
														"src": "6269:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6274:6:6",
														"nodeType": "YulTypedName",
														"src": "6274:6:6",
														"type": ""
													}
												],
												"src": "6220:139:6"
											},
											{
												"body": {
													"nativeSrc": "6457:285:6",
													"nodeType": "YulBlock",
													"src": "6457:285:6",
													"statements": [
														{
															"nativeSrc": "6467:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6467:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6514:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6514:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6481:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "6481:32:6"
																},
																"nativeSrc": "6481:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6481:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6471:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6471:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6529:78:6",
															"nodeType": "YulAssignment",
															"src": "6529:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6595:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6595:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6600:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6600:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6536:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6536:58:6"
																},
																"nativeSrc": "6536:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6536:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6529:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6655:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6655:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6662:4:6",
																				"nodeType": "YulLiteral",
																				"src": "6662:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6651:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6651:3:6"
																		},
																		"nativeSrc": "6651:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6651:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6669:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6669:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6674:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6616:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "6616:34:6"
																},
																"nativeSrc": "6616:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6616:65:6"
															},
															"nativeSrc": "6616:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6616:65:6"
														},
														{
															"nativeSrc": "6690:46:6",
															"nodeType": "YulAssignment",
															"src": "6690:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6701:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6701:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6728:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6728:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6706:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "6706:21:6"
																		},
																		"nativeSrc": "6706:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6706:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6697:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:6"
																},
																"nativeSrc": "6697:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6697:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6690:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6690:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6365:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6438:5:6",
														"nodeType": "YulTypedName",
														"src": "6438:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6445:3:6",
														"nodeType": "YulTypedName",
														"src": "6445:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6453:3:6",
														"nodeType": "YulTypedName",
														"src": "6453:3:6",
														"type": ""
													}
												],
												"src": "6365:377:6"
											},
											{
												"body": {
													"nativeSrc": "6866:195:6",
													"nodeType": "YulBlock",
													"src": "6866:195:6",
													"statements": [
														{
															"nativeSrc": "6876:26:6",
															"nodeType": "YulAssignment",
															"src": "6876:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6888:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6888:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6899:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6899:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6884:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6884:3:6"
																},
																"nativeSrc": "6884:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6884:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6876:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6876:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6923:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6923:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6934:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6934:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6919:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6919:3:6"
																		},
																		"nativeSrc": "6919:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6919:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6942:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6942:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6948:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6948:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6938:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6938:3:6"
																		},
																		"nativeSrc": "6938:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6938:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6912:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6912:6:6"
																},
																"nativeSrc": "6912:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6912:47:6"
															},
															"nativeSrc": "6912:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6912:47:6"
														},
														{
															"nativeSrc": "6968:86:6",
															"nodeType": "YulAssignment",
															"src": "6968:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7040:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7040:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7049:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7049:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6976:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "6976:63:6"
																},
																"nativeSrc": "6976:78:6",
																"nodeType": "YulFunctionCall",
																"src": "6976:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6968:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6968:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6748:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6838:9:6",
														"nodeType": "YulTypedName",
														"src": "6838:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6850:6:6",
														"nodeType": "YulTypedName",
														"src": "6850:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6861:4:6",
														"nodeType": "YulTypedName",
														"src": "6861:4:6",
														"type": ""
													}
												],
												"src": "6748:313:6"
											},
											{
												"body": {
													"nativeSrc": "7187:859:6",
													"nodeType": "YulBlock",
													"src": "7187:859:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7233:83:6",
																"nodeType": "YulBlock",
																"src": "7233:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7235:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7235:77:6"
																			},
																			"nativeSrc": "7235:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7235:79:6"
																		},
																		"nativeSrc": "7235:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7235:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7208:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7208:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7217:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7217:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7204:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7204:3:6"
																		},
																		"nativeSrc": "7204:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7204:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7229:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7229:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7200:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7200:3:6"
																},
																"nativeSrc": "7200:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7200:32:6"
															},
															"nativeSrc": "7197:119:6",
															"nodeType": "YulIf",
															"src": "7197:119:6"
														},
														{
															"nativeSrc": "7326:287:6",
															"nodeType": "YulBlock",
															"src": "7326:287:6",
															"statements": [
																{
																	"nativeSrc": "7341:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7341:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7372:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7372:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7383:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7383:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7368:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7368:3:6"
																				},
																				"nativeSrc": "7368:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7368:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7355:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "7355:12:6"
																		},
																		"nativeSrc": "7355:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7355:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7345:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7345:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7433:83:6",
																		"nodeType": "YulBlock",
																		"src": "7433:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7435:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "7435:77:6"
																					},
																					"nativeSrc": "7435:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7435:79:6"
																				},
																				"nativeSrc": "7435:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "7435:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7405:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7405:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7413:18:6",
																				"nodeType": "YulLiteral",
																				"src": "7413:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7402:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7402:2:6"
																		},
																		"nativeSrc": "7402:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7402:30:6"
																	},
																	"nativeSrc": "7399:117:6",
																	"nodeType": "YulIf",
																	"src": "7399:117:6"
																},
																{
																	"nativeSrc": "7530:73:6",
																	"nodeType": "YulAssignment",
																	"src": "7530:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7575:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7575:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7586:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7586:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7571:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7571:3:6"
																				},
																				"nativeSrc": "7571:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7571:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7595:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7595:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7540:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "7540:30:6"
																		},
																		"nativeSrc": "7540:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7540:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7530:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7530:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7623:118:6",
															"nodeType": "YulBlock",
															"src": "7623:118:6",
															"statements": [
																{
																	"nativeSrc": "7638:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7638:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7652:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7652:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7642:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7642:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7668:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7668:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7703:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7703:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7714:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7714:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7699:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7699:3:6"
																				},
																				"nativeSrc": "7699:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7699:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7723:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7723:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7678:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7678:20:6"
																		},
																		"nativeSrc": "7678:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7678:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7668:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7668:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7751:288:6",
															"nodeType": "YulBlock",
															"src": "7751:288:6",
															"statements": [
																{
																	"nativeSrc": "7766:46:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7766:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7797:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7797:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7808:2:6",
																						"nodeType": "YulLiteral",
																						"src": "7808:2:6",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7793:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7793:3:6"
																				},
																				"nativeSrc": "7793:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7793:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7780:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "7780:12:6"
																		},
																		"nativeSrc": "7780:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7780:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7770:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7770:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7859:83:6",
																		"nodeType": "YulBlock",
																		"src": "7859:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7861:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "7861:77:6"
																					},
																					"nativeSrc": "7861:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7861:79:6"
																				},
																				"nativeSrc": "7861:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "7861:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7831:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7831:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7839:18:6",
																				"nodeType": "YulLiteral",
																				"src": "7839:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7828:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7828:2:6"
																		},
																		"nativeSrc": "7828:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7828:30:6"
																	},
																	"nativeSrc": "7825:117:6",
																	"nodeType": "YulIf",
																	"src": "7825:117:6"
																},
																{
																	"nativeSrc": "7956:73:6",
																	"nodeType": "YulAssignment",
																	"src": "7956:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8001:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8001:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8012:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8012:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7997:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7997:3:6"
																				},
																				"nativeSrc": "7997:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7997:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8021:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8021:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7966:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "7966:30:6"
																		},
																		"nativeSrc": "7966:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7966:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7956:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7956:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr",
												"nativeSrc": "7067:979:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7141:9:6",
														"nodeType": "YulTypedName",
														"src": "7141:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7152:7:6",
														"nodeType": "YulTypedName",
														"src": "7152:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7164:6:6",
														"nodeType": "YulTypedName",
														"src": "7164:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7172:6:6",
														"nodeType": "YulTypedName",
														"src": "7172:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7180:6:6",
														"nodeType": "YulTypedName",
														"src": "7180:6:6",
														"type": ""
													}
												],
												"src": "7067:979:6"
											},
											{
												"body": {
													"nativeSrc": "8213:1076:6",
													"nodeType": "YulBlock",
													"src": "8213:1076:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8260:83:6",
																"nodeType": "YulBlock",
																"src": "8260:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8262:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8262:77:6"
																			},
																			"nativeSrc": "8262:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8262:79:6"
																		},
																		"nativeSrc": "8262:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8262:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8234:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8234:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8243:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8243:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:6"
																		},
																		"nativeSrc": "8230:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8230:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8255:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8255:3:6",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8226:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8226:3:6"
																},
																"nativeSrc": "8226:33:6",
																"nodeType": "YulFunctionCall",
																"src": "8226:33:6"
															},
															"nativeSrc": "8223:120:6",
															"nodeType": "YulIf",
															"src": "8223:120:6"
														},
														{
															"nativeSrc": "8353:287:6",
															"nodeType": "YulBlock",
															"src": "8353:287:6",
															"statements": [
																{
																	"nativeSrc": "8368:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8368:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8399:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8399:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8410:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8410:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8395:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8395:3:6"
																				},
																				"nativeSrc": "8395:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8395:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8382:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "8382:12:6"
																		},
																		"nativeSrc": "8382:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8382:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8372:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8372:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8460:83:6",
																		"nodeType": "YulBlock",
																		"src": "8460:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8462:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "8462:77:6"
																					},
																					"nativeSrc": "8462:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8462:79:6"
																				},
																				"nativeSrc": "8462:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8462:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8432:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8432:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8440:18:6",
																				"nodeType": "YulLiteral",
																				"src": "8440:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8429:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8429:2:6"
																		},
																		"nativeSrc": "8429:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8429:30:6"
																	},
																	"nativeSrc": "8426:117:6",
																	"nodeType": "YulIf",
																	"src": "8426:117:6"
																},
																{
																	"nativeSrc": "8557:73:6",
																	"nodeType": "YulAssignment",
																	"src": "8557:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8602:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8602:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8613:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8613:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8598:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8598:3:6"
																				},
																				"nativeSrc": "8598:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8598:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8622:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8622:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8567:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "8567:30:6"
																		},
																		"nativeSrc": "8567:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8567:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8557:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8557:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8650:118:6",
															"nodeType": "YulBlock",
															"src": "8650:118:6",
															"statements": [
																{
																	"nativeSrc": "8665:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8665:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8679:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8679:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8669:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8669:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8695:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8695:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8730:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8730:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8741:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8741:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8726:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8726:3:6"
																				},
																				"nativeSrc": "8726:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8726:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8750:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8750:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8705:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8705:20:6"
																		},
																		"nativeSrc": "8705:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8705:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8695:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8695:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8778:118:6",
															"nodeType": "YulBlock",
															"src": "8778:118:6",
															"statements": [
																{
																	"nativeSrc": "8793:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8793:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8807:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8807:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8797:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8797:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8823:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8823:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8858:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8858:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8869:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8869:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8854:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8854:3:6"
																				},
																				"nativeSrc": "8854:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8854:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8878:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8878:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8833:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8833:20:6"
																		},
																		"nativeSrc": "8833:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8833:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8823:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8823:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8906:118:6",
															"nodeType": "YulBlock",
															"src": "8906:118:6",
															"statements": [
																{
																	"nativeSrc": "8921:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8921:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8935:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8935:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8925:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8925:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8951:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8951:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8986:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8986:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8997:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8997:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8982:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8982:3:6"
																				},
																				"nativeSrc": "8982:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8982:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9006:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9006:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8961:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8961:20:6"
																		},
																		"nativeSrc": "8961:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8961:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8951:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8951:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9034:119:6",
															"nodeType": "YulBlock",
															"src": "9034:119:6",
															"statements": [
																{
																	"nativeSrc": "9049:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9049:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9063:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9063:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9053:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9053:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9080:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9080:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9115:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9115:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9126:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9126:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9111:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9111:3:6"
																				},
																				"nativeSrc": "9111:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9111:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9135:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9135:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9090:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9090:20:6"
																		},
																		"nativeSrc": "9090:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9090:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "9080:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9080:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9163:119:6",
															"nodeType": "YulBlock",
															"src": "9163:119:6",
															"statements": [
																{
																	"nativeSrc": "9178:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9178:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9192:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9192:3:6",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9182:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9182:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9209:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9244:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9244:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9255:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9240:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9240:3:6"
																				},
																				"nativeSrc": "9240:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9264:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9219:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9219:20:6"
																		},
																		"nativeSrc": "9219:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "9209:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9209:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "8052:1237:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8143:9:6",
														"nodeType": "YulTypedName",
														"src": "8143:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8154:7:6",
														"nodeType": "YulTypedName",
														"src": "8154:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8166:6:6",
														"nodeType": "YulTypedName",
														"src": "8166:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8174:6:6",
														"nodeType": "YulTypedName",
														"src": "8174:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8182:6:6",
														"nodeType": "YulTypedName",
														"src": "8182:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8190:6:6",
														"nodeType": "YulTypedName",
														"src": "8190:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8198:6:6",
														"nodeType": "YulTypedName",
														"src": "8198:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8206:6:6",
														"nodeType": "YulTypedName",
														"src": "8206:6:6",
														"type": ""
													}
												],
												"src": "8052:1237:6"
											},
											{
												"body": {
													"nativeSrc": "9360:53:6",
													"nodeType": "YulBlock",
													"src": "9360:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9377:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9377:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9400:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9400:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9382:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9382:17:6"
																		},
																		"nativeSrc": "9382:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9382:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9370:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9370:6:6"
																},
																"nativeSrc": "9370:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9370:37:6"
															},
															"nativeSrc": "9370:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9370:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9295:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9348:5:6",
														"nodeType": "YulTypedName",
														"src": "9348:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9355:3:6",
														"nodeType": "YulTypedName",
														"src": "9355:3:6",
														"type": ""
													}
												],
												"src": "9295:118:6"
											},
											{
												"body": {
													"nativeSrc": "9657:537:6",
													"nodeType": "YulBlock",
													"src": "9657:537:6",
													"statements": [
														{
															"nativeSrc": "9667:27:6",
															"nodeType": "YulAssignment",
															"src": "9667:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9679:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9679:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9690:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9690:3:6",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9675:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9675:3:6"
																},
																"nativeSrc": "9675:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9675:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9667:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9667:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9748:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9748:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9761:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9761:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9772:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9772:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9757:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:6"
																		},
																		"nativeSrc": "9757:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9757:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9704:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9704:43:6"
																},
																"nativeSrc": "9704:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9704:71:6"
															},
															"nativeSrc": "9704:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9704:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9829:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9829:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9842:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9853:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9853:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9838:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9838:3:6"
																		},
																		"nativeSrc": "9838:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9838:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9785:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9785:43:6"
																},
																"nativeSrc": "9785:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9785:72:6"
															},
															"nativeSrc": "9785:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9785:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9911:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9911:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9924:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9924:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9935:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9935:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9920:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9920:3:6"
																		},
																		"nativeSrc": "9920:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9920:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9867:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9867:43:6"
																},
																"nativeSrc": "9867:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9867:72:6"
															},
															"nativeSrc": "9867:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9867:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9993:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9993:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10006:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10006:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10017:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10017:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10002:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10002:3:6"
																		},
																		"nativeSrc": "10002:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10002:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9949:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9949:43:6"
																},
																"nativeSrc": "9949:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9949:72:6"
															},
															"nativeSrc": "9949:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9949:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10075:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10075:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10088:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10088:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10099:3:6",
																				"nodeType": "YulLiteral",
																				"src": "10099:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10084:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10084:3:6"
																		},
																		"nativeSrc": "10084:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10084:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10031:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10031:43:6"
																},
																"nativeSrc": "10031:73:6",
																"nodeType": "YulFunctionCall",
																"src": "10031:73:6"
															},
															"nativeSrc": "10031:73:6",
															"nodeType": "YulExpressionStatement",
															"src": "10031:73:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10158:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10158:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10171:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10171:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10182:3:6",
																				"nodeType": "YulLiteral",
																				"src": "10182:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10167:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10167:3:6"
																		},
																		"nativeSrc": "10167:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10167:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10114:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10114:43:6"
																},
																"nativeSrc": "10114:73:6",
																"nodeType": "YulFunctionCall",
																"src": "10114:73:6"
															},
															"nativeSrc": "10114:73:6",
															"nodeType": "YulExpressionStatement",
															"src": "10114:73:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9419:775:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9589:9:6",
														"nodeType": "YulTypedName",
														"src": "9589:9:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9601:6:6",
														"nodeType": "YulTypedName",
														"src": "9601:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9609:6:6",
														"nodeType": "YulTypedName",
														"src": "9609:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9617:6:6",
														"nodeType": "YulTypedName",
														"src": "9617:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9625:6:6",
														"nodeType": "YulTypedName",
														"src": "9625:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9633:6:6",
														"nodeType": "YulTypedName",
														"src": "9633:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9641:6:6",
														"nodeType": "YulTypedName",
														"src": "9641:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9652:4:6",
														"nodeType": "YulTypedName",
														"src": "9652:4:6",
														"type": ""
													}
												],
												"src": "9419:775:6"
											},
											{
												"body": {
													"nativeSrc": "10310:689:6",
													"nodeType": "YulBlock",
													"src": "10310:689:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "10356:83:6",
																"nodeType": "YulBlock",
																"src": "10356:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10358:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "10358:77:6"
																			},
																			"nativeSrc": "10358:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10358:79:6"
																		},
																		"nativeSrc": "10358:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10358:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10331:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10331:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10340:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10340:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10327:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10327:3:6"
																		},
																		"nativeSrc": "10327:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10327:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10352:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10352:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10323:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10323:3:6"
																},
																"nativeSrc": "10323:32:6",
																"nodeType": "YulFunctionCall",
																"src": "10323:32:6"
															},
															"nativeSrc": "10320:119:6",
															"nodeType": "YulIf",
															"src": "10320:119:6"
														},
														{
															"nativeSrc": "10449:287:6",
															"nodeType": "YulBlock",
															"src": "10449:287:6",
															"statements": [
																{
																	"nativeSrc": "10464:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10464:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10495:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10495:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10506:1:6",
																						"nodeType": "YulLiteral",
																						"src": "10506:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10491:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10491:3:6"
																				},
																				"nativeSrc": "10491:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10491:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10478:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "10478:12:6"
																		},
																		"nativeSrc": "10478:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10478:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10468:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10468:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10556:83:6",
																		"nodeType": "YulBlock",
																		"src": "10556:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10558:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "10558:77:6"
																					},
																					"nativeSrc": "10558:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10558:79:6"
																				},
																				"nativeSrc": "10558:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "10558:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10528:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10528:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10536:18:6",
																				"nodeType": "YulLiteral",
																				"src": "10536:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10525:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10525:2:6"
																		},
																		"nativeSrc": "10525:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10525:30:6"
																	},
																	"nativeSrc": "10522:117:6",
																	"nodeType": "YulIf",
																	"src": "10522:117:6"
																},
																{
																	"nativeSrc": "10653:73:6",
																	"nodeType": "YulAssignment",
																	"src": "10653:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10698:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10698:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10709:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10709:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10694:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10694:3:6"
																				},
																				"nativeSrc": "10694:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10694:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10718:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10718:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10663:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "10663:30:6"
																		},
																		"nativeSrc": "10663:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10663:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10653:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10653:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10746:118:6",
															"nodeType": "YulBlock",
															"src": "10746:118:6",
															"statements": [
																{
																	"nativeSrc": "10761:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10761:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10775:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10775:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10765:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10765:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10791:63:6",
																	"nodeType": "YulAssignment",
																	"src": "10791:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10826:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10826:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10837:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10837:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10822:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10822:3:6"
																				},
																				"nativeSrc": "10822:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10822:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10846:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10846:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10801:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "10801:20:6"
																		},
																		"nativeSrc": "10801:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10801:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10791:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10791:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10874:118:6",
															"nodeType": "YulBlock",
															"src": "10874:118:6",
															"statements": [
																{
																	"nativeSrc": "10889:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10889:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10903:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10903:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10893:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10893:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10919:63:6",
																	"nodeType": "YulAssignment",
																	"src": "10919:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10954:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10954:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10965:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10965:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10950:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10950:3:6"
																				},
																				"nativeSrc": "10950:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10950:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10974:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10974:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10929:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "10929:20:6"
																		},
																		"nativeSrc": "10929:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10929:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10919:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10919:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256",
												"nativeSrc": "10200:799:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10264:9:6",
														"nodeType": "YulTypedName",
														"src": "10264:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10275:7:6",
														"nodeType": "YulTypedName",
														"src": "10275:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10287:6:6",
														"nodeType": "YulTypedName",
														"src": "10287:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10295:6:6",
														"nodeType": "YulTypedName",
														"src": "10295:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10303:6:6",
														"nodeType": "YulTypedName",
														"src": "10303:6:6",
														"type": ""
													}
												],
												"src": "10200:799:6"
											},
											{
												"body": {
													"nativeSrc": "11033:152:6",
													"nodeType": "YulBlock",
													"src": "11033:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11050:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11050:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11053:77:6",
																		"nodeType": "YulLiteral",
																		"src": "11053:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11043:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11043:6:6"
																},
																"nativeSrc": "11043:88:6",
																"nodeType": "YulFunctionCall",
																"src": "11043:88:6"
															},
															"nativeSrc": "11043:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "11043:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11147:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11147:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11150:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11150:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11140:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:6"
																},
																"nativeSrc": "11140:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11140:15:6"
															},
															"nativeSrc": "11140:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11140:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11171:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11171:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11174:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11174:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11164:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11164:6:6"
																},
																"nativeSrc": "11164:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11164:15:6"
															},
															"nativeSrc": "11164:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11164:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11005:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "11005:180:6"
											},
											{
												"body": {
													"nativeSrc": "11235:147:6",
													"nodeType": "YulBlock",
													"src": "11235:147:6",
													"statements": [
														{
															"nativeSrc": "11245:25:6",
															"nodeType": "YulAssignment",
															"src": "11245:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11268:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11268:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11250:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11250:17:6"
																},
																"nativeSrc": "11250:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11250:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11245:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11245:1:6"
																}
															]
														},
														{
															"nativeSrc": "11279:25:6",
															"nodeType": "YulAssignment",
															"src": "11279:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11302:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11302:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11284:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11284:17:6"
																},
																"nativeSrc": "11284:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11284:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11279:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11279:1:6"
																}
															]
														},
														{
															"nativeSrc": "11313:16:6",
															"nodeType": "YulAssignment",
															"src": "11313:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11324:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11324:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11327:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11327:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11320:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11320:3:6"
																},
																"nativeSrc": "11320:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11320:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11313:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11313:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11353:22:6",
																"nodeType": "YulBlock",
																"src": "11353:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11355:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11355:16:6"
																			},
																			"nativeSrc": "11355:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11355:18:6"
																		},
																		"nativeSrc": "11355:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11355:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11345:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11345:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11348:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11348:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11342:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11342:2:6"
																},
																"nativeSrc": "11342:10:6",
																"nodeType": "YulFunctionCall",
																"src": "11342:10:6"
															},
															"nativeSrc": "11339:36:6",
															"nodeType": "YulIf",
															"src": "11339:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11191:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11222:1:6",
														"nodeType": "YulTypedName",
														"src": "11222:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11225:1:6",
														"nodeType": "YulTypedName",
														"src": "11225:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11231:3:6",
														"nodeType": "YulTypedName",
														"src": "11231:3:6",
														"type": ""
													}
												],
												"src": "11191:191:6"
											},
											{
												"body": {
													"nativeSrc": "11433:149:6",
													"nodeType": "YulBlock",
													"src": "11433:149:6",
													"statements": [
														{
															"nativeSrc": "11443:25:6",
															"nodeType": "YulAssignment",
															"src": "11443:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11466:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11466:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11448:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11448:17:6"
																},
																"nativeSrc": "11448:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11448:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11443:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11443:1:6"
																}
															]
														},
														{
															"nativeSrc": "11477:25:6",
															"nodeType": "YulAssignment",
															"src": "11477:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11500:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11500:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11482:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11482:17:6"
																},
																"nativeSrc": "11482:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11482:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11477:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11477:1:6"
																}
															]
														},
														{
															"nativeSrc": "11511:17:6",
															"nodeType": "YulAssignment",
															"src": "11511:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11523:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11523:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11526:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11526:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11519:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11519:3:6"
																},
																"nativeSrc": "11519:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11519:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11511:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11511:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11553:22:6",
																"nodeType": "YulBlock",
																"src": "11553:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11555:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11555:16:6"
																			},
																			"nativeSrc": "11555:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11555:18:6"
																		},
																		"nativeSrc": "11555:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11555:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11544:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11544:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11550:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11550:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11541:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11541:2:6"
																},
																"nativeSrc": "11541:11:6",
																"nodeType": "YulFunctionCall",
																"src": "11541:11:6"
															},
															"nativeSrc": "11538:37:6",
															"nodeType": "YulIf",
															"src": "11538:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11388:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11419:1:6",
														"nodeType": "YulTypedName",
														"src": "11419:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11422:1:6",
														"nodeType": "YulTypedName",
														"src": "11422:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11428:4:6",
														"nodeType": "YulTypedName",
														"src": "11428:4:6",
														"type": ""
													}
												],
												"src": "11388:194:6"
											},
											{
												"body": {
													"nativeSrc": "11702:34:6",
													"nodeType": "YulBlock",
													"src": "11702:34:6",
													"statements": [
														{
															"nativeSrc": "11712:18:6",
															"nodeType": "YulAssignment",
															"src": "11712:18:6",
															"value": {
																"name": "pos",
																"nativeSrc": "11727:3:6",
																"nodeType": "YulIdentifier",
																"src": "11727:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11712:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "11712:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11588:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11674:3:6",
														"nodeType": "YulTypedName",
														"src": "11674:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11679:6:6",
														"nodeType": "YulTypedName",
														"src": "11679:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11690:11:6",
														"nodeType": "YulTypedName",
														"src": "11690:11:6",
														"type": ""
													}
												],
												"src": "11588:148:6"
											},
											{
												"body": {
													"nativeSrc": "11852:280:6",
													"nodeType": "YulBlock",
													"src": "11852:280:6",
													"statements": [
														{
															"nativeSrc": "11862:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "11862:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11909:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11909:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "11876:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "11876:32:6"
																},
																"nativeSrc": "11876:39:6",
																"nodeType": "YulFunctionCall",
																"src": "11876:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11866:6:6",
																	"nodeType": "YulTypedName",
																	"src": "11866:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11924:96:6",
															"nodeType": "YulAssignment",
															"src": "11924:96:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12008:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12008:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12013:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12013:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11931:76:6",
																	"nodeType": "YulIdentifier",
																	"src": "11931:76:6"
																},
																"nativeSrc": "11931:89:6",
																"nodeType": "YulFunctionCall",
																"src": "11931:89:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11924:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11924:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12068:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "12068:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12075:4:6",
																				"nodeType": "YulLiteral",
																				"src": "12075:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12064:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12064:3:6"
																		},
																		"nativeSrc": "12064:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12064:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12082:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12082:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12087:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12087:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12029:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "12029:34:6"
																},
																"nativeSrc": "12029:65:6",
																"nodeType": "YulFunctionCall",
																"src": "12029:65:6"
															},
															"nativeSrc": "12029:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "12029:65:6"
														},
														{
															"nativeSrc": "12103:23:6",
															"nodeType": "YulAssignment",
															"src": "12103:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12114:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12114:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12119:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12119:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12110:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12110:3:6"
																},
																"nativeSrc": "12110:16:6",
																"nodeType": "YulFunctionCall",
																"src": "12110:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12103:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12103:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11742:390:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11833:5:6",
														"nodeType": "YulTypedName",
														"src": "11833:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11840:3:6",
														"nodeType": "YulTypedName",
														"src": "11840:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11848:3:6",
														"nodeType": "YulTypedName",
														"src": "11848:3:6",
														"type": ""
													}
												],
												"src": "11742:390:6"
											},
											{
												"body": {
													"nativeSrc": "12274:139:6",
													"nodeType": "YulBlock",
													"src": "12274:139:6",
													"statements": [
														{
															"nativeSrc": "12285:102:6",
															"nodeType": "YulAssignment",
															"src": "12285:102:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12374:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12374:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12383:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12383:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12292:81:6",
																	"nodeType": "YulIdentifier",
																	"src": "12292:81:6"
																},
																"nativeSrc": "12292:95:6",
																"nodeType": "YulFunctionCall",
																"src": "12292:95:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12285:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12285:3:6"
																}
															]
														},
														{
															"nativeSrc": "12397:10:6",
															"nodeType": "YulAssignment",
															"src": "12397:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "12404:3:6",
																"nodeType": "YulIdentifier",
																"src": "12404:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12397:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12397:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12138:275:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12253:3:6",
														"nodeType": "YulTypedName",
														"src": "12253:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12259:6:6",
														"nodeType": "YulTypedName",
														"src": "12259:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12270:3:6",
														"nodeType": "YulTypedName",
														"src": "12270:3:6",
														"type": ""
													}
												],
												"src": "12138:275:6"
											},
											{
												"body": {
													"nativeSrc": "12447:152:6",
													"nodeType": "YulBlock",
													"src": "12447:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12464:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12464:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12467:77:6",
																		"nodeType": "YulLiteral",
																		"src": "12467:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12457:6:6"
																},
																"nativeSrc": "12457:88:6",
																"nodeType": "YulFunctionCall",
																"src": "12457:88:6"
															},
															"nativeSrc": "12457:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "12457:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12561:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12561:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12564:4:6",
																		"nodeType": "YulLiteral",
																		"src": "12564:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12554:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12554:6:6"
																},
																"nativeSrc": "12554:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12554:15:6"
															},
															"nativeSrc": "12554:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12554:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12585:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12585:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12588:4:6",
																		"nodeType": "YulLiteral",
																		"src": "12588:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12578:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12578:6:6"
																},
																"nativeSrc": "12578:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12578:15:6"
															},
															"nativeSrc": "12578:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12578:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12419:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "12419:180:6"
											},
											{
												"body": {
													"nativeSrc": "12656:269:6",
													"nodeType": "YulBlock",
													"src": "12656:269:6",
													"statements": [
														{
															"nativeSrc": "12666:22:6",
															"nodeType": "YulAssignment",
															"src": "12666:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12680:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12680:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12686:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12686:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12676:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12676:3:6"
																},
																"nativeSrc": "12676:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12676:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12666:6:6"
																}
															]
														},
														{
															"nativeSrc": "12697:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12697:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12727:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12727:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12733:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12723:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12723:3:6"
																},
																"nativeSrc": "12723:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12723:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12701:18:6",
																	"nodeType": "YulTypedName",
																	"src": "12701:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12774:51:6",
																"nodeType": "YulBlock",
																"src": "12774:51:6",
																"statements": [
																	{
																		"nativeSrc": "12788:27:6",
																		"nodeType": "YulAssignment",
																		"src": "12788:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12802:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "12802:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12810:4:6",
																					"nodeType": "YulLiteral",
																					"src": "12810:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12798:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "12798:3:6"
																			},
																			"nativeSrc": "12798:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12798:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12788:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12788:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12754:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "12754:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12747:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12747:6:6"
																},
																"nativeSrc": "12747:26:6",
																"nodeType": "YulFunctionCall",
																"src": "12747:26:6"
															},
															"nativeSrc": "12744:81:6",
															"nodeType": "YulIf",
															"src": "12744:81:6"
														},
														{
															"body": {
																"nativeSrc": "12877:42:6",
																"nodeType": "YulBlock",
																"src": "12877:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12891:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12891:16:6"
																			},
																			"nativeSrc": "12891:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12891:18:6"
																		},
																		"nativeSrc": "12891:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12891:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12841:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "12841:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12864:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12864:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12872:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12872:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12861:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "12861:2:6"
																		},
																		"nativeSrc": "12861:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12861:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12838:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "12838:2:6"
																},
																"nativeSrc": "12838:38:6",
																"nodeType": "YulFunctionCall",
																"src": "12838:38:6"
															},
															"nativeSrc": "12835:84:6",
															"nodeType": "YulIf",
															"src": "12835:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12605:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12640:4:6",
														"nodeType": "YulTypedName",
														"src": "12640:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12649:6:6",
														"nodeType": "YulTypedName",
														"src": "12649:6:6",
														"type": ""
													}
												],
												"src": "12605:320:6"
											},
											{
												"body": {
													"nativeSrc": "12985:87:6",
													"nodeType": "YulBlock",
													"src": "12985:87:6",
													"statements": [
														{
															"nativeSrc": "12995:11:6",
															"nodeType": "YulAssignment",
															"src": "12995:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "13003:3:6",
																"nodeType": "YulIdentifier",
																"src": "13003:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12995:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12995:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13023:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13023:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13026:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13026:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13016:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13016:6:6"
																},
																"nativeSrc": "13016:14:6",
																"nodeType": "YulFunctionCall",
																"src": "13016:14:6"
															},
															"nativeSrc": "13016:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "13016:14:6"
														},
														{
															"nativeSrc": "13039:26:6",
															"nodeType": "YulAssignment",
															"src": "13039:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13057:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13057:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13060:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13060:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13047:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "13047:9:6"
																},
																"nativeSrc": "13047:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13047:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13039:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13039:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "12931:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12972:3:6",
														"nodeType": "YulTypedName",
														"src": "12972:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12980:4:6",
														"nodeType": "YulTypedName",
														"src": "12980:4:6",
														"type": ""
													}
												],
												"src": "12931:141:6"
											},
											{
												"body": {
													"nativeSrc": "13122:49:6",
													"nodeType": "YulBlock",
													"src": "13122:49:6",
													"statements": [
														{
															"nativeSrc": "13132:33:6",
															"nodeType": "YulAssignment",
															"src": "13132:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13150:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "13150:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13157:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13157:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13146:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13146:3:6"
																		},
																		"nativeSrc": "13146:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13146:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13162:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13162:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13142:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13142:3:6"
																},
																"nativeSrc": "13142:23:6",
																"nodeType": "YulFunctionCall",
																"src": "13142:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13132:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13132:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "13078:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13105:5:6",
														"nodeType": "YulTypedName",
														"src": "13105:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13115:6:6",
														"nodeType": "YulTypedName",
														"src": "13115:6:6",
														"type": ""
													}
												],
												"src": "13078:93:6"
											},
											{
												"body": {
													"nativeSrc": "13230:54:6",
													"nodeType": "YulBlock",
													"src": "13230:54:6",
													"statements": [
														{
															"nativeSrc": "13240:37:6",
															"nodeType": "YulAssignment",
															"src": "13240:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13265:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13265:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13271:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13271:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13261:3:6"
																},
																"nativeSrc": "13261:16:6",
																"nodeType": "YulFunctionCall",
																"src": "13261:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13240:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "13240:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "13177:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13205:4:6",
														"nodeType": "YulTypedName",
														"src": "13205:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13211:5:6",
														"nodeType": "YulTypedName",
														"src": "13211:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13221:8:6",
														"nodeType": "YulTypedName",
														"src": "13221:8:6",
														"type": ""
													}
												],
												"src": "13177:107:6"
											},
											{
												"body": {
													"nativeSrc": "13366:317:6",
													"nodeType": "YulBlock",
													"src": "13366:317:6",
													"statements": [
														{
															"nativeSrc": "13376:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "13376:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "13397:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "13397:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13409:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13409:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13393:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13393:3:6"
																},
																"nativeSrc": "13393:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13393:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "13380:9:6",
																	"nodeType": "YulTypedName",
																	"src": "13380:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13420:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "13420:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "13451:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13451:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13462:66:6",
																		"nodeType": "YulLiteral",
																		"src": "13462:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "13432:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "13432:18:6"
																},
																"nativeSrc": "13432:97:6",
																"nodeType": "YulFunctionCall",
																"src": "13432:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "13424:4:6",
																	"nodeType": "YulTypedName",
																	"src": "13424:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13538:51:6",
															"nodeType": "YulAssignment",
															"src": "13538:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "13569:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13569:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "13580:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "13580:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "13550:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "13550:18:6"
																},
																"nativeSrc": "13550:39:6",
																"nodeType": "YulFunctionCall",
																"src": "13550:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "13538:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "13538:8:6"
																}
															]
														},
														{
															"nativeSrc": "13598:30:6",
															"nodeType": "YulAssignment",
															"src": "13598:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13611:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13611:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "13622:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13622:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "13618:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13618:3:6"
																		},
																		"nativeSrc": "13618:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13618:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13607:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13607:3:6"
																},
																"nativeSrc": "13607:21:6",
																"nodeType": "YulFunctionCall",
																"src": "13607:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13598:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "13598:5:6"
																}
															]
														},
														{
															"nativeSrc": "13637:40:6",
															"nodeType": "YulAssignment",
															"src": "13637:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13650:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13650:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "13661:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "13661:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "13671:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13671:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13657:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13657:3:6"
																		},
																		"nativeSrc": "13657:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13657:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13647:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13647:2:6"
																},
																"nativeSrc": "13647:30:6",
																"nodeType": "YulFunctionCall",
																"src": "13647:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13637:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13637:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "13290:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13327:5:6",
														"nodeType": "YulTypedName",
														"src": "13327:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "13334:10:6",
														"nodeType": "YulTypedName",
														"src": "13334:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "13346:8:6",
														"nodeType": "YulTypedName",
														"src": "13346:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13359:6:6",
														"nodeType": "YulTypedName",
														"src": "13359:6:6",
														"type": ""
													}
												],
												"src": "13290:393:6"
											},
											{
												"body": {
													"nativeSrc": "13721:28:6",
													"nodeType": "YulBlock",
													"src": "13721:28:6",
													"statements": [
														{
															"nativeSrc": "13731:12:6",
															"nodeType": "YulAssignment",
															"src": "13731:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "13738:5:6",
																"nodeType": "YulIdentifier",
																"src": "13738:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13731:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13731:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "13689:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13707:5:6",
														"nodeType": "YulTypedName",
														"src": "13707:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13717:3:6",
														"nodeType": "YulTypedName",
														"src": "13717:3:6",
														"type": ""
													}
												],
												"src": "13689:60:6"
											},
											{
												"body": {
													"nativeSrc": "13815:82:6",
													"nodeType": "YulBlock",
													"src": "13815:82:6",
													"statements": [
														{
															"nativeSrc": "13825:66:6",
															"nodeType": "YulAssignment",
															"src": "13825:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13883:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "13883:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "13865:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "13865:17:6"
																				},
																				"nativeSrc": "13865:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "13865:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13856:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "13856:8:6"
																		},
																		"nativeSrc": "13856:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13856:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13838:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13838:17:6"
																},
																"nativeSrc": "13838:53:6",
																"nodeType": "YulFunctionCall",
																"src": "13838:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13825:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "13825:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "13755:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13795:5:6",
														"nodeType": "YulTypedName",
														"src": "13795:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13805:9:6",
														"nodeType": "YulTypedName",
														"src": "13805:9:6",
														"type": ""
													}
												],
												"src": "13755:142:6"
											},
											{
												"body": {
													"nativeSrc": "13950:28:6",
													"nodeType": "YulBlock",
													"src": "13950:28:6",
													"statements": [
														{
															"nativeSrc": "13960:12:6",
															"nodeType": "YulAssignment",
															"src": "13960:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "13967:5:6",
																"nodeType": "YulIdentifier",
																"src": "13967:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13960:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13960:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "13903:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13936:5:6",
														"nodeType": "YulTypedName",
														"src": "13936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13946:3:6",
														"nodeType": "YulTypedName",
														"src": "13946:3:6",
														"type": ""
													}
												],
												"src": "13903:75:6"
											},
											{
												"body": {
													"nativeSrc": "14060:193:6",
													"nodeType": "YulBlock",
													"src": "14060:193:6",
													"statements": [
														{
															"nativeSrc": "14070:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "14070:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "14125:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "14125:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "14094:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "14094:30:6"
																},
																"nativeSrc": "14094:39:6",
																"nodeType": "YulFunctionCall",
																"src": "14094:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "14074:16:6",
																	"nodeType": "YulTypedName",
																	"src": "14074:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14149:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "14149:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "14189:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "14189:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "14183:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "14183:5:6"
																				},
																				"nativeSrc": "14183:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "14183:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "14196:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14196:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "14228:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "14228:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "14204:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "14204:23:6"
																				},
																				"nativeSrc": "14204:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "14204:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "14155:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "14155:27:6"
																		},
																		"nativeSrc": "14155:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14155:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "14142:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14142:6:6"
																},
																"nativeSrc": "14142:105:6",
																"nodeType": "YulFunctionCall",
																"src": "14142:105:6"
															},
															"nativeSrc": "14142:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "14142:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "13984:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14037:4:6",
														"nodeType": "YulTypedName",
														"src": "14037:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14043:6:6",
														"nodeType": "YulTypedName",
														"src": "14043:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "14051:7:6",
														"nodeType": "YulTypedName",
														"src": "14051:7:6",
														"type": ""
													}
												],
												"src": "13984:269:6"
											},
											{
												"body": {
													"nativeSrc": "14308:24:6",
													"nodeType": "YulBlock",
													"src": "14308:24:6",
													"statements": [
														{
															"nativeSrc": "14318:8:6",
															"nodeType": "YulAssignment",
															"src": "14318:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "14325:1:6",
																"nodeType": "YulLiteral",
																"src": "14325:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14318:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14318:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "14259:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14304:3:6",
														"nodeType": "YulTypedName",
														"src": "14304:3:6",
														"type": ""
													}
												],
												"src": "14259:73:6"
											},
											{
												"body": {
													"nativeSrc": "14391:136:6",
													"nodeType": "YulBlock",
													"src": "14391:136:6",
													"statements": [
														{
															"nativeSrc": "14401:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "14401:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "14415:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "14415:30:6"
																},
																"nativeSrc": "14415:32:6",
																"nodeType": "YulFunctionCall",
																"src": "14415:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "14405:6:6",
																	"nodeType": "YulTypedName",
																	"src": "14405:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14500:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "14500:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "14506:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14506:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "14514:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14514:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "14456:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14456:43:6"
																},
																"nativeSrc": "14456:65:6",
																"nodeType": "YulFunctionCall",
																"src": "14456:65:6"
															},
															"nativeSrc": "14456:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "14456:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "14338:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14377:4:6",
														"nodeType": "YulTypedName",
														"src": "14377:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14383:6:6",
														"nodeType": "YulTypedName",
														"src": "14383:6:6",
														"type": ""
													}
												],
												"src": "14338:189:6"
											},
											{
												"body": {
													"nativeSrc": "14583:136:6",
													"nodeType": "YulBlock",
													"src": "14583:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "14650:63:6",
																"nodeType": "YulBlock",
																"src": "14650:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14694:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "14694:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14701:1:6",
																					"nodeType": "YulLiteral",
																					"src": "14701:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "14664:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "14664:29:6"
																			},
																			"nativeSrc": "14664:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14664:39:6"
																		},
																		"nativeSrc": "14664:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "14664:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14603:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "14603:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14610:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14610:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14600:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "14600:2:6"
																},
																"nativeSrc": "14600:14:6",
																"nodeType": "YulFunctionCall",
																"src": "14600:14:6"
															},
															"nativeSrc": "14593:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14615:26:6",
																"nodeType": "YulBlock",
																"src": "14615:26:6",
																"statements": [
																	{
																		"nativeSrc": "14617:22:6",
																		"nodeType": "YulAssignment",
																		"src": "14617:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14630:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "14630:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14637:1:6",
																					"nodeType": "YulLiteral",
																					"src": "14637:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14626:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "14626:3:6"
																			},
																			"nativeSrc": "14626:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14626:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "14617:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "14617:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14597:2:6",
																"nodeType": "YulBlock",
																"src": "14597:2:6",
																"statements": []
															},
															"src": "14593:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "14533:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "14571:5:6",
														"nodeType": "YulTypedName",
														"src": "14571:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14578:3:6",
														"nodeType": "YulTypedName",
														"src": "14578:3:6",
														"type": ""
													}
												],
												"src": "14533:186:6"
											},
											{
												"body": {
													"nativeSrc": "14804:464:6",
													"nodeType": "YulBlock",
													"src": "14804:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "14830:431:6",
																"nodeType": "YulBlock",
																"src": "14830:431:6",
																"statements": [
																	{
																		"nativeSrc": "14844:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14844:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "14892:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "14892:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "14860:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "14860:31:6"
																			},
																			"nativeSrc": "14860:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14860:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "14848:8:6",
																				"nodeType": "YulTypedName",
																				"src": "14848:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14911:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14911:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "14934:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "14934:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "14962:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "14962:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "14944:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "14944:17:6"
																					},
																					"nativeSrc": "14944:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "14944:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14930:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "14930:3:6"
																			},
																			"nativeSrc": "14930:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14930:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "14915:11:6",
																				"nodeType": "YulTypedName",
																				"src": "14915:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15131:27:6",
																			"nodeType": "YulBlock",
																			"src": "15131:27:6",
																			"statements": [
																				{
																					"nativeSrc": "15133:23:6",
																					"nodeType": "YulAssignment",
																					"src": "15133:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "15148:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "15148:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "15133:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "15133:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15115:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "15115:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15127:2:6",
																					"nodeType": "YulLiteral",
																					"src": "15127:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15112:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "15112:2:6"
																			},
																			"nativeSrc": "15112:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "15112:18:6"
																		},
																		"nativeSrc": "15109:49:6",
																		"nodeType": "YulIf",
																		"src": "15109:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "15200:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "15200:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "15217:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "15217:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "15245:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "15245:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "15227:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "15227:17:6"
																							},
																							"nativeSrc": "15227:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "15227:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15213:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "15213:3:6"
																					},
																					"nativeSrc": "15213:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "15213:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "15171:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "15171:28:6"
																			},
																			"nativeSrc": "15171:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "15171:80:6"
																		},
																		"nativeSrc": "15171:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "15171:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "14821:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14821:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14826:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14826:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14818:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "14818:2:6"
																},
																"nativeSrc": "14818:11:6",
																"nodeType": "YulFunctionCall",
																"src": "14818:11:6"
															},
															"nativeSrc": "14815:446:6",
															"nodeType": "YulIf",
															"src": "14815:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "14725:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "14780:5:6",
														"nodeType": "YulTypedName",
														"src": "14780:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14787:3:6",
														"nodeType": "YulTypedName",
														"src": "14787:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "14792:10:6",
														"nodeType": "YulTypedName",
														"src": "14792:10:6",
														"type": ""
													}
												],
												"src": "14725:543:6"
											},
											{
												"body": {
													"nativeSrc": "15337:54:6",
													"nodeType": "YulBlock",
													"src": "15337:54:6",
													"statements": [
														{
															"nativeSrc": "15347:37:6",
															"nodeType": "YulAssignment",
															"src": "15347:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15372:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15372:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15378:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "15378:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "15368:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15368:3:6"
																},
																"nativeSrc": "15368:16:6",
																"nodeType": "YulFunctionCall",
																"src": "15368:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15347:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "15347:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "15274:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15312:4:6",
														"nodeType": "YulTypedName",
														"src": "15312:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15318:5:6",
														"nodeType": "YulTypedName",
														"src": "15318:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15328:8:6",
														"nodeType": "YulTypedName",
														"src": "15328:8:6",
														"type": ""
													}
												],
												"src": "15274:117:6"
											},
											{
												"body": {
													"nativeSrc": "15448:118:6",
													"nodeType": "YulBlock",
													"src": "15448:118:6",
													"statements": [
														{
															"nativeSrc": "15458:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "15458:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15507:1:6",
																						"nodeType": "YulLiteral",
																						"src": "15507:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "15510:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "15510:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "15503:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "15503:3:6"
																				},
																				"nativeSrc": "15503:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "15503:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15522:1:6",
																						"nodeType": "YulLiteral",
																						"src": "15522:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "15518:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "15518:3:6"
																				},
																				"nativeSrc": "15518:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "15518:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "15474:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "15474:28:6"
																		},
																		"nativeSrc": "15474:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15474:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "15470:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15470:3:6"
																},
																"nativeSrc": "15470:56:6",
																"nodeType": "YulFunctionCall",
																"src": "15470:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15462:4:6",
																	"nodeType": "YulTypedName",
																	"src": "15462:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15535:25:6",
															"nodeType": "YulAssignment",
															"src": "15535:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15549:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15549:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "15555:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15555:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15545:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15545:3:6"
																},
																"nativeSrc": "15545:15:6",
																"nodeType": "YulFunctionCall",
																"src": "15545:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15535:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15535:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "15397:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15425:4:6",
														"nodeType": "YulTypedName",
														"src": "15425:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "15431:5:6",
														"nodeType": "YulTypedName",
														"src": "15431:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15441:6:6",
														"nodeType": "YulTypedName",
														"src": "15441:6:6",
														"type": ""
													}
												],
												"src": "15397:169:6"
											},
											{
												"body": {
													"nativeSrc": "15652:214:6",
													"nodeType": "YulBlock",
													"src": "15652:214:6",
													"statements": [
														{
															"nativeSrc": "15785:37:6",
															"nodeType": "YulAssignment",
															"src": "15785:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15812:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15812:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "15818:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15818:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "15793:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "15793:18:6"
																},
																"nativeSrc": "15793:29:6",
																"nodeType": "YulFunctionCall",
																"src": "15793:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15785:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15785:4:6"
																}
															]
														},
														{
															"nativeSrc": "15831:29:6",
															"nodeType": "YulAssignment",
															"src": "15831:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15842:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15842:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15852:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15852:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "15855:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "15855:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "15848:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15848:3:6"
																		},
																		"nativeSrc": "15848:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15848:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15839:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "15839:2:6"
																},
																"nativeSrc": "15839:21:6",
																"nodeType": "YulFunctionCall",
																"src": "15839:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "15831:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15831:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "15571:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15633:4:6",
														"nodeType": "YulTypedName",
														"src": "15633:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15639:3:6",
														"nodeType": "YulTypedName",
														"src": "15639:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "15647:4:6",
														"nodeType": "YulTypedName",
														"src": "15647:4:6",
														"type": ""
													}
												],
												"src": "15571:295:6"
											},
											{
												"body": {
													"nativeSrc": "15963:1303:6",
													"nodeType": "YulBlock",
													"src": "15963:1303:6",
													"statements": [
														{
															"nativeSrc": "15974:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "15974:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16021:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16021:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "15988:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "15988:32:6"
																},
																"nativeSrc": "15988:37:6",
																"nodeType": "YulFunctionCall",
																"src": "15988:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "15978:6:6",
																	"nodeType": "YulTypedName",
																	"src": "15978:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16110:22:6",
																"nodeType": "YulBlock",
																"src": "16110:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16112:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "16112:16:6"
																			},
																			"nativeSrc": "16112:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "16112:18:6"
																		},
																		"nativeSrc": "16112:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "16112:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16082:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16082:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16090:18:6",
																		"nodeType": "YulLiteral",
																		"src": "16090:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16079:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "16079:2:6"
																},
																"nativeSrc": "16079:30:6",
																"nodeType": "YulFunctionCall",
																"src": "16079:30:6"
															},
															"nativeSrc": "16076:56:6",
															"nodeType": "YulIf",
															"src": "16076:56:6"
														},
														{
															"nativeSrc": "16142:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "16142:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "16188:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "16188:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "16182:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "16182:5:6"
																		},
																		"nativeSrc": "16182:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16182:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "16156:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "16156:25:6"
																},
																"nativeSrc": "16156:38:6",
																"nodeType": "YulFunctionCall",
																"src": "16156:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "16146:6:6",
																	"nodeType": "YulTypedName",
																	"src": "16146:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16287:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "16287:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "16293:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16293:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "16301:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16301:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "16241:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "16241:45:6"
																},
																"nativeSrc": "16241:67:6",
																"nodeType": "YulFunctionCall",
																"src": "16241:67:6"
															},
															"nativeSrc": "16241:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "16241:67:6"
														},
														{
															"nativeSrc": "16318:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "16318:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "16335:1:6",
																"nodeType": "YulLiteral",
																"src": "16335:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16322:9:6",
																	"nodeType": "YulTypedName",
																	"src": "16322:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16346:17:6",
															"nodeType": "YulAssignment",
															"src": "16346:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "16359:4:6",
																"nodeType": "YulLiteral",
																"src": "16359:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16346:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "16346:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "16410:611:6",
																		"nodeType": "YulBlock",
																		"src": "16410:611:6",
																		"statements": [
																			{
																				"nativeSrc": "16424:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16424:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "16443:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "16443:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "16455:4:6",
																									"nodeType": "YulLiteral",
																									"src": "16455:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "16451:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "16451:3:6"
																							},
																							"nativeSrc": "16451:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "16451:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "16439:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "16439:3:6"
																					},
																					"nativeSrc": "16439:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "16439:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "16428:7:6",
																						"nodeType": "YulTypedName",
																						"src": "16428:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16475:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16475:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16521:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "16521:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "16489:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "16489:31:6"
																					},
																					"nativeSrc": "16489:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "16489:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "16479:6:6",
																						"nodeType": "YulTypedName",
																						"src": "16479:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16539:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16539:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16548:1:6",
																					"nodeType": "YulLiteral",
																					"src": "16548:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "16543:1:6",
																						"nodeType": "YulTypedName",
																						"src": "16543:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16607:163:6",
																					"nodeType": "YulBlock",
																					"src": "16607:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16632:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "16632:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "16650:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "16650:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "16655:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "16655:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "16646:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "16646:3:6"
																												},
																												"nativeSrc": "16646:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "16646:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "16640:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "16640:5:6"
																										},
																										"nativeSrc": "16640:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "16640:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16625:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "16625:6:6"
																								},
																								"nativeSrc": "16625:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "16625:42:6"
																							},
																							"nativeSrc": "16625:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "16625:42:6"
																						},
																						{
																							"nativeSrc": "16684:24:6",
																							"nodeType": "YulAssignment",
																							"src": "16684:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16698:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "16698:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16706:1:6",
																										"nodeType": "YulLiteral",
																										"src": "16706:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16694:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "16694:3:6"
																								},
																								"nativeSrc": "16694:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "16694:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "16684:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "16684:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "16725:31:6",
																							"nodeType": "YulAssignment",
																							"src": "16725:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "16742:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "16742:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16753:2:6",
																										"nodeType": "YulLiteral",
																										"src": "16753:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16738:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "16738:3:6"
																								},
																								"nativeSrc": "16738:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "16738:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "16725:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "16725:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "16573:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "16573:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16576:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "16576:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16570:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "16570:2:6"
																					},
																					"nativeSrc": "16570:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "16570:14:6"
																				},
																				"nativeSrc": "16562:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "16585:21:6",
																					"nodeType": "YulBlock",
																					"src": "16585:21:6",
																					"statements": [
																						{
																							"nativeSrc": "16587:17:6",
																							"nodeType": "YulAssignment",
																							"src": "16587:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "16596:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "16596:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16599:4:6",
																										"nodeType": "YulLiteral",
																										"src": "16599:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16592:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "16592:3:6"
																								},
																								"nativeSrc": "16592:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "16592:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "16587:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "16587:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "16566:3:6",
																					"nodeType": "YulBlock",
																					"src": "16566:3:6",
																					"statements": []
																				},
																				"src": "16562:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "16806:156:6",
																					"nodeType": "YulBlock",
																					"src": "16806:156:6",
																					"statements": [
																						{
																							"nativeSrc": "16824:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "16824:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16851:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "16851:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16856:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "16856:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16847:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "16847:3:6"
																										},
																										"nativeSrc": "16847:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "16847:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16841:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "16841:5:6"
																								},
																								"nativeSrc": "16841:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "16841:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "16828:9:6",
																									"nodeType": "YulTypedName",
																									"src": "16828:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16891:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "16891:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "16918:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "16918:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "16933:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "16933:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "16941:4:6",
																														"nodeType": "YulLiteral",
																														"src": "16941:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "16929:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "16929:3:6"
																												},
																												"nativeSrc": "16929:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "16929:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "16899:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "16899:18:6"
																										},
																										"nativeSrc": "16899:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "16899:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16884:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "16884:6:6"
																								},
																								"nativeSrc": "16884:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "16884:64:6"
																							},
																							"nativeSrc": "16884:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "16884:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16789:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "16789:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "16798:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "16798:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16786:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "16786:2:6"
																					},
																					"nativeSrc": "16786:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "16786:19:6"
																				},
																				"nativeSrc": "16783:179:6",
																				"nodeType": "YulIf",
																				"src": "16783:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16982:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "16982:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "16996:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "16996:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17004:1:6",
																											"nodeType": "YulLiteral",
																											"src": "17004:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "16992:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "16992:3:6"
																									},
																									"nativeSrc": "16992:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "16992:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17008:1:6",
																									"nodeType": "YulLiteral",
																									"src": "17008:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "16988:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "16988:3:6"
																							},
																							"nativeSrc": "16988:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "16988:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16975:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "16975:6:6"
																					},
																					"nativeSrc": "16975:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "16975:36:6"
																				},
																				"nativeSrc": "16975:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "16975:36:6"
																			}
																		]
																	},
																	"nativeSrc": "16403:618:6",
																	"nodeType": "YulCase",
																	"src": "16403:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16408:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16408:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17038:222:6",
																		"nodeType": "YulBlock",
																		"src": "17038:222:6",
																		"statements": [
																			{
																				"nativeSrc": "17052:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17052:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17065:1:6",
																					"nodeType": "YulLiteral",
																					"src": "17065:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "17056:5:6",
																						"nodeType": "YulTypedName",
																						"src": "17056:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17089:67:6",
																					"nodeType": "YulBlock",
																					"src": "17089:67:6",
																					"statements": [
																						{
																							"nativeSrc": "17107:35:6",
																							"nodeType": "YulAssignment",
																							"src": "17107:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17126:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "17126:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17131:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "17131:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17122:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "17122:3:6"
																										},
																										"nativeSrc": "17122:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "17122:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17116:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "17116:5:6"
																								},
																								"nativeSrc": "17116:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "17116:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "17107:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "17107:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "17082:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "17082:6:6"
																				},
																				"nativeSrc": "17079:77:6",
																				"nodeType": "YulIf",
																				"src": "17079:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17176:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "17176:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "17235:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "17235:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "17242:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "17242:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "17182:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "17182:52:6"
																							},
																							"nativeSrc": "17182:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "17182:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17169:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "17169:6:6"
																					},
																					"nativeSrc": "17169:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "17169:81:6"
																				},
																				"nativeSrc": "17169:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "17169:81:6"
																			}
																		]
																	},
																	"nativeSrc": "17030:230:6",
																	"nodeType": "YulCase",
																	"src": "17030:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16383:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16383:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16391:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16391:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16380:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "16380:2:6"
																},
																"nativeSrc": "16380:14:6",
																"nodeType": "YulFunctionCall",
																"src": "16380:14:6"
															},
															"nativeSrc": "16373:887:6",
															"nodeType": "YulSwitch",
															"src": "16373:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "15871:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15952:4:6",
														"nodeType": "YulTypedName",
														"src": "15952:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "15958:3:6",
														"nodeType": "YulTypedName",
														"src": "15958:3:6",
														"type": ""
													}
												],
												"src": "15871:1395:6"
											},
											{
												"body": {
													"nativeSrc": "17426:288:6",
													"nodeType": "YulBlock",
													"src": "17426:288:6",
													"statements": [
														{
															"nativeSrc": "17436:26:6",
															"nodeType": "YulAssignment",
															"src": "17436:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17448:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "17448:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17459:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17444:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17444:3:6"
																},
																"nativeSrc": "17444:18:6",
																"nodeType": "YulFunctionCall",
																"src": "17444:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17436:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "17436:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17516:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17516:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17529:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17529:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17540:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17540:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17525:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17525:3:6"
																		},
																		"nativeSrc": "17525:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17525:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17472:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "17472:43:6"
																},
																"nativeSrc": "17472:71:6",
																"nodeType": "YulFunctionCall",
																"src": "17472:71:6"
															},
															"nativeSrc": "17472:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "17472:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17597:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17597:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17610:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17610:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17621:2:6",
																				"nodeType": "YulLiteral",
																				"src": "17621:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17606:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17606:3:6"
																		},
																		"nativeSrc": "17606:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17606:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17553:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "17553:43:6"
																},
																"nativeSrc": "17553:72:6",
																"nodeType": "YulFunctionCall",
																"src": "17553:72:6"
															},
															"nativeSrc": "17553:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "17553:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17679:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17679:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17692:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17692:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17703:2:6",
																				"nodeType": "YulLiteral",
																				"src": "17703:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17688:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17688:3:6"
																		},
																		"nativeSrc": "17688:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17688:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17635:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "17635:43:6"
																},
																"nativeSrc": "17635:72:6",
																"nodeType": "YulFunctionCall",
																"src": "17635:72:6"
															},
															"nativeSrc": "17635:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "17635:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17272:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17382:9:6",
														"nodeType": "YulTypedName",
														"src": "17382:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17394:6:6",
														"nodeType": "YulTypedName",
														"src": "17394:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17402:6:6",
														"nodeType": "YulTypedName",
														"src": "17402:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17410:6:6",
														"nodeType": "YulTypedName",
														"src": "17410:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17421:4:6",
														"nodeType": "YulTypedName",
														"src": "17421:4:6",
														"type": ""
													}
												],
												"src": "17272:442:6"
											},
											{
												"body": {
													"nativeSrc": "17762:48:6",
													"nodeType": "YulBlock",
													"src": "17762:48:6",
													"statements": [
														{
															"nativeSrc": "17772:32:6",
															"nodeType": "YulAssignment",
															"src": "17772:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17797:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "17797:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "17790:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "17790:6:6"
																		},
																		"nativeSrc": "17790:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17790:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17783:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17783:6:6"
																},
																"nativeSrc": "17783:21:6",
																"nodeType": "YulFunctionCall",
																"src": "17783:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "17772:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "17772:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "17720:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17744:5:6",
														"nodeType": "YulTypedName",
														"src": "17744:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "17754:7:6",
														"nodeType": "YulTypedName",
														"src": "17754:7:6",
														"type": ""
													}
												],
												"src": "17720:90:6"
											},
											{
												"body": {
													"nativeSrc": "17856:76:6",
													"nodeType": "YulBlock",
													"src": "17856:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "17910:16:6",
																"nodeType": "YulBlock",
																"src": "17910:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17919:1:6",
																					"nodeType": "YulLiteral",
																					"src": "17919:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17922:1:6",
																					"nodeType": "YulLiteral",
																					"src": "17922:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17912:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "17912:6:6"
																			},
																			"nativeSrc": "17912:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "17912:12:6"
																		},
																		"nativeSrc": "17912:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "17912:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17879:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "17879:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17901:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "17901:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "17886:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "17886:14:6"
																				},
																				"nativeSrc": "17886:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "17886:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17876:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "17876:2:6"
																		},
																		"nativeSrc": "17876:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17876:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17869:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17869:6:6"
																},
																"nativeSrc": "17869:40:6",
																"nodeType": "YulFunctionCall",
																"src": "17869:40:6"
															},
															"nativeSrc": "17866:60:6",
															"nodeType": "YulIf",
															"src": "17866:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "17816:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17849:5:6",
														"nodeType": "YulTypedName",
														"src": "17849:5:6",
														"type": ""
													}
												],
												"src": "17816:116:6"
											},
											{
												"body": {
													"nativeSrc": "17998:77:6",
													"nodeType": "YulBlock",
													"src": "17998:77:6",
													"statements": [
														{
															"nativeSrc": "18008:22:6",
															"nodeType": "YulAssignment",
															"src": "18008:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18023:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "18023:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18017:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "18017:5:6"
																},
																"nativeSrc": "18017:13:6",
																"nodeType": "YulFunctionCall",
																"src": "18017:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18008:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "18008:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18063:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "18063:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "18039:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "18039:23:6"
																},
																"nativeSrc": "18039:30:6",
																"nodeType": "YulFunctionCall",
																"src": "18039:30:6"
															},
															"nativeSrc": "18039:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "18039:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "17938:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17976:6:6",
														"nodeType": "YulTypedName",
														"src": "17976:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17984:3:6",
														"nodeType": "YulTypedName",
														"src": "17984:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17992:5:6",
														"nodeType": "YulTypedName",
														"src": "17992:5:6",
														"type": ""
													}
												],
												"src": "17938:137:6"
											},
											{
												"body": {
													"nativeSrc": "18155:271:6",
													"nodeType": "YulBlock",
													"src": "18155:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "18201:83:6",
																"nodeType": "YulBlock",
																"src": "18201:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18203:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "18203:77:6"
																			},
																			"nativeSrc": "18203:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "18203:79:6"
																		},
																		"nativeSrc": "18203:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "18203:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18176:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "18176:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18185:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18185:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18172:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18172:3:6"
																		},
																		"nativeSrc": "18172:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18172:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18197:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18197:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18168:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18168:3:6"
																},
																"nativeSrc": "18168:32:6",
																"nodeType": "YulFunctionCall",
																"src": "18168:32:6"
															},
															"nativeSrc": "18165:119:6",
															"nodeType": "YulIf",
															"src": "18165:119:6"
														},
														{
															"nativeSrc": "18294:125:6",
															"nodeType": "YulBlock",
															"src": "18294:125:6",
															"statements": [
																{
																	"nativeSrc": "18309:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18309:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18323:1:6",
																		"nodeType": "YulLiteral",
																		"src": "18323:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18313:6:6",
																			"nodeType": "YulTypedName",
																			"src": "18313:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18338:71:6",
																	"nodeType": "YulAssignment",
																	"src": "18338:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18381:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "18381:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18392:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "18392:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18377:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "18377:3:6"
																				},
																				"nativeSrc": "18377:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "18377:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18401:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "18401:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "18348:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "18348:28:6"
																		},
																		"nativeSrc": "18348:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18348:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18338:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "18338:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "18081:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18125:9:6",
														"nodeType": "YulTypedName",
														"src": "18125:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18136:7:6",
														"nodeType": "YulTypedName",
														"src": "18136:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18148:6:6",
														"nodeType": "YulTypedName",
														"src": "18148:6:6",
														"type": ""
													}
												],
												"src": "18081:345:6"
											},
											{
												"body": {
													"nativeSrc": "18558:206:6",
													"nodeType": "YulBlock",
													"src": "18558:206:6",
													"statements": [
														{
															"nativeSrc": "18568:26:6",
															"nodeType": "YulAssignment",
															"src": "18568:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18580:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "18580:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18591:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18591:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18576:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18576:3:6"
																},
																"nativeSrc": "18576:18:6",
																"nodeType": "YulFunctionCall",
																"src": "18576:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18568:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18568:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18648:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "18648:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18661:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18661:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18672:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18672:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18657:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18657:3:6"
																		},
																		"nativeSrc": "18657:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18657:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18604:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "18604:43:6"
																},
																"nativeSrc": "18604:71:6",
																"nodeType": "YulFunctionCall",
																"src": "18604:71:6"
															},
															"nativeSrc": "18604:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "18604:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18729:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "18729:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18742:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18742:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18753:2:6",
																				"nodeType": "YulLiteral",
																				"src": "18753:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18738:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18738:3:6"
																		},
																		"nativeSrc": "18738:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18738:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18685:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "18685:43:6"
																},
																"nativeSrc": "18685:72:6",
																"nodeType": "YulFunctionCall",
																"src": "18685:72:6"
															},
															"nativeSrc": "18685:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "18685:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18432:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18522:9:6",
														"nodeType": "YulTypedName",
														"src": "18522:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18534:6:6",
														"nodeType": "YulTypedName",
														"src": "18534:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18542:6:6",
														"nodeType": "YulTypedName",
														"src": "18542:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18553:4:6",
														"nodeType": "YulTypedName",
														"src": "18553:4:6",
														"type": ""
													}
												],
												"src": "18432:332:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"838": [
									{
										"length": 32,
										"start": 806
									},
									{
										"length": 32,
										"start": 1108
									},
									{
										"length": 32,
										"start": 1731
									},
									{
										"length": 32,
										"start": 3146
									},
									{
										"length": 32,
										"start": 3900
									}
								],
								"841": [
									{
										"length": 32,
										"start": 1984
									},
									{
										"length": 32,
										"start": 2452
									},
									{
										"length": 32,
										"start": 3497
									},
									{
										"length": 32,
										"start": 4726
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806369524d311161009557806397b1a8b71161006457806397b1a8b714610241578063d107a5cc14610276578063d62b58ca14610292578063eb5a662e146102ae576100f3565b806369524d31146101e357806369527363146101ff578063733da7c81461021b5780637feab38014610237576100f3565b80634fe19125116100d15780634fe191251461015f5780635ed04c431461017b57806364502cae146101ab57806368b377ca146101c7576100f3565b806317056d94146100f757806319ec73e014610127578063459ccec714610143575b5f80fd5b610111600480360381019061010c9190611475565b6102de565b60405161011e91906114b8565b60405180910390f35b610141600480360381019061013c91906114fb565b610324565b005b61015d60048036038101906101589190611475565b610452565b005b61017960048036038101906101749190611675565b61055d565b005b610195600480360381019061019091906116eb565b6105d0565b6040516101a29190611792565b60405180910390f35b6101c560048036038101906101c091906114fb565b6106c1565b005b6101e160048036038101906101dc91906117b2565b61079c565b005b6101fd60048036038101906101f891906116eb565b6108e9565b005b6102196004803603810190610214919061183a565b610ab0565b005b610235600480360381019061023091906114fb565b610c48565b005b61023f610d23565b005b61025b600480360381019061025691906116eb565b610ec1565b60405161026d969594939291906118ee565b60405180910390f35b610290600480360381019061028b91906114fb565b610f3a565b005b6102ac60048036038101906102a7919061194d565b611068565b005b6102c860048036038101906102c39190611475565b611352565b6040516102d591906114b8565b60405180910390f35b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a9576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103f491906119e6565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104479190611a19565b925050819055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d7576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f60028360405161056e9190611a86565b9081526020016040518091039020905081816008015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090816105ca9190611c96565b50505050565b60605f6002836040516105e39190611a86565b90815260200160405180910390209050806008015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461063d90611ac9565b80601f016020809104026020016040519081016040528092919081815260200182805461066990611ac9565b80156106b45780601f1061068b576101008083540402835291602001916106b4565b820191905f5260205f20905b81548152906001019060200180831161069757829003601f168201915b5050505050915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610746576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107919190611a19565b925050819055505050565b5f6002846040516107ad9190611a86565b908152602001604051809103902090505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161081b93929190611d65565b6020604051808303815f875af1158015610837573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085b9190611dcf565b905080610894576040517f81b714be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83826006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506108e28584611397565b5050505050565b5f6002826040516108fa9190611a86565b908152602001604051809103902090505f816006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f826006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016109ed929190611dfa565b6020604051808303815f875af1158015610a09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2d9190611dcf565b905080610aaa5781836006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506040517f81b714be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b5f85111580610abf5750838410155b80610aca57505f8111155b80610ad457508482115b15610b0b576040517f0ecf0f1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600287604051610b1c9190611a86565b9081526020016040518091039020905033815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160010181905550848160020181905550838160030181905550818160050181905550828160040181905550855f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610be59190611a19565b925050819055508560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c3891906119e6565b9250508190555050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ccd576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d1891906119e6565b925050819055505050565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610e02929190611dfa565b6020604051808303815f875af1158015610e1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e429190611dcf565b905080610ebd578160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506040517f81b714be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f805f805f805f600288604051610ed89190611a86565b90815260200160405180910390209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001015482600201548360030154846005015485600401549650965096509650965096505091939550919395565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fbf576040517fc31b2cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461100a9190611a19565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461105d91906119e6565b925050819055505050565b5f6002846040516110799190611a86565b908152602001604051809103902090505f816006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f6002866040516110dd9190611a86565b90815260200160405180910390206006015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550828161113991906119e6565b60035f845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546111a691906119e6565b92505081905550835f80845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461121a9190611a19565b92505081905550835f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461126c91906119e6565b925050819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016112d193929190611d65565b6020604051808303815f875af11580156112ed573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113119190611dcf565b90508061134a576040517f81b714be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6002836040516113a89190611a86565b9081526020016040518091039020905081816007015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090816114049190611c96565b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114448261141b565b9050919050565b6114548161143a565b811461145e575f80fd5b50565b5f8135905061146f8161144b565b92915050565b5f6020828403121561148a57611489611413565b5b5f61149784828501611461565b91505092915050565b5f819050919050565b6114b2816114a0565b82525050565b5f6020820190506114cb5f8301846114a9565b92915050565b6114da816114a0565b81146114e4575f80fd5b50565b5f813590506114f5816114d1565b92915050565b5f806040838503121561151157611510611413565b5b5f61151e85828601611461565b925050602061152f858286016114e7565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61158782611541565b810181811067ffffffffffffffff821117156115a6576115a5611551565b5b80604052505050565b5f6115b861140a565b90506115c4828261157e565b919050565b5f67ffffffffffffffff8211156115e3576115e2611551565b5b6115ec82611541565b9050602081019050919050565b828183375f83830152505050565b5f611619611614846115c9565b6115af565b9050828152602081018484840111156116355761163461153d565b5b6116408482856115f9565b509392505050565b5f82601f83011261165c5761165b611539565b5b813561166c848260208601611607565b91505092915050565b5f806040838503121561168b5761168a611413565b5b5f83013567ffffffffffffffff8111156116a8576116a7611417565b5b6116b485828601611648565b925050602083013567ffffffffffffffff8111156116d5576116d4611417565b5b6116e185828601611648565b9150509250929050565b5f60208284031215611700576116ff611413565b5b5f82013567ffffffffffffffff81111561171d5761171c611417565b5b61172984828501611648565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61176482611732565b61176e818561173c565b935061177e81856020860161174c565b61178781611541565b840191505092915050565b5f6020820190508181035f8301526117aa818461175a565b905092915050565b5f805f606084860312156117c9576117c8611413565b5b5f84013567ffffffffffffffff8111156117e6576117e5611417565b5b6117f286828701611648565b9350506020611803868287016114e7565b925050604084013567ffffffffffffffff81111561182457611823611417565b5b61183086828701611648565b9150509250925092565b5f805f805f8060c0878903121561185457611853611413565b5b5f87013567ffffffffffffffff81111561187157611870611417565b5b61187d89828a01611648565b965050602061188e89828a016114e7565b955050604061189f89828a016114e7565b94505060606118b089828a016114e7565b93505060806118c189828a016114e7565b92505060a06118d289828a016114e7565b9150509295509295509295565b6118e88161143a565b82525050565b5f60c0820190506119015f8301896118df565b61190e60208301886114a9565b61191b60408301876114a9565b61192860608301866114a9565b61193560808301856114a9565b61194260a08301846114a9565b979650505050505050565b5f805f6060848603121561196457611963611413565b5b5f84013567ffffffffffffffff81111561198157611980611417565b5b61198d86828701611648565b935050602061199e868287016114e7565b92505060406119af868287016114e7565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119f0826114a0565b91506119fb836114a0565b9250828201905080821115611a1357611a126119b9565b5b92915050565b5f611a23826114a0565b9150611a2e836114a0565b9250828203905081811115611a4657611a456119b9565b5b92915050565b5f81905092915050565b5f611a6082611732565b611a6a8185611a4c565b9350611a7a81856020860161174c565b80840191505092915050565b5f611a918284611a56565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ae057607f821691505b602082108103611af357611af2611a9c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611b557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b1a565b611b5f8683611b1a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611b9a611b95611b90846114a0565b611b77565b6114a0565b9050919050565b5f819050919050565b611bb383611b80565b611bc7611bbf82611ba1565b848454611b26565b825550505050565b5f90565b611bdb611bcf565b611be6818484611baa565b505050565b5b81811015611c0957611bfe5f82611bd3565b600181019050611bec565b5050565b601f821115611c4e57611c1f81611af9565b611c2884611b0b565b81016020851015611c37578190505b611c4b611c4385611b0b565b830182611beb565b50505b505050565b5f82821c905092915050565b5f611c6e5f1984600802611c53565b1980831691505092915050565b5f611c868383611c5f565b9150826002028217905092915050565b611c9f82611732565b67ffffffffffffffff811115611cb857611cb7611551565b5b611cc28254611ac9565b611ccd828285611c0d565b5f60209050601f831160018114611cfe575f8415611cec578287015190505b611cf68582611c7b565b865550611d5d565b601f198416611d0c86611af9565b5f5b82811015611d3357848901518255600182019150602085019450602081019050611d0e565b86831015611d505784890151611d4c601f891682611c5f565b8355505b6001600288020188555050505b505050505050565b5f606082019050611d785f8301866118df565b611d8560208301856118df565b611d9260408301846114a9565b949350505050565b5f8115159050919050565b611dae81611d9a565b8114611db8575f80fd5b50565b5f81519050611dc981611da5565b92915050565b5f60208284031215611de457611de3611413565b5b5f611df184828501611dbb565b91505092915050565b5f604082019050611e0d5f8301856118df565b611e1a60208301846114a9565b939250505056fea2646970667358221220b52cb36ab509a72eb118687d78c6e5544d55fde87fb93ffe695fea319f6f526a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69524D31 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x97B1A8B7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x97B1A8B7 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xD107A5CC EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xD62B58CA EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xEB5A662E EQ PUSH2 0x2AE JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x69524D31 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x69527363 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x733DA7C8 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x7FEAB380 EQ PUSH2 0x237 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x4FE19125 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4FE19125 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x5ED04C43 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x64502CAE EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x68B377CA EQ PUSH2 0x1C7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x17056D94 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x19EC73E0 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x459CCEC7 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xC48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH2 0xD23 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xF3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x1068 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x8 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 PUSH1 0x8 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x63D SWAP1 PUSH2 0x1AC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x669 SWAP1 PUSH2 0x1AC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x68B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x697 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x837 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH32 0x81B714BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8E2 DUP6 DUP5 PUSH2 0x1397 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8FA SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9ED SWAP3 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xAAA JUMPI DUP2 DUP4 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x81B714BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP6 GT ISZERO DUP1 PUSH2 0xABF JUMPI POP DUP4 DUP5 LT ISZERO JUMPDEST DUP1 PUSH2 0xACA JUMPI POP PUSH0 DUP2 GT ISZERO JUMPDEST DUP1 PUSH2 0xAD4 JUMPI POP DUP5 DUP3 GT JUMPDEST ISZERO PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0xECF0F1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP CALLER DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xEBD JUMPI DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x81B714BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x2 DUP9 PUSH1 0x40 MLOAD PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD DUP6 PUSH1 0x4 ADD SLOAD SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH32 0xC31B2CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1079 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x6 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH2 0x1139 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11A6 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH0 DUP1 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH32 0x81B714BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x7 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1404 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1444 DUP3 PUSH2 0x141B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1454 DUP2 PUSH2 0x143A JUMP JUMPDEST DUP2 EQ PUSH2 0x145E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146F DUP2 PUSH2 0x144B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH2 0x1489 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1497 DUP5 DUP3 DUP6 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B2 DUP2 PUSH2 0x14A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CB PUSH0 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14DA DUP2 PUSH2 0x14A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F5 DUP2 PUSH2 0x14D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x151E DUP6 DUP3 DUP7 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x152F DUP6 DUP3 DUP7 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1587 DUP3 PUSH2 0x1541 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15A6 JUMPI PUSH2 0x15A5 PUSH2 0x1551 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15B8 PUSH2 0x140A JUMP JUMPDEST SWAP1 POP PUSH2 0x15C4 DUP3 DUP3 PUSH2 0x157E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15E3 JUMPI PUSH2 0x15E2 PUSH2 0x1551 JUMP JUMPDEST JUMPDEST PUSH2 0x15EC DUP3 PUSH2 0x1541 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1619 PUSH2 0x1614 DUP5 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0x15AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1635 JUMPI PUSH2 0x1634 PUSH2 0x153D JUMP JUMPDEST JUMPDEST PUSH2 0x1640 DUP5 DUP3 DUP6 PUSH2 0x15F9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1539 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x166C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1607 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x168B JUMPI PUSH2 0x168A PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A8 JUMPI PUSH2 0x16A7 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x16B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x16E1 DUP6 DUP3 DUP7 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1700 JUMPI PUSH2 0x16FF PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x171D JUMPI PUSH2 0x171C PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x1729 DUP5 DUP3 DUP6 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1764 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x176E DUP2 DUP6 PUSH2 0x173C JUMP JUMPDEST SWAP4 POP PUSH2 0x177E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174C JUMP JUMPDEST PUSH2 0x1787 DUP2 PUSH2 0x1541 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17AA DUP2 DUP5 PUSH2 0x175A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17C9 JUMPI PUSH2 0x17C8 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x17E5 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x17F2 DUP7 DUP3 DUP8 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1803 DUP7 DUP3 DUP8 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH2 0x1823 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x1830 DUP7 DUP3 DUP8 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x187D DUP10 DUP3 DUP11 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x188E DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x189F DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x18B0 DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x18C1 DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x18D2 DUP10 DUP3 DUP11 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x18E8 DUP2 PUSH2 0x143A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1901 PUSH0 DUP4 ADD DUP10 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x190E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x191B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1928 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1935 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1942 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1964 JUMPI PUSH2 0x1963 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST PUSH2 0x198D DUP7 DUP3 DUP8 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x199E DUP7 DUP3 DUP8 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19AF DUP7 DUP3 DUP8 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19F0 DUP3 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x19FB DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A13 JUMPI PUSH2 0x1A12 PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A23 DUP3 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2E DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A46 JUMPI PUSH2 0x1A45 PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A60 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1A6A DUP2 DUP6 PUSH2 0x1A4C JUMP JUMPDEST SWAP4 POP PUSH2 0x1A7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A91 DUP3 DUP5 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AE0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AF3 JUMPI PUSH2 0x1AF2 PUSH2 0x1A9C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1B55 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x1B5F DUP7 DUP4 PUSH2 0x1B1A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9A PUSH2 0x1B95 PUSH2 0x1B90 DUP5 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB3 DUP4 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x1BC7 PUSH2 0x1BBF DUP3 PUSH2 0x1BA1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1B26 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1BDB PUSH2 0x1BCF JUMP JUMPDEST PUSH2 0x1BE6 DUP2 DUP5 DUP5 PUSH2 0x1BAA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1BFE PUSH0 DUP3 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C4E JUMPI PUSH2 0x1C1F DUP2 PUSH2 0x1AF9 JUMP JUMPDEST PUSH2 0x1C28 DUP5 PUSH2 0x1B0B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1C37 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1C4B PUSH2 0x1C43 DUP6 PUSH2 0x1B0B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1BEB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1C53 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C86 DUP4 DUP4 PUSH2 0x1C5F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C9F DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB7 PUSH2 0x1551 JUMP JUMPDEST JUMPDEST PUSH2 0x1CC2 DUP3 SLOAD PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1CCD DUP3 DUP3 DUP6 PUSH2 0x1C0D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1CFE JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1CEC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1CF6 DUP6 DUP3 PUSH2 0x1C7B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1D0C DUP7 PUSH2 0x1AF9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D33 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D0E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1D50 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1D4C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1C5F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D78 PUSH0 DUP4 ADD DUP7 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1D85 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1D92 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DAE DUP2 PUSH2 0x1D9A JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DC9 DUP2 PUSH2 0x1DA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE4 JUMPI PUSH2 0x1DE3 PUSH2 0x1413 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DF1 DUP5 DUP3 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E0D PUSH0 DUP4 ADD DUP6 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1E1A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0x2C 0xB3 PUSH11 0xB509A72EB118687D78C6E5 SLOAD 0x4D SSTORE REVERT 0xE8 PUSH32 0xB93FFE695FEA319F6F526A64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "224:6597:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2295:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2080:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2616:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5223:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5415:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2449:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4168:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4580:447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2793:925;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1562:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6467:349;;;:::i;:::-;;3745:417;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1872:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5626:835;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1723:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2295:122;2359:7;2386:17;:23;2404:4;2386:23;;;;;;;;;;;;;;;;2379:30;;2295:122;;;:::o;2080:174::-;1438:7;1424:21;;:10;:21;;;1420:84;;1469:23;;;;;;;;;;;;;;1420:84;2196:6:::1;2165:21;:27:::0;2187:4:::1;2165:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2240:6;2213:17;:23;2231:4;2213:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2080:174:::0;;:::o;2616:148::-;1438:7;1424:21;;:10;:21;;;1420:84;;1469:23;;;;;;;;;;;;;;1420:84;2717:1:::1;2687:21:::0;:27:::1;2709:4;2687:27;;;;;;;;;;;;;;;:31;;;;2755:1;2729:17;:23;2747:4;2729:23;;;;;;;;;;;;;;;:27;;;;2616:148:::0;:::o;5223:185::-;5307:22;5332:7;5340;5332:16;;;;;;:::i;:::-;;;;;;;;;;;;;5307:41;;5393:6;5359:8;:19;;:31;5379:10;5359:31;;;;;;;;;;;;;;;:40;;;;;;:::i;:::-;;5296:112;5223:185;;:::o;5415:190::-;5480:13;5506:22;5531:7;5539;5531:16;;;;;;:::i;:::-;;;;;;;;;;;;;5506:41;;5565:8;:19;;:31;5585:10;5565:31;;;;;;;;;;;;;;;5558:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5415:190;;;:::o;2449:129::-;1438:7;1424:21;;:10;:21;;;1420:84;;1469:23;;;;;;;;;;;;;;1420:84;2564:6:::1;2533:21;:27:::0;2555:4:::1;2533:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2449:129:::0;;:::o;4168:406::-;4262:22;4287:7;4295;4287:16;;;;;;:::i;:::-;;;;;;;;;;;;;4262:41;;4314:12;4329;:25;;;4355:10;4375:4;4382:6;4329:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4314:75;;4405:7;4400:50;;4421:29;;;;;;;;;;;;;;4400:50;4525:6;4492:8;:18;;:30;4511:10;4492:30;;;;;;;;;;;;;;;:39;;;;4542:22;4550:7;4559:4;4542:7;:22::i;:::-;4251:323;;4168:406;;;:::o;4580:447::-;4644:22;4669:7;4677;4669:16;;;;;;:::i;:::-;;;;;;;;;;;;;4644:41;;4696:21;4720:8;:18;;:30;4739:10;4720:30;;;;;;;;;;;;;;;;4696:54;;4794:1;4761:8;:18;;:30;4780:10;4761:30;;;;;;;;;;;;;;;:34;;;;4806:12;4821;:21;;;4843:10;4855:13;4821:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4806:63;;4885:7;4880:138;;4942:13;4909:8;:18;;:30;4928:10;4909:30;;;;;;;;;;;;;;;:46;;;;4977:29;;;;;;;;;;;;;;4880:138;4633:394;;;4580:447;:::o;2793:925::-;3066:1;3056:6;:11;;:60;;;;3102:14;3084;:32;;3056:60;:97;;;;3152:1;3133:15;:20;;3056:97;:139;;;;3189:6;3170:16;:25;3056:139;3038:201;;;3214:25;;;;;;;;;;;;;;3038:201;3252:22;3277:7;3285;3277:16;;;;;;:::i;:::-;;;;;;;;;;;;;3252:41;;3322:10;3304:8;:15;;;:28;;;;;;;;;;;;;;;;;;3365:6;3343:8;:19;;:28;;;;3408:14;3382:8;:23;;:40;;;;3457:12;3433:8;:21;;:36;;;;3507:15;3480:8;:24;;:42;;;;3561:16;3533:8;:25;;:44;;;;3652:6;3615:21;:33;3637:10;3615:33;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;3702:6;3669:17;:29;3687:10;3669:29;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;3027:691;2793:925;;;;;;:::o;1562:125::-;1438:7;1424:21;;:10;:21;;;1420:84;;1469:23;;;;;;;;;;;;;;1420:84;1673:6:::1;1643:21;:27:::0;1665:4:::1;1643:27;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1562:125:::0;;:::o;6467:349::-;6517:14;6534:15;:27;6550:10;6534:27;;;;;;;;;;;;;;;;6517:44;;6602:1;6572:15;:27;6588:10;6572:27;;;;;;;;;;;;;;;:31;;;;6615:12;6630;:21;;;6652:10;6664:6;6630:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6615:56;;6687:7;6682:127;;6740:6;6710:15;:27;6726:10;6710:27;;;;;;;;;;;;;;;:36;;;;6768:29;;;;;;;;;;;;;;6682:127;6506:310;;6467:349::o;3745:417::-;3808:7;3816;3824;3832;3840;3848;3867:22;3892:7;3900;3892:16;;;;;;:::i;:::-;;;;;;;;;;;;;3867:41;;3941:8;:15;;;;;;;;;;;;3971:8;:19;;;4005:8;:23;;;4043:8;:21;;;4079:8;:24;;;4118:8;:25;;;3919:235;;;;;;;;;;;;;3745:417;;;;;;;:::o;1872:173::-;1438:7;1424:21;;:10;:21;;;1420:84;;1469:23;;;;;;;;;;;;;;1420:84;1987:6:::1;1956:21;:27:::0;1978:4:::1;1956:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2031:6;2004:17;:23;2022:4;2004:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;1872:173:::0;;:::o;5626:835::-;5783:22;5808:7;5816;5808:16;;;;;;:::i;:::-;;;;;;;;;;;;;5783:41;;5863:21;5887:8;:18;;:30;5906:10;5887:30;;;;;;;;;;;;;;;;5863:54;;5969:1;5928:7;5936;5928:16;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;:38;5955:10;5928:38;;;;;;;;;;;;;;;:42;;;;6032:20;6017:13;:35;;;;:::i;:::-;5981:15;:32;5997:8;:15;;;;;;;;;;;;5981:32;;;;;;;;;;;;;;;;:71;;;;;;;:::i;:::-;;;;;;;;6139:15;6097:21;:38;6119:8;:15;;;;;;;;;;;;6097:38;;;;;;;;;;;;;;;;:57;;;;;;;:::i;:::-;;;;;;;;6236:15;6199:21;:33;6221:10;6199:33;;;;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;;;;;;;;6299:12;6314;:25;;;6340:10;6360:4;6367:20;6314:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6299:89;;6404:7;6399:50;;6420:29;;;;;;;;;;;;;;6399:50;5772:689;;;5626:835;;;:::o;1723:119::-;1780:7;1807:21;:27;1829:4;1807:27;;;;;;;;;;;;;;;;1799:35;;1723:119;;;:::o;5035:174::-;5113:22;5138:7;5146;5138:16;;;;;;:::i;:::-;;;;;;;;;;;;;5113:41;;5197:4;5165:8;:17;;:29;5183:10;5165:29;;;;;;;;;;;;;;;:36;;;;;;:::i;:::-;;5102:107;5035:174;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:117::-;2473:1;2470;2463:12;2487:117;2596:1;2593;2586:12;2610:102;2651:6;2702:2;2698:7;2693:2;2686:5;2682:14;2678:28;2668:38;;2610:102;;;:::o;2718:180::-;2766:77;2763:1;2756:88;2863:4;2860:1;2853:15;2887:4;2884:1;2877:15;2904:281;2987:27;3009:4;2987:27;:::i;:::-;2979:6;2975:40;3117:6;3105:10;3102:22;3081:18;3069:10;3066:34;3063:62;3060:88;;;3128:18;;:::i;:::-;3060:88;3168:10;3164:2;3157:22;2947:238;2904:281;;:::o;3191:129::-;3225:6;3252:20;;:::i;:::-;3242:30;;3281:33;3309:4;3301:6;3281:33;:::i;:::-;3191:129;;;:::o;3326:308::-;3388:4;3478:18;3470:6;3467:30;3464:56;;;3500:18;;:::i;:::-;3464:56;3538:29;3560:6;3538:29;:::i;:::-;3530:37;;3622:4;3616;3612:15;3604:23;;3326:308;;;:::o;3640:148::-;3738:6;3733:3;3728;3715:30;3779:1;3770:6;3765:3;3761:16;3754:27;3640:148;;;:::o;3794:425::-;3872:5;3897:66;3913:49;3955:6;3913:49;:::i;:::-;3897:66;:::i;:::-;3888:75;;3986:6;3979:5;3972:21;4024:4;4017:5;4013:16;4062:3;4053:6;4048:3;4044:16;4041:25;4038:112;;;4069:79;;:::i;:::-;4038:112;4159:54;4206:6;4201:3;4196;4159:54;:::i;:::-;3878:341;3794:425;;;;;:::o;4239:340::-;4295:5;4344:3;4337:4;4329:6;4325:17;4321:27;4311:122;;4352:79;;:::i;:::-;4311:122;4469:6;4456:20;4494:79;4569:3;4561:6;4554:4;4546:6;4542:17;4494:79;:::i;:::-;4485:88;;4301:278;4239:340;;;;:::o;4585:834::-;4673:6;4681;4730:2;4718:9;4709:7;4705:23;4701:32;4698:119;;;4736:79;;:::i;:::-;4698:119;4884:1;4873:9;4869:17;4856:31;4914:18;4906:6;4903:30;4900:117;;;4936:79;;:::i;:::-;4900:117;5041:63;5096:7;5087:6;5076:9;5072:22;5041:63;:::i;:::-;5031:73;;4827:287;5181:2;5170:9;5166:18;5153:32;5212:18;5204:6;5201:30;5198:117;;;5234:79;;:::i;:::-;5198:117;5339:63;5394:7;5385:6;5374:9;5370:22;5339:63;:::i;:::-;5329:73;;5124:288;4585:834;;;;;:::o;5425:509::-;5494:6;5543:2;5531:9;5522:7;5518:23;5514:32;5511:119;;;5549:79;;:::i;:::-;5511:119;5697:1;5686:9;5682:17;5669:31;5727:18;5719:6;5716:30;5713:117;;;5749:79;;:::i;:::-;5713:117;5854:63;5909:7;5900:6;5889:9;5885:22;5854:63;:::i;:::-;5844:73;;5640:287;5425:509;;;;:::o;5940:99::-;5992:6;6026:5;6020:12;6010:22;;5940:99;;;:::o;6045:169::-;6129:11;6163:6;6158:3;6151:19;6203:4;6198:3;6194:14;6179:29;;6045:169;;;;:::o;6220:139::-;6309:6;6304:3;6299;6293:23;6350:1;6341:6;6336:3;6332:16;6325:27;6220:139;;;:::o;6365:377::-;6453:3;6481:39;6514:5;6481:39;:::i;:::-;6536:71;6600:6;6595:3;6536:71;:::i;:::-;6529:78;;6616:65;6674:6;6669:3;6662:4;6655:5;6651:16;6616:65;:::i;:::-;6706:29;6728:6;6706:29;:::i;:::-;6701:3;6697:39;6690:46;;6457:285;6365:377;;;;:::o;6748:313::-;6861:4;6899:2;6888:9;6884:18;6876:26;;6948:9;6942:4;6938:20;6934:1;6923:9;6919:17;6912:47;6976:78;7049:4;7040:6;6976:78;:::i;:::-;6968:86;;6748:313;;;;:::o;7067:979::-;7164:6;7172;7180;7229:2;7217:9;7208:7;7204:23;7200:32;7197:119;;;7235:79;;:::i;:::-;7197:119;7383:1;7372:9;7368:17;7355:31;7413:18;7405:6;7402:30;7399:117;;;7435:79;;:::i;:::-;7399:117;7540:63;7595:7;7586:6;7575:9;7571:22;7540:63;:::i;:::-;7530:73;;7326:287;7652:2;7678:53;7723:7;7714:6;7703:9;7699:22;7678:53;:::i;:::-;7668:63;;7623:118;7808:2;7797:9;7793:18;7780:32;7839:18;7831:6;7828:30;7825:117;;;7861:79;;:::i;:::-;7825:117;7966:63;8021:7;8012:6;8001:9;7997:22;7966:63;:::i;:::-;7956:73;;7751:288;7067:979;;;;;:::o;8052:1237::-;8166:6;8174;8182;8190;8198;8206;8255:3;8243:9;8234:7;8230:23;8226:33;8223:120;;;8262:79;;:::i;:::-;8223:120;8410:1;8399:9;8395:17;8382:31;8440:18;8432:6;8429:30;8426:117;;;8462:79;;:::i;:::-;8426:117;8567:63;8622:7;8613:6;8602:9;8598:22;8567:63;:::i;:::-;8557:73;;8353:287;8679:2;8705:53;8750:7;8741:6;8730:9;8726:22;8705:53;:::i;:::-;8695:63;;8650:118;8807:2;8833:53;8878:7;8869:6;8858:9;8854:22;8833:53;:::i;:::-;8823:63;;8778:118;8935:2;8961:53;9006:7;8997:6;8986:9;8982:22;8961:53;:::i;:::-;8951:63;;8906:118;9063:3;9090:53;9135:7;9126:6;9115:9;9111:22;9090:53;:::i;:::-;9080:63;;9034:119;9192:3;9219:53;9264:7;9255:6;9244:9;9240:22;9219:53;:::i;:::-;9209:63;;9163:119;8052:1237;;;;;;;;:::o;9295:118::-;9382:24;9400:5;9382:24;:::i;:::-;9377:3;9370:37;9295:118;;:::o;9419:775::-;9652:4;9690:3;9679:9;9675:19;9667:27;;9704:71;9772:1;9761:9;9757:17;9748:6;9704:71;:::i;:::-;9785:72;9853:2;9842:9;9838:18;9829:6;9785:72;:::i;:::-;9867;9935:2;9924:9;9920:18;9911:6;9867:72;:::i;:::-;9949;10017:2;10006:9;10002:18;9993:6;9949:72;:::i;:::-;10031:73;10099:3;10088:9;10084:19;10075:6;10031:73;:::i;:::-;10114;10182:3;10171:9;10167:19;10158:6;10114:73;:::i;:::-;9419:775;;;;;;;;;:::o;10200:799::-;10287:6;10295;10303;10352:2;10340:9;10331:7;10327:23;10323:32;10320:119;;;10358:79;;:::i;:::-;10320:119;10506:1;10495:9;10491:17;10478:31;10536:18;10528:6;10525:30;10522:117;;;10558:79;;:::i;:::-;10522:117;10663:63;10718:7;10709:6;10698:9;10694:22;10663:63;:::i;:::-;10653:73;;10449:287;10775:2;10801:53;10846:7;10837:6;10826:9;10822:22;10801:53;:::i;:::-;10791:63;;10746:118;10903:2;10929:53;10974:7;10965:6;10954:9;10950:22;10929:53;:::i;:::-;10919:63;;10874:118;10200:799;;;;;:::o;11005:180::-;11053:77;11050:1;11043:88;11150:4;11147:1;11140:15;11174:4;11171:1;11164:15;11191:191;11231:3;11250:20;11268:1;11250:20;:::i;:::-;11245:25;;11284:20;11302:1;11284:20;:::i;:::-;11279:25;;11327:1;11324;11320:9;11313:16;;11348:3;11345:1;11342:10;11339:36;;;11355:18;;:::i;:::-;11339:36;11191:191;;;;:::o;11388:194::-;11428:4;11448:20;11466:1;11448:20;:::i;:::-;11443:25;;11482:20;11500:1;11482:20;:::i;:::-;11477:25;;11526:1;11523;11519:9;11511:17;;11550:1;11544:4;11541:11;11538:37;;;11555:18;;:::i;:::-;11538:37;11388:194;;;;:::o;11588:148::-;11690:11;11727:3;11712:18;;11588:148;;;;:::o;11742:390::-;11848:3;11876:39;11909:5;11876:39;:::i;:::-;11931:89;12013:6;12008:3;11931:89;:::i;:::-;11924:96;;12029:65;12087:6;12082:3;12075:4;12068:5;12064:16;12029:65;:::i;:::-;12119:6;12114:3;12110:16;12103:23;;11852:280;11742:390;;;;:::o;12138:275::-;12270:3;12292:95;12383:3;12374:6;12292:95;:::i;:::-;12285:102;;12404:3;12397:10;;12138:275;;;;:::o;12419:180::-;12467:77;12464:1;12457:88;12564:4;12561:1;12554:15;12588:4;12585:1;12578:15;12605:320;12649:6;12686:1;12680:4;12676:12;12666:22;;12733:1;12727:4;12723:12;12754:18;12744:81;;12810:4;12802:6;12798:17;12788:27;;12744:81;12872:2;12864:6;12861:14;12841:18;12838:38;12835:84;;12891:18;;:::i;:::-;12835:84;12656:269;12605:320;;;:::o;12931:141::-;12980:4;13003:3;12995:11;;13026:3;13023:1;13016:14;13060:4;13057:1;13047:18;13039:26;;12931:141;;;:::o;13078:93::-;13115:6;13162:2;13157;13150:5;13146:14;13142:23;13132:33;;13078:93;;;:::o;13177:107::-;13221:8;13271:5;13265:4;13261:16;13240:37;;13177:107;;;;:::o;13290:393::-;13359:6;13409:1;13397:10;13393:18;13432:97;13462:66;13451:9;13432:97;:::i;:::-;13550:39;13580:8;13569:9;13550:39;:::i;:::-;13538:51;;13622:4;13618:9;13611:5;13607:21;13598:30;;13671:4;13661:8;13657:19;13650:5;13647:30;13637:40;;13366:317;;13290:393;;;;;:::o;13689:60::-;13717:3;13738:5;13731:12;;13689:60;;;:::o;13755:142::-;13805:9;13838:53;13856:34;13865:24;13883:5;13865:24;:::i;:::-;13856:34;:::i;:::-;13838:53;:::i;:::-;13825:66;;13755:142;;;:::o;13903:75::-;13946:3;13967:5;13960:12;;13903:75;;;:::o;13984:269::-;14094:39;14125:7;14094:39;:::i;:::-;14155:91;14204:41;14228:16;14204:41;:::i;:::-;14196:6;14189:4;14183:11;14155:91;:::i;:::-;14149:4;14142:105;14060:193;13984:269;;;:::o;14259:73::-;14304:3;14259:73;:::o;14338:189::-;14415:32;;:::i;:::-;14456:65;14514:6;14506;14500:4;14456:65;:::i;:::-;14391:136;14338:189;;:::o;14533:186::-;14593:120;14610:3;14603:5;14600:14;14593:120;;;14664:39;14701:1;14694:5;14664:39;:::i;:::-;14637:1;14630:5;14626:13;14617:22;;14593:120;;;14533:186;;:::o;14725:543::-;14826:2;14821:3;14818:11;14815:446;;;14860:38;14892:5;14860:38;:::i;:::-;14944:29;14962:10;14944:29;:::i;:::-;14934:8;14930:44;15127:2;15115:10;15112:18;15109:49;;;15148:8;15133:23;;15109:49;15171:80;15227:22;15245:3;15227:22;:::i;:::-;15217:8;15213:37;15200:11;15171:80;:::i;:::-;14830:431;;14815:446;14725:543;;;:::o;15274:117::-;15328:8;15378:5;15372:4;15368:16;15347:37;;15274:117;;;;:::o;15397:169::-;15441:6;15474:51;15522:1;15518:6;15510:5;15507:1;15503:13;15474:51;:::i;:::-;15470:56;15555:4;15549;15545:15;15535:25;;15448:118;15397:169;;;;:::o;15571:295::-;15647:4;15793:29;15818:3;15812:4;15793:29;:::i;:::-;15785:37;;15855:3;15852:1;15848:11;15842:4;15839:21;15831:29;;15571:295;;;;:::o;15871:1395::-;15988:37;16021:3;15988:37;:::i;:::-;16090:18;16082:6;16079:30;16076:56;;;16112:18;;:::i;:::-;16076:56;16156:38;16188:4;16182:11;16156:38;:::i;:::-;16241:67;16301:6;16293;16287:4;16241:67;:::i;:::-;16335:1;16359:4;16346:17;;16391:2;16383:6;16380:14;16408:1;16403:618;;;;17065:1;17082:6;17079:77;;;17131:9;17126:3;17122:19;17116:26;17107:35;;17079:77;17182:67;17242:6;17235:5;17182:67;:::i;:::-;17176:4;17169:81;17038:222;16373:887;;16403:618;16455:4;16451:9;16443:6;16439:22;16489:37;16521:4;16489:37;:::i;:::-;16548:1;16562:208;16576:7;16573:1;16570:14;16562:208;;;16655:9;16650:3;16646:19;16640:26;16632:6;16625:42;16706:1;16698:6;16694:14;16684:24;;16753:2;16742:9;16738:18;16725:31;;16599:4;16596:1;16592:12;16587:17;;16562:208;;;16798:6;16789:7;16786:19;16783:179;;;16856:9;16851:3;16847:19;16841:26;16899:48;16941:4;16933:6;16929:17;16918:9;16899:48;:::i;:::-;16891:6;16884:64;16806:156;16783:179;17008:1;17004;16996:6;16992:14;16988:22;16982:4;16975:36;16410:611;;;16373:887;;15963:1303;;;15871:1395;;:::o;17272:442::-;17421:4;17459:2;17448:9;17444:18;17436:26;;17472:71;17540:1;17529:9;17525:17;17516:6;17472:71;:::i;:::-;17553:72;17621:2;17610:9;17606:18;17597:6;17553:72;:::i;:::-;17635;17703:2;17692:9;17688:18;17679:6;17635:72;:::i;:::-;17272:442;;;;;;:::o;17720:90::-;17754:7;17797:5;17790:13;17783:21;17772:32;;17720:90;;;:::o;17816:116::-;17886:21;17901:5;17886:21;:::i;:::-;17879:5;17876:32;17866:60;;17922:1;17919;17912:12;17866:60;17816:116;:::o;17938:137::-;17992:5;18023:6;18017:13;18008:22;;18039:30;18063:5;18039:30;:::i;:::-;17938:137;;;;:::o;18081:345::-;18148:6;18197:2;18185:9;18176:7;18172:23;18168:32;18165:119;;;18203:79;;:::i;:::-;18165:119;18323:1;18348:61;18401:7;18392:6;18381:9;18377:22;18348:61;:::i;:::-;18338:71;;18294:125;18081:345;;;;:::o;18432:332::-;18553:4;18591:2;18580:9;18576:18;18568:26;;18604:71;18672:1;18661:9;18657:17;18648:6;18604:71;:::i;:::-;18685:72;18753:2;18742:9;18738:18;18729:6;18685:72;:::i;:::-;18432:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1553400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit(string,uint256,string)": "infinite",
								"destroyAllAllowance(address)": "infinite",
								"destroyAllowance(address,uint256)": "infinite",
								"finalizeAuctionAndTransferCarbon(string,uint256,uint256)": "infinite",
								"freezeAllowance(address,uint256)": "infinite",
								"getAllowance(address)": "2917",
								"getBidSecret(string)": "infinite",
								"getFreezeAllowance(address)": "2853",
								"getTread(string)": "infinite",
								"issueAllowance(address,uint256)": "infinite",
								"refundDeposit(string)": "infinite",
								"setBidSecret(string,string)": "infinite",
								"stertTrade(string,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"unFreezeAllowance(address,uint256)": "infinite",
								"withdrawAcutionAmount()": "infinite"
							},
							"internal": {
								"setInfo(string memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1236,
									"end": 1364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1306,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1339,
									"end": 1355,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1356,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1236,
									"end": 1364,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "841"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "838"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 6821,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b52cb36ab509a72eb118687d78c6e5544d55fde87fb93ffe695fea319f6f526a64736f6c634300081a0033",
									".code": [
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "69524D31"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "97B1A8B7"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "97B1A8B7"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "D107A5CC"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "D62B58CA"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "EB5A662E"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "69524D31"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "69527363"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "733DA7C8"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "7FEAB380"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "4FE19125"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "4FE19125"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "5ED04C43"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "64502CAE"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "68B377CA"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "17056D94"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "19EC73E0"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "459CCEC7"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 6821,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2295,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2295,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2295,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2080,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2080,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2616,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2616,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 5223,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 5223,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5415,
											"end": 5605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 5415,
											"end": 5605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2449,
											"end": 2578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2449,
											"end": 2578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4168,
											"end": 4574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4168,
											"end": 4574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4580,
											"end": 5027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4580,
											"end": 5027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2793,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2793,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1562,
											"end": 1687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1562,
											"end": 1687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6816,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 6467,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 6467,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 6467,
											"end": 6816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6816,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 6467,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6816,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3745,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3745,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1872,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1872,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5626,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5626,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1723,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1723,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1723,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2408,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "838"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "C31B2CFE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2192,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2191,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2165,
											"end": 2202,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2246,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2213,
											"end": 2246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "838"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "C31B2CFE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2713,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2714,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2718,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2751,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2752,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5339,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5332,
											"end": 5348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5378,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5359,
											"end": 5378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5389,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5359,
											"end": 5399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5359,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5399,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5359,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5296,
											"end": 5408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5493,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5531,
											"end": 5538,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5539,
											"end": 5546,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5531,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5584,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5565,
											"end": 5584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5595,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5558,
											"end": 5596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5558,
											"end": 5596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "838"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "C31B2CFE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2570,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2559,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2533,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4262,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4294,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4295,
											"end": 4302,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4287,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4262,
											"end": 4303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4262,
											"end": 4303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "841"
										},
										{
											"begin": 4329,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4329,
											"end": 4354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4379,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4329,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4329,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4412,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4400,
											"end": 4450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "PUSH",
											"source": 5,
											"value": "81B714BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4450,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4400,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4521,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4531,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4531,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4550,
											"end": 4557,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4563,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4542,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4564,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4542,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4168,
											"end": 4574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4676,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4677,
											"end": 4684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4669,
											"end": 4685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4696,
											"end": 4717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4749,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4696,
											"end": 4750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4696,
											"end": 4750,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4790,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4795,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "841"
										},
										{
											"begin": 4821,
											"end": 4842,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4821,
											"end": 4842,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4842,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4843,
											"end": 4853,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4821,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4821,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4821,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4885,
											"end": 4892,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4880,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4880,
											"end": 5018,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 4955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4917,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4938,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4939,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4955,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "81B714BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4880,
											"end": 5018,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4880,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 5027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 5027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 5027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3062,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3067,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3056,
											"end": 3116,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3116,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3084,
											"end": 3098,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3116,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3056,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3056,
											"end": 3153,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3148,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3153,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3153,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3153,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3056,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3056,
											"end": 3195,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3195,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3056,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3038,
											"end": 3239,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3038,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3038,
											"end": 3239,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "PUSH",
											"source": 5,
											"value": "ECF0F1100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3038,
											"end": 3239,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3038,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3285,
											"end": 3292,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3277,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3293,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3332,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3312,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3319,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3319,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3319,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3371,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3362,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3343,
											"end": 3362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3371,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3405,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3382,
											"end": 3405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3422,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3469,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3441,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3454,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3433,
											"end": 3454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3469,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3504,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3480,
											"end": 3504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3522,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3558,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3533,
											"end": 3558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3577,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3652,
											"end": 3658,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3637,
											"end": 3647,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3615,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3708,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3686,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3697,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3669,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "838"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "C31B2CFE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1669,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1643,
											"end": 1679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6816,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 6467,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6531,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6549,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6560,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6587,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6598,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6603,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6642,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "841"
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6664,
											"end": 6670,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6630,
											"end": 6671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6630,
											"end": 6671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6630,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6682,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6682,
											"end": 6809,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6740,
											"end": 6746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6725,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6736,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6737,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6746,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 5,
											"value": "81B714BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6682,
											"end": 6809,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6682,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6506,
											"end": 6816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6506,
											"end": 6816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3808,
											"end": 3815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3899,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3892,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3971,
											"end": 3979,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3971,
											"end": 3990,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3971,
											"end": 3990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3971,
											"end": 3990,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4013,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4028,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4005,
											"end": 4028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4028,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4043,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4043,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4043,
											"end": 4064,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4087,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4103,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4079,
											"end": 4103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4103,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4126,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4118,
											"end": 4143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4143,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 4162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "838"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "C31B2CFE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1420,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 1993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1978,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1956,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2026,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2004,
											"end": 2037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5808,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5816,
											"end": 5823,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5808,
											"end": 5824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5824,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5916,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5887,
											"end": 5917,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5969,
											"end": 5970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5935,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5936,
											"end": 5943,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5928,
											"end": 5944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5954,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5928,
											"end": 5954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5965,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5966,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5970,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6017,
											"end": 6052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6017,
											"end": 6052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6052,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6017,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 5996,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 6005,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5981,
											"end": 6052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6139,
											"end": 6154,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6127,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6097,
											"end": 6154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6251,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6231,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6199,
											"end": 6251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6326,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "841"
										},
										{
											"begin": 6314,
											"end": 6339,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6339,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6339,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 6340,
											"end": 6350,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6387,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6314,
											"end": 6388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6314,
											"end": 6388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 6314,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6399,
											"end": 6449,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "PUSH",
											"source": 5,
											"value": "81B714BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6449,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 6449,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6399,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 6461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 6461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 6461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 6461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1833,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1834,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5209,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5035,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5138,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5154,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5197,
											"end": 5201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5182,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5165,
											"end": 5182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5193,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5165,
											"end": 5201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2481,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2364,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2487,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2593,
											"end": 2594,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2712,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2610,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2695,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2686,
											"end": 2691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2712,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2898,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2718,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2843,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2867,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2853,
											"end": 2868,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 3185,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2904,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3009,
											"end": 3013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2987,
											"end": 3014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3014,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2987,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 3015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3124,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3069,
											"end": 3079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3100,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3148,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3060,
											"end": 3148,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3128,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3148,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3060,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3166,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 3185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 3185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 3185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3252,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3309,
											"end": 3313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3281,
											"end": 3314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3634,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3326,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3470,
											"end": 3476,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3497,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3520,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3464,
											"end": 3520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3500,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3520,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3464,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3560,
											"end": 3566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3538,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3567,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3538,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3788,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3640,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3736,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3715,
											"end": 3745,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3776,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3768,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3781,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3794,
											"end": 4219,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3794,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3913,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3955,
											"end": 3961,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3913,
											"end": 3962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3962,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3913,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3897,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3963,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3897,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3993,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4065,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4048,
											"end": 4051,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4041,
											"end": 4066,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4038,
											"end": 4150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4069,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4069,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4148,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4069,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4150,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4038,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4206,
											"end": 4212,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4199,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4159,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4213,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4159,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 4219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3794,
											"end": 4219,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3794,
											"end": 4219,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3794,
											"end": 4219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3794,
											"end": 4219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3794,
											"end": 4219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3794,
											"end": 4219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4579,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4239,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4342,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4348,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4311,
											"end": 4433,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4352,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 4352,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4352,
											"end": 4431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4352,
											"end": 4431,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 4352,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4433,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4311,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4469,
											"end": 4475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4456,
											"end": 4476,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4569,
											"end": 4572,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4554,
											"end": 4558,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4552,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4542,
											"end": 4559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4494,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4573,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4494,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4579,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 5419,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4585,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4730,
											"end": 4732,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4718,
											"end": 4727,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4716,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4705,
											"end": 4728,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4701,
											"end": 4733,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4817,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4698,
											"end": 4817,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4736,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4736,
											"end": 4815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4815,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4736,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4817,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4698,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4884,
											"end": 4885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4887,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4932,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4906,
											"end": 4912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4903,
											"end": 4933,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 5017,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 4900,
											"end": 5017,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4936,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4936,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 5015,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4936,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 5017,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 4900,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5041,
											"end": 5104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5104,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5041,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5031,
											"end": 5104,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5031,
											"end": 5104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 5114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5179,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5185,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5230,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5231,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5198,
											"end": 5315,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5234,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5234,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5313,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5234,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5315,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5198,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5383,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5339,
											"end": 5402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5402,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5339,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 5419,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 5419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 5419,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 5419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 5419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 5419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5425,
											"end": 5934,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5494,
											"end": 5500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5543,
											"end": 5545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5531,
											"end": 5540,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5522,
											"end": 5529,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5518,
											"end": 5541,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5630,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5511,
											"end": 5630,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5549,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5549,
											"end": 5628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5549,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5630,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5511,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5686,
											"end": 5695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5700,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5719,
											"end": 5725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5746,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5830,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5713,
											"end": 5830,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5749,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5749,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5828,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5749,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5830,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5713,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5909,
											"end": 5916,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5854,
											"end": 5917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5917,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5854,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5425,
											"end": 5934,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5425,
											"end": 5934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5425,
											"end": 5934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5425,
											"end": 5934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5425,
											"end": 5934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6039,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 5940,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 5998,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6032,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6039,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6039,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6214,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6045,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6158,
											"end": 6161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6170,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6203,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6198,
											"end": 6201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6179,
											"end": 6208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6179,
											"end": 6208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6214,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6359,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6220,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6339,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6332,
											"end": 6348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6352,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6742,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6365,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6456,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6514,
											"end": 6519,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6481,
											"end": 6520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6520,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6481,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6536,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6600,
											"end": 6606,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6595,
											"end": 6598,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6536,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6536,
											"end": 6607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6536,
											"end": 6607,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6536,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6607,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6672,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6655,
											"end": 6660,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6667,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6616,
											"end": 6681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6681,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 6616,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 6728,
											"end": 6734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6706,
											"end": 6735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6735,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 6706,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6704,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6457,
											"end": 6742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6742,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7061,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6748,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6861,
											"end": 6865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6899,
											"end": 6901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6938,
											"end": 6958,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6934,
											"end": 6935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6923,
											"end": 6932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 6959,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 7049,
											"end": 7053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7046,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6976,
											"end": 7054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 7054,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6976,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7061,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7061,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 8046,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 7067,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7231,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7217,
											"end": 7226,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7215,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7227,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7232,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 7197,
											"end": 7316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 7235,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7235,
											"end": 7314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7314,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 7235,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7316,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 7197,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7355,
											"end": 7386,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7413,
											"end": 7431,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7432,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7399,
											"end": 7516,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7399,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 7399,
											"end": 7516,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7435,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 7435,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7435,
											"end": 7514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7435,
											"end": 7514,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 7435,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7399,
											"end": 7516,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 7399,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7540,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7595,
											"end": 7602,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7586,
											"end": 7592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7575,
											"end": 7584,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7571,
											"end": 7593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7540,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7540,
											"end": 7603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7540,
											"end": 7603,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7540,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7603,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7326,
											"end": 7613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 7654,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7678,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 7723,
											"end": 7730,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7703,
											"end": 7712,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7699,
											"end": 7721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7678,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7678,
											"end": 7731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7678,
											"end": 7731,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 7678,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 7731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 7731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7623,
											"end": 7741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 7810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7797,
											"end": 7806,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7857,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7831,
											"end": 7837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7858,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7825,
											"end": 7942,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7825,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 7825,
											"end": 7942,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 7861,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7861,
											"end": 7940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7940,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 7861,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7825,
											"end": 7942,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 7825,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8021,
											"end": 8028,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8001,
											"end": 8010,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7966,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8029,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 7966,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 8029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 8029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7751,
											"end": 8039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 8046,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 8046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 8046,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 8046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 8046,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 8046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8174,
											"end": 8180,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8190,
											"end": 8196,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8198,
											"end": 8204,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8212,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8258,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 8243,
											"end": 8252,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8241,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8230,
											"end": 8253,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8259,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8343,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 8223,
											"end": 8343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8262,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 8262,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8262,
											"end": 8341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8262,
											"end": 8341,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 8262,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8343,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 8223,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8408,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8413,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8432,
											"end": 8438,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8459,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8426,
											"end": 8543,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8426,
											"end": 8543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8426,
											"end": 8543,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8462,
											"end": 8541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8426,
											"end": 8543,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8426,
											"end": 8543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8567,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 8622,
											"end": 8629,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8619,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8611,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8598,
											"end": 8620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8567,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8567,
											"end": 8630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8567,
											"end": 8630,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 8567,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8630,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8353,
											"end": 8640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8679,
											"end": 8681,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8705,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 8750,
											"end": 8757,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8730,
											"end": 8739,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8705,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8705,
											"end": 8758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8705,
											"end": 8758,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 8705,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8758,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 8768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8809,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8833,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 8878,
											"end": 8885,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8867,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8833,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8833,
											"end": 8886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8833,
											"end": 8886,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 8833,
											"end": 8886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8823,
											"end": 8886,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8823,
											"end": 8886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8778,
											"end": 8896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8937,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8961,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 9006,
											"end": 9013,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8986,
											"end": 8995,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8982,
											"end": 9004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8961,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8961,
											"end": 9014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8961,
											"end": 9014,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8961,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8951,
											"end": 9014,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8951,
											"end": 9014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8906,
											"end": 9024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9063,
											"end": 9066,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9090,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9135,
											"end": 9142,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9126,
											"end": 9132,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9115,
											"end": 9124,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 9111,
											"end": 9133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9090,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 9090,
											"end": 9143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9090,
											"end": 9143,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9090,
											"end": 9143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9080,
											"end": 9143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9080,
											"end": 9143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9034,
											"end": 9153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9192,
											"end": 9195,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 9219,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 9264,
											"end": 9271,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9244,
											"end": 9253,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 9219,
											"end": 9272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9272,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 9219,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 9289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9295,
											"end": 9413,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9295,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9382,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 9400,
											"end": 9405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9382,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 9382,
											"end": 9406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9382,
											"end": 9406,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 9382,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9377,
											"end": 9380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9370,
											"end": 9407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9295,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9295,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9295,
											"end": 9413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9652,
											"end": 9656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9690,
											"end": 9693,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 9679,
											"end": 9688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9675,
											"end": 9694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 9772,
											"end": 9773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9761,
											"end": 9770,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9757,
											"end": 9774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 9754,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9704,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9775,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 9704,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9785,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 9853,
											"end": 9855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9842,
											"end": 9851,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9838,
											"end": 9856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9829,
											"end": 9835,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 9785,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 9785,
											"end": 9857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9785,
											"end": 9857,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 9785,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9867,
											"end": 9939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9924,
											"end": 9933,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9917,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9867,
											"end": 9939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 9867,
											"end": 9939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9867,
											"end": 9939,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 9867,
											"end": 9939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 10021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 10017,
											"end": 10019,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10006,
											"end": 10015,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9993,
											"end": 9999,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 10021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 9949,
											"end": 10021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 10021,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 9949,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10031,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 10088,
											"end": 10097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10084,
											"end": 10103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10081,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10031,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 10031,
											"end": 10104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10031,
											"end": 10104,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10031,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10114,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 10182,
											"end": 10185,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 10171,
											"end": 10180,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10167,
											"end": 10186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10158,
											"end": 10164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10114,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 10114,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10114,
											"end": 10187,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 10114,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10999,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 10200,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10287,
											"end": 10293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10295,
											"end": 10301,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10354,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10340,
											"end": 10349,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10338,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10350,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10323,
											"end": 10355,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10358,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 10358,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10358,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10358,
											"end": 10437,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 10358,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10495,
											"end": 10504,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10491,
											"end": 10508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10478,
											"end": 10509,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10528,
											"end": 10534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10522,
											"end": 10639,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10522,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10522,
											"end": 10639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 10558,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 10558,
											"end": 10637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10637,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 10558,
											"end": 10637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10522,
											"end": 10639,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10522,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10663,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10718,
											"end": 10725,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10709,
											"end": 10715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10698,
											"end": 10707,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10694,
											"end": 10716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10663,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 10663,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10663,
											"end": 10726,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10663,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10653,
											"end": 10726,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10653,
											"end": 10726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10775,
											"end": 10777,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10801,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10846,
											"end": 10853,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10837,
											"end": 10843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10826,
											"end": 10835,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10801,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 10801,
											"end": 10854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10801,
											"end": 10854,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10801,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10791,
											"end": 10854,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10791,
											"end": 10854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 10864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10903,
											"end": 10905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10929,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 10974,
											"end": 10981,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 10971,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 10963,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10950,
											"end": 10972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 10929,
											"end": 10982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 10982,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 10929,
											"end": 10982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10919,
											"end": 10982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10919,
											"end": 10982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10874,
											"end": 10992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10999,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10999,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10999,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11005,
											"end": 11185,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 11005,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11053,
											"end": 11130,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11050,
											"end": 11051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11131,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 11147,
											"end": 11148,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11140,
											"end": 11155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11174,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11171,
											"end": 11172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11382,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 11191,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11231,
											"end": 11234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 11268,
											"end": 11269,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11250,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 11250,
											"end": 11270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11250,
											"end": 11270,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 11250,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11245,
											"end": 11270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11245,
											"end": 11270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11284,
											"end": 11304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 11302,
											"end": 11303,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11284,
											"end": 11304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 11284,
											"end": 11304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11284,
											"end": 11304,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 11284,
											"end": 11304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11279,
											"end": 11304,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11279,
											"end": 11304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11327,
											"end": 11328,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11324,
											"end": 11325,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11320,
											"end": 11329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11313,
											"end": 11329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11313,
											"end": 11329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11348,
											"end": 11351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11345,
											"end": 11346,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11342,
											"end": 11352,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11375,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 11339,
											"end": 11375,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11355,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 11355,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 11355,
											"end": 11373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11355,
											"end": 11373,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 11355,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11375,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 11339,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11382,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11582,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 11388,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11428,
											"end": 11432,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11448,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 11466,
											"end": 11467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 11448,
											"end": 11468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11468,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 11448,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11443,
											"end": 11468,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11443,
											"end": 11468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11500,
											"end": 11501,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 11482,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11502,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11526,
											"end": 11527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11523,
											"end": 11524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11519,
											"end": 11528,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11550,
											"end": 11551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11544,
											"end": 11548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11541,
											"end": 11552,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11538,
											"end": 11575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11538,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 11538,
											"end": 11575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 11555,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11538,
											"end": 11575,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 11538,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11736,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 11588,
											"end": 11736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11690,
											"end": 11701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11727,
											"end": 11730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11736,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11742,
											"end": 12132,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 11742,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11876,
											"end": 11915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11909,
											"end": 11914,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11876,
											"end": 11915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 11876,
											"end": 11915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11876,
											"end": 11915,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11876,
											"end": 11915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11931,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 12013,
											"end": 12019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12008,
											"end": 12011,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11931,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 11931,
											"end": 12020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11931,
											"end": 12020,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11931,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11924,
											"end": 12020,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11924,
											"end": 12020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12029,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 12087,
											"end": 12093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12082,
											"end": 12085,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12073,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12064,
											"end": 12080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12029,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 12029,
											"end": 12094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12029,
											"end": 12094,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 12029,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12119,
											"end": 12125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12114,
											"end": 12117,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12110,
											"end": 12126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12103,
											"end": 12126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12103,
											"end": 12126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11852,
											"end": 12132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11742,
											"end": 12132,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11742,
											"end": 12132,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11742,
											"end": 12132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11742,
											"end": 12132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11742,
											"end": 12132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12413,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 12138,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12270,
											"end": 12273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12292,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 12383,
											"end": 12386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12374,
											"end": 12380,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12292,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 12292,
											"end": 12387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12292,
											"end": 12387,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 12292,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12404,
											"end": 12407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12397,
											"end": 12407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12397,
											"end": 12407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12413,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12419,
											"end": 12599,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 12419,
											"end": 12599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12467,
											"end": 12544,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12464,
											"end": 12465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12457,
											"end": 12545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12564,
											"end": 12568,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 12561,
											"end": 12562,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12554,
											"end": 12569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12588,
											"end": 12592,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12585,
											"end": 12586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12578,
											"end": 12593,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 12925,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 12605,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12649,
											"end": 12655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12686,
											"end": 12687,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12680,
											"end": 12684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12676,
											"end": 12688,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12666,
											"end": 12688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12666,
											"end": 12688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12733,
											"end": 12734,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12727,
											"end": 12731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12723,
											"end": 12735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12744,
											"end": 12825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 12744,
											"end": 12825,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12810,
											"end": 12814,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 12802,
											"end": 12808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 12815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12788,
											"end": 12815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12788,
											"end": 12815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12744,
											"end": 12825,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 12744,
											"end": 12825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12872,
											"end": 12874,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12864,
											"end": 12870,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12841,
											"end": 12859,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12838,
											"end": 12876,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12835,
											"end": 12919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 12835,
											"end": 12919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12891,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 12891,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 12891,
											"end": 12909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12891,
											"end": 12909,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 12891,
											"end": 12909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12835,
											"end": 12919,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 12835,
											"end": 12919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12656,
											"end": 12925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 12925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 12925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 12925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 12925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12931,
											"end": 13072,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 12931,
											"end": 13072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12980,
											"end": 12984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13003,
											"end": 13006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12995,
											"end": 13006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12995,
											"end": 13006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13026,
											"end": 13029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13023,
											"end": 13024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13016,
											"end": 13030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13060,
											"end": 13064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13039,
											"end": 13065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13039,
											"end": 13065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12931,
											"end": 13072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12931,
											"end": 13072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12931,
											"end": 13072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12931,
											"end": 13072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13115,
											"end": 13121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13157,
											"end": 13159,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13150,
											"end": 13155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13146,
											"end": 13160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13142,
											"end": 13165,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 13132,
											"end": 13165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13132,
											"end": 13165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13078,
											"end": 13171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13177,
											"end": 13284,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 13177,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13221,
											"end": 13229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13271,
											"end": 13276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13265,
											"end": 13269,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13261,
											"end": 13277,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 13240,
											"end": 13277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13240,
											"end": 13277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13177,
											"end": 13284,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13177,
											"end": 13284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13177,
											"end": 13284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13177,
											"end": 13284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13177,
											"end": 13284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13290,
											"end": 13683,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 13290,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13359,
											"end": 13365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13409,
											"end": 13410,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 13397,
											"end": 13407,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13393,
											"end": 13411,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13432,
											"end": 13529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 13462,
											"end": 13528,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13451,
											"end": 13460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13432,
											"end": 13529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 13432,
											"end": 13529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13432,
											"end": 13529,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 13432,
											"end": 13529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 13580,
											"end": 13588,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13569,
											"end": 13578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 13550,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13589,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 13550,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13538,
											"end": 13589,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 13538,
											"end": 13589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13622,
											"end": 13626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13618,
											"end": 13627,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 13611,
											"end": 13616,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13607,
											"end": 13628,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13598,
											"end": 13628,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13598,
											"end": 13628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13671,
											"end": 13675,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13661,
											"end": 13669,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13657,
											"end": 13676,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13650,
											"end": 13655,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13647,
											"end": 13677,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 13637,
											"end": 13677,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13637,
											"end": 13677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13366,
											"end": 13683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13366,
											"end": 13683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13290,
											"end": 13683,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13290,
											"end": 13683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13290,
											"end": 13683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13290,
											"end": 13683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13290,
											"end": 13683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13290,
											"end": 13683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13717,
											"end": 13720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13738,
											"end": 13743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13731,
											"end": 13743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13731,
											"end": 13743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13689,
											"end": 13749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13755,
											"end": 13897,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 13755,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13805,
											"end": 13814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13838,
											"end": 13891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 13856,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 13865,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 13883,
											"end": 13888,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13865,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 13865,
											"end": 13889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13865,
											"end": 13889,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 13865,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13856,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 13856,
											"end": 13890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13856,
											"end": 13890,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 13856,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13838,
											"end": 13891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 13838,
											"end": 13891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13838,
											"end": 13891,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 13838,
											"end": 13891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 13891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 13891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13755,
											"end": 13897,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13755,
											"end": 13897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13755,
											"end": 13897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13755,
											"end": 13897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 13978,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 13903,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13946,
											"end": 13949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13960,
											"end": 13972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13960,
											"end": 13972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 13978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 13978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 13978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 13978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14253,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 13984,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 14125,
											"end": 14132,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 14094,
											"end": 14133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14133,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 14094,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14155,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 14204,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 14228,
											"end": 14244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14204,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 14204,
											"end": 14245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14204,
											"end": 14245,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 14204,
											"end": 14245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14196,
											"end": 14202,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14189,
											"end": 14193,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14183,
											"end": 14194,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14155,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 14155,
											"end": 14246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14155,
											"end": 14246,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 14155,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14149,
											"end": 14153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14142,
											"end": 14247,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14259,
											"end": 14332,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 14259,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14304,
											"end": 14307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14259,
											"end": 14332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14259,
											"end": 14332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14338,
											"end": 14527,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 14338,
											"end": 14527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14415,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 14415,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 14415,
											"end": 14447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14415,
											"end": 14447,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 14415,
											"end": 14447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14456,
											"end": 14521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 14514,
											"end": 14520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14506,
											"end": 14512,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14500,
											"end": 14504,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14456,
											"end": 14521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 14456,
											"end": 14521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14456,
											"end": 14521,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 14456,
											"end": 14521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14391,
											"end": 14527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14338,
											"end": 14527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14338,
											"end": 14527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14338,
											"end": 14527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14533,
											"end": 14719,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 14533,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14593,
											"end": 14713,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 14593,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14610,
											"end": 14613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14603,
											"end": 14608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14600,
											"end": 14614,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14593,
											"end": 14713,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14593,
											"end": 14713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 14593,
											"end": 14713,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14664,
											"end": 14703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 14701,
											"end": 14702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14694,
											"end": 14699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14664,
											"end": 14703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 14664,
											"end": 14703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14664,
											"end": 14703,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 14664,
											"end": 14703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14637,
											"end": 14638,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 14630,
											"end": 14635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14626,
											"end": 14639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14617,
											"end": 14639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14617,
											"end": 14639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14593,
											"end": 14713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 14593,
											"end": 14713,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14593,
											"end": 14713,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 14593,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14533,
											"end": 14719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14533,
											"end": 14719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14533,
											"end": 14719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14725,
											"end": 15268,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 14725,
											"end": 15268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14826,
											"end": 14828,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 14821,
											"end": 14824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14818,
											"end": 14829,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 14815,
											"end": 15261,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14815,
											"end": 15261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 14815,
											"end": 15261,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14860,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 14892,
											"end": 14897,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14860,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 14860,
											"end": 14898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14860,
											"end": 14898,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 14860,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14944,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 14962,
											"end": 14972,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14944,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 14944,
											"end": 14973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14944,
											"end": 14973,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 14944,
											"end": 14973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14934,
											"end": 14942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14930,
											"end": 14974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15127,
											"end": 15129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15115,
											"end": 15125,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 15109,
											"end": 15158,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15109,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 15109,
											"end": 15158,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15148,
											"end": 15156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15109,
											"end": 15158,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 15109,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15171,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 15227,
											"end": 15249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 15245,
											"end": 15248,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15227,
											"end": 15249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 15227,
											"end": 15249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15227,
											"end": 15249,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 15227,
											"end": 15249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15217,
											"end": 15225,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15213,
											"end": 15250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15171,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 15171,
											"end": 15251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15171,
											"end": 15251,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 15171,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14830,
											"end": 15261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14830,
											"end": 15261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14815,
											"end": 15261,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 14815,
											"end": 15261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14725,
											"end": 15268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14725,
											"end": 15268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14725,
											"end": 15268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14725,
											"end": 15268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15274,
											"end": 15391,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 15274,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15328,
											"end": 15336,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15378,
											"end": 15383,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15372,
											"end": 15376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15368,
											"end": 15384,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 15347,
											"end": 15384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15347,
											"end": 15384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15274,
											"end": 15391,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15274,
											"end": 15391,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15274,
											"end": 15391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15274,
											"end": 15391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15274,
											"end": 15391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15397,
											"end": 15566,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 15397,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15441,
											"end": 15447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15474,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 15522,
											"end": 15523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15518,
											"end": 15524,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 15510,
											"end": 15515,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15507,
											"end": 15508,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 15503,
											"end": 15516,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15474,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 15474,
											"end": 15525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15474,
											"end": 15525,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 15474,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15470,
											"end": 15526,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 15555,
											"end": 15559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15549,
											"end": 15553,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15545,
											"end": 15560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15535,
											"end": 15560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15535,
											"end": 15560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15448,
											"end": 15566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15397,
											"end": 15566,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15397,
											"end": 15566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15397,
											"end": 15566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15397,
											"end": 15566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15397,
											"end": 15566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15571,
											"end": 15866,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 15571,
											"end": 15866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15647,
											"end": 15651,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15793,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 15818,
											"end": 15821,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15812,
											"end": 15816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15793,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 15793,
											"end": 15822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15793,
											"end": 15822,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 15793,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15785,
											"end": 15822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15785,
											"end": 15822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15858,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15852,
											"end": 15853,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 15848,
											"end": 15859,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15842,
											"end": 15846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15839,
											"end": 15860,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 15831,
											"end": 15860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15831,
											"end": 15860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15571,
											"end": 15866,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15571,
											"end": 15866,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15571,
											"end": 15866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15571,
											"end": 15866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15571,
											"end": 15866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15871,
											"end": 17266,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 15871,
											"end": 17266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15988,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 16021,
											"end": 16024,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15988,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 15988,
											"end": 16025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15988,
											"end": 16025,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 15988,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16090,
											"end": 16108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16082,
											"end": 16088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16079,
											"end": 16109,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 16076,
											"end": 16132,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16076,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 16076,
											"end": 16132,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16112,
											"end": 16130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 16112,
											"end": 16130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 16112,
											"end": 16130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16112,
											"end": 16130,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 16112,
											"end": 16130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16076,
											"end": 16132,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 16076,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16156,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 16188,
											"end": 16192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16182,
											"end": 16193,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 16156,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 16156,
											"end": 16194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16156,
											"end": 16194,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 16156,
											"end": 16194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16241,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 16301,
											"end": 16307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16293,
											"end": 16299,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16287,
											"end": 16291,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16241,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 16241,
											"end": 16308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16241,
											"end": 16308,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 16241,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16335,
											"end": 16336,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16359,
											"end": 16363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16346,
											"end": 16363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16391,
											"end": 16393,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 16383,
											"end": 16389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16380,
											"end": 16394,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 16408,
											"end": 16409,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 16403,
											"end": 17021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16403,
											"end": 17021,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 16403,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 16403,
											"end": 17021,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17065,
											"end": 17066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17082,
											"end": 17088,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17079,
											"end": 17156,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17079,
											"end": 17156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 17079,
											"end": 17156,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17131,
											"end": 17140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17126,
											"end": 17129,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 17122,
											"end": 17141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17116,
											"end": 17142,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17107,
											"end": 17142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17107,
											"end": 17142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17079,
											"end": 17156,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 17079,
											"end": 17156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17182,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 17242,
											"end": 17248,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17235,
											"end": 17240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17182,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 17182,
											"end": 17249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17182,
											"end": 17249,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 17182,
											"end": 17249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17176,
											"end": 17180,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17169,
											"end": 17250,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 17038,
											"end": 17260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16373,
											"end": 17260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 16373,
											"end": 17260,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16403,
											"end": 17021,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 16403,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16455,
											"end": 16459,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 16451,
											"end": 16460,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 16443,
											"end": 16449,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16439,
											"end": 16461,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16489,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 16521,
											"end": 16525,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 16489,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 16489,
											"end": 16526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16489,
											"end": 16526,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 16489,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16548,
											"end": 16549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16562,
											"end": 16770,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 16562,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16576,
											"end": 16583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16573,
											"end": 16574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16570,
											"end": 16584,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 16562,
											"end": 16770,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16562,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 16562,
											"end": 16770,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16655,
											"end": 16664,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16650,
											"end": 16653,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 16646,
											"end": 16665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16640,
											"end": 16666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16632,
											"end": 16638,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16625,
											"end": 16667,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 16706,
											"end": 16707,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 16698,
											"end": 16704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16694,
											"end": 16708,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16684,
											"end": 16708,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16684,
											"end": 16708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16753,
											"end": 16755,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16742,
											"end": 16751,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16738,
											"end": 16756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16725,
											"end": 16756,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 16725,
											"end": 16756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16599,
											"end": 16603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16596,
											"end": 16597,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16592,
											"end": 16604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16587,
											"end": 16604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16587,
											"end": 16604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16562,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 16562,
											"end": 16770,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16562,
											"end": 16770,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 16562,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16798,
											"end": 16804,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 16789,
											"end": 16796,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16786,
											"end": 16805,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 16783,
											"end": 16962,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16783,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 16783,
											"end": 16962,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16856,
											"end": 16865,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16851,
											"end": 16854,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 16847,
											"end": 16866,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16841,
											"end": 16867,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16899,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 16941,
											"end": 16945,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 16933,
											"end": 16939,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 16929,
											"end": 16946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 16927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16899,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 16899,
											"end": 16947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16899,
											"end": 16947,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 16899,
											"end": 16947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16891,
											"end": 16897,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16884,
											"end": 16948,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 16806,
											"end": 16962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16783,
											"end": 16962,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 16783,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17008,
											"end": 17009,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 17004,
											"end": 17005,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 16996,
											"end": 17002,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 16992,
											"end": 17006,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 16988,
											"end": 17010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16982,
											"end": 16986,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 16975,
											"end": 17011,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 17021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 17021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 17021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16373,
											"end": 17260,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 16373,
											"end": 17260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16373,
											"end": 17260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15963,
											"end": 17266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15963,
											"end": 17266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15963,
											"end": 17266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15871,
											"end": 17266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15871,
											"end": 17266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15871,
											"end": 17266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17714,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 17272,
											"end": 17714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17421,
											"end": 17425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17459,
											"end": 17461,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 17448,
											"end": 17457,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17444,
											"end": 17462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17436,
											"end": 17462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17436,
											"end": 17462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17472,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 17540,
											"end": 17541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17529,
											"end": 17538,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17525,
											"end": 17542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17516,
											"end": 17522,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17472,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 17472,
											"end": 17543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17472,
											"end": 17543,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 17472,
											"end": 17543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17553,
											"end": 17625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 17621,
											"end": 17623,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17610,
											"end": 17619,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17606,
											"end": 17624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17597,
											"end": 17603,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17553,
											"end": 17625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 17553,
											"end": 17625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17553,
											"end": 17625,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 17553,
											"end": 17625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17635,
											"end": 17707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 17703,
											"end": 17705,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17692,
											"end": 17701,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17688,
											"end": 17706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17679,
											"end": 17685,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17635,
											"end": 17707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 17635,
											"end": 17707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17635,
											"end": 17707,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 17635,
											"end": 17707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17714,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17714,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17720,
											"end": 17810,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 17720,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17754,
											"end": 17761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17797,
											"end": 17802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17790,
											"end": 17803,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17783,
											"end": 17804,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17772,
											"end": 17804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17772,
											"end": 17804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17720,
											"end": 17810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17720,
											"end": 17810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17720,
											"end": 17810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17720,
											"end": 17810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17816,
											"end": 17932,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 17816,
											"end": 17932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17886,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 17901,
											"end": 17906,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17886,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 17886,
											"end": 17907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17886,
											"end": 17907,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 17886,
											"end": 17907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17879,
											"end": 17884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17876,
											"end": 17908,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17866,
											"end": 17926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 17866,
											"end": 17926,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17922,
											"end": 17923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17919,
											"end": 17920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17912,
											"end": 17924,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17866,
											"end": 17926,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 17866,
											"end": 17926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17816,
											"end": 17932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17816,
											"end": 17932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17938,
											"end": 18075,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 17938,
											"end": 18075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17992,
											"end": 17997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18023,
											"end": 18029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18017,
											"end": 18030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 18008,
											"end": 18030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18008,
											"end": 18030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18039,
											"end": 18069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 18063,
											"end": 18068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18039,
											"end": 18069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 18039,
											"end": 18069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18039,
											"end": 18069,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 18039,
											"end": 18069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17938,
											"end": 18075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17938,
											"end": 18075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17938,
											"end": 18075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17938,
											"end": 18075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17938,
											"end": 18075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18081,
											"end": 18426,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 18081,
											"end": 18426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18148,
											"end": 18154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18197,
											"end": 18199,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18185,
											"end": 18194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18176,
											"end": 18183,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18172,
											"end": 18195,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18168,
											"end": 18200,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 18165,
											"end": 18284,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 18165,
											"end": 18284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 18165,
											"end": 18284,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18203,
											"end": 18282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 18203,
											"end": 18282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 18203,
											"end": 18282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18203,
											"end": 18282,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 18203,
											"end": 18282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18165,
											"end": 18284,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 18165,
											"end": 18284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18323,
											"end": 18324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18348,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 18401,
											"end": 18408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18381,
											"end": 18390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 18377,
											"end": 18399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18348,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 18348,
											"end": 18409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18348,
											"end": 18409,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 18348,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18338,
											"end": 18409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18338,
											"end": 18409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18294,
											"end": 18419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18081,
											"end": 18426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18081,
											"end": 18426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18081,
											"end": 18426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18081,
											"end": 18426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18081,
											"end": 18426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18432,
											"end": 18764,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 18432,
											"end": 18764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18553,
											"end": 18557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18591,
											"end": 18593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18580,
											"end": 18589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18576,
											"end": 18594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18568,
											"end": 18594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18568,
											"end": 18594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 18672,
											"end": 18673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18661,
											"end": 18670,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18657,
											"end": 18674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18648,
											"end": 18654,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 18604,
											"end": 18675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18675,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 18604,
											"end": 18675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18685,
											"end": 18757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 18753,
											"end": 18755,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18742,
											"end": 18751,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18738,
											"end": 18756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18729,
											"end": 18735,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18685,
											"end": 18757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 18685,
											"end": 18757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18685,
											"end": 18757,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 18685,
											"end": 18757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18432,
											"end": 18764,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 18432,
											"end": 18764,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18432,
											"end": 18764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18432,
											"end": 18764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18432,
											"end": 18764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18432,
											"end": 18764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CarbonTrader.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit(string,uint256,string)": "68b377ca",
							"destroyAllAllowance(address)": "459ccec7",
							"destroyAllowance(address,uint256)": "64502cae",
							"finalizeAuctionAndTransferCarbon(string,uint256,uint256)": "d62b58ca",
							"freezeAllowance(address,uint256)": "d107a5cc",
							"getAllowance(address)": "eb5a662e",
							"getBidSecret(string)": "5ed04c43",
							"getFreezeAllowance(address)": "17056d94",
							"getTread(string)": "97b1a8b7",
							"issueAllowance(address,uint256)": "733da7c8",
							"refundDeposit(string)": "69524d31",
							"setBidSecret(string,string)": "4fe19125",
							"stertTrade(string,uint256,uint256,uint256,uint256,uint256)": "69527363",
							"unFreezeAllowance(address,uint256)": "19ec73e0",
							"withdrawAcutionAmount()": "7feab380"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usdtTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CarbonTrader_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CarbonTrader_ParamError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CarbonTrader_transferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"treadId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"destroyAllAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"destroyAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"treadId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"allowanceAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addtionalAmountToPay\",\"type\":\"uint256\"}],\"name\":\"finalizeAuctionAndTransferCarbon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"freezeAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"treadId\",\"type\":\"string\"}],\"name\":\"getBidSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFreezeAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"treadId\",\"type\":\"string\"}],\"name\":\"getTread\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issueAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"treadId\",\"type\":\"string\"}],\"name\":\"refundDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"treadId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"secret\",\"type\":\"string\"}],\"name\":\"setBidSecret\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tradeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stratTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumBidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initPriceOfUnit\",\"type\":\"uint256\"}],\"name\":\"stertTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unFreezeAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAcutionAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CarbonTrader.sol\":\"CarbonTrader\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CarbonTrader.sol\":{\"keccak256\":\"0xda93ff8a440043d4164f1bed654e3ce4d4c200dbc6521214f2e47cf92cd471b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79192cfc197ca21194045a7ec95219495afca75dd4029024f8a7fa883241b94f\",\"dweb:/ipfs/QmewHgNkB5afQcVa1tgNh8J9m7iRVP7pqL9ppXbHp9hxK6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 823,
								"contract": "contracts/CarbonTrader.sol:CarbonTrader",
								"label": "s_addressToAllowances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 827,
								"contract": "contracts/CarbonTrader.sol:CarbonTrader",
								"label": "s_freezeAllowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 832,
								"contract": "contracts/CarbonTrader.sol:CarbonTrader",
								"label": "s_trade",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_string_memory_ptr,t_struct(Trade)819_storage)"
							},
							{
								"astId": 836,
								"contract": "contracts/CarbonTrader.sol:CarbonTrader",
								"label": "s_auctionAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_struct(Trade)819_storage)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => struct CarbonTrader.Trade)",
								"numberOfBytes": "32",
								"value": "t_struct(Trade)819_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Trade)819_storage": {
								"encoding": "inplace",
								"label": "struct CarbonTrader.Trade",
								"members": [
									{
										"astId": 796,
										"contract": "contracts/CarbonTrader.sol:CarbonTrader",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 798,
										"contract": "contracts/CarbonTrader.sol:CarbonTrader",
										"label": "sellAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 800,
										"contract": "contracts/CarbonTrader.sol:CarbonTrader",
										"label": "startTimeStamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 802,
										"contract": "contracts/CarbonTrader.sol:CarbonTrader",
										"label": "endTimeStamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 804,
										"contract": "contracts/CarbonTrader.sol:CarbonTrader",
										"label": "minimumBidAmount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 806,
										"contract": "contracts/CarbonTrader.sol:CarbonTrader",
										"label": "initPriceOfUint",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 810,
										"contract": "contracts/CarbonTrader.sol:CarbonTrader",
										"label": "deeposits",
										"offset": 0,
										"slot": "6",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 814,
										"contract": "contracts/CarbonTrader.sol:CarbonTrader",
										"label": "bidInfos",
										"offset": 0,
										"slot": "7",
										"type": "t_mapping(t_address,t_string_storage)"
									},
									{
										"astId": 818,
										"contract": "contracts/CarbonTrader.sol:CarbonTrader",
										"label": "bidSecrets",
										"offset": 0,
										"slot": "8",
										"type": "t_mapping(t_address,t_string_storage)"
									}
								],
								"numberOfBytes": "288"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/CarbonTrader.sol": {
				"ast": {
					"absolutePath": "contracts/CarbonTrader.sol",
					"exportedSymbols": {
						"CarbonTrader": [
							1416
						],
						"CarbonTrader_NotOwner": [
							790
						],
						"CarbonTrader_ParamError": [
							792
						],
						"CarbonTrader_transferFailed": [
							794
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1417,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1417,
							"sourceUnit": 652,
							"src": "61:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "c31b2cfe",
							"id": 790,
							"name": "CarbonTrader_NotOwner",
							"nameLocation": "126:21:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 789,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "147:2:5"
							},
							"src": "120:30:5"
						},
						{
							"errorSelector": "0ecf0f11",
							"id": 792,
							"name": "CarbonTrader_ParamError",
							"nameLocation": "158:23:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 791,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "181:2:5"
							},
							"src": "152:32:5"
						},
						{
							"errorSelector": "81b714be",
							"id": 794,
							"name": "CarbonTrader_transferFailed",
							"nameLocation": "192:27:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 793,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "219:2:5"
							},
							"src": "186:36:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CarbonTrader",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1416,
							"linearizedBaseContracts": [
								1416
							],
							"name": "CarbonTrader",
							"nameLocation": "234:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CarbonTrader.Trade",
									"id": 819,
									"members": [
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "288:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 819,
											"src": "280:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 795,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "280:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "sellAmount",
											"nameLocation": "329:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 819,
											"src": "321:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 797,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "321:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 800,
											"mutability": "mutable",
											"name": "startTimeStamp",
											"nameLocation": "380:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 819,
											"src": "372:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 799,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "372:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 802,
											"mutability": "mutable",
											"name": "endTimeStamp",
											"nameLocation": "437:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 819,
											"src": "429:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 801,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "429:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 804,
											"mutability": "mutable",
											"name": "minimumBidAmount",
											"nameLocation": "493:16:5",
											"nodeType": "VariableDeclaration",
											"scope": 819,
											"src": "485:24:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 803,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "485:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 806,
											"mutability": "mutable",
											"name": "initPriceOfUint",
											"nameLocation": "550:15:5",
											"nodeType": "VariableDeclaration",
											"scope": 819,
											"src": "542:23:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 805,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "542:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 810,
											"mutability": "mutable",
											"name": "deeposits",
											"nameLocation": "633:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 819,
											"src": "604:38:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 809,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "604:28:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 814,
											"mutability": "mutable",
											"name": "bidInfos",
											"nameLocation": "699:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 819,
											"src": "671:36:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
												"typeString": "mapping(address => string)"
											},
											"typeName": {
												"id": 813,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "671:27:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
													"typeString": "mapping(address => string)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "691:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 818,
											"mutability": "mutable",
											"name": "bidSecrets",
											"nameLocation": "746:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 819,
											"src": "718:38:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
												"typeString": "mapping(address => string)"
											},
											"typeName": {
												"id": 817,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "718:27:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
													"typeString": "mapping(address => string)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "738:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Trade",
									"nameLocation": "263:5:5",
									"nodeType": "StructDefinition",
									"scope": 1416,
									"src": "256:508:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 823,
									"mutability": "mutable",
									"name": "s_addressToAllowances",
									"nameLocation": "836:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 1416,
									"src": "799:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 822,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 820,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "808:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "799:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 821,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "819:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 827,
									"mutability": "mutable",
									"name": "s_freezeAllowance",
									"nameLocation": "932:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1416,
									"src": "894:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 826,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 824,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "903:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "894:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 825,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "914:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 832,
									"mutability": "mutable",
									"name": "s_trade",
									"nameLocation": "1012:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1416,
									"src": "977:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
										"typeString": "mapping(string => struct CarbonTrader.Trade)"
									},
									"typeName": {
										"id": 831,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 828,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "986:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "977:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
											"typeString": "mapping(string => struct CarbonTrader.Trade)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 830,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 829,
												"name": "Trade",
												"nameLocations": [
													"996:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 819,
												"src": "996:5:5"
											},
											"referencedDeclaration": 819,
											"src": "996:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
												"typeString": "struct CarbonTrader.Trade"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 836,
									"mutability": "mutable",
									"name": "s_auctionAmount",
									"nameLocation": "1090:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1416,
									"src": "1053:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 835,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 833,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1062:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1053:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 834,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1073:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 838,
									"mutability": "immutable",
									"name": "i_owner",
									"nameLocation": "1178:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1416,
									"src": "1151:34:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 837,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1151:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 841,
									"mutability": "immutable",
									"name": "i_usdt_token",
									"nameLocation": "1217:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1416,
									"src": "1192:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 840,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 839,
											"name": "IERC20",
											"nameLocations": [
												"1192:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "1192:6:5"
										},
										"referencedDeclaration": 729,
										"src": "1192:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "1275:89:5",
										"statements": [
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 846,
														"name": "i_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "1286:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 847,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1296:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1300:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1296:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1286:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "1286:20:5"
											},
											{
												"expression": {
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 851,
														"name": "i_usdt_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "1317:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 853,
																"name": "usdtTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "1339:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 852,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1332:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1332:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1317:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "1317:39:5"
											}
										]
									},
									"id": 858,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "usdtTokenAddress",
												"nameLocation": "1257:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1249:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:26:5"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1275:0:5"
									},
									"scope": 1416,
									"src": "1236:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "1409:114:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 860,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1424:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1428:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1424:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 862,
														"name": "i_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "1438:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1424:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "1420:84:5",
												"trueBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "1447:57:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 864,
																	"name": "CarbonTrader_NotOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "1469:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1469:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 866,
															"nodeType": "RevertStatement",
															"src": "1462:30:5"
														}
													]
												}
											},
											{
												"id": 869,
												"nodeType": "PlaceholderStatement",
												"src": "1514:1:5"
											}
										]
									},
									"id": 871,
									"name": "onlyOwner",
									"nameLocation": "1397:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1406:2:5"
									},
									"src": "1388:135:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "1632:55:5",
										"statements": [
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 880,
															"name": "s_addressToAllowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "1643:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 882,
														"indexExpression": {
															"id": 881,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "1665:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1643:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 883,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "1673:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1643:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "1643:36:5"
											}
										]
									},
									"functionSelector": "733da7c8",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 878,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 877,
												"name": "onlyOwner",
												"nameLocations": [
													"1622:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "1622:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1622:9:5"
										}
									],
									"name": "issueAllowance",
									"nameLocation": "1571:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1594:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1586:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1607:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1599:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:29:5"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1632:0:5"
									},
									"scope": 1416,
									"src": "1562:125:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "1789:53:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 894,
														"name": "s_addressToAllowances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "1807:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 896,
													"indexExpression": {
														"id": 895,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "1829:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1807:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 893,
												"id": 897,
												"nodeType": "Return",
												"src": "1799:35:5"
											}
										]
									},
									"functionSelector": "eb5a662e",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowance",
									"nameLocation": "1732:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1753:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1745:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:14:5"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1780:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:9:5"
									},
									"scope": 1416,
									"src": "1723:119:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "1945:100:5",
										"statements": [
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 908,
															"name": "s_addressToAllowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "1956:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 910,
														"indexExpression": {
															"id": 909,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "1978:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1956:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 911,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "1987:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1956:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "1956:37:5"
											},
											{
												"expression": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 914,
															"name": "s_freezeAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2004:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 916,
														"indexExpression": {
															"id": 915,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "2022:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2004:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 917,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2031:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2004:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "2004:33:5"
											}
										]
									},
									"functionSelector": "d107a5cc",
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 906,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 905,
												"name": "onlyOwner",
												"nameLocations": [
													"1935:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "1935:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1935:9:5"
										}
									],
									"name": "freezeAllowance",
									"nameLocation": "1881:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1906:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "1898:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1919:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "1911:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:29:5"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:5"
									},
									"scope": 1416,
									"src": "1872:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "2154:100:5",
										"statements": [
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 930,
															"name": "s_addressToAllowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "2165:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 932,
														"indexExpression": {
															"id": 931,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "2187:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2165:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 933,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2196:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2165:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "2165:37:5"
											},
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 936,
															"name": "s_freezeAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2213:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 938,
														"indexExpression": {
															"id": 937,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "2231:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2213:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 939,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2240:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2213:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "2213:33:5"
											}
										]
									},
									"functionSelector": "19ec73e0",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 928,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 927,
												"name": "onlyOwner",
												"nameLocations": [
													"2144:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "2144:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2144:9:5"
										}
									],
									"name": "unFreezeAllowance",
									"nameLocation": "2089:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2116:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2108:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2129:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2121:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:29:5"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2154:0:5"
									},
									"scope": 1416,
									"src": "2080:174:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "2368:49:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 950,
														"name": "s_freezeAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "2386:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 952,
													"indexExpression": {
														"id": 951,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2404:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2386:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 953,
												"nodeType": "Return",
												"src": "2379:30:5"
											}
										]
									},
									"functionSelector": "17056d94",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFreezeAllowance",
									"nameLocation": "2304:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2331:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "2323:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:14:5"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "2359:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2358:9:5"
									},
									"scope": 1416,
									"src": "2295:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "2522:56:5",
										"statements": [
											{
												"expression": {
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 964,
															"name": "s_addressToAllowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "2533:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 966,
														"indexExpression": {
															"id": 965,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "2555:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2533:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 967,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "2564:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2533:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "2533:37:5"
											}
										]
									},
									"functionSelector": "64502cae",
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 962,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 961,
												"name": "onlyOwner",
												"nameLocations": [
													"2512:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "2512:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2512:9:5"
										}
									],
									"name": "destroyAllowance",
									"nameLocation": "2458:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2483:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2475:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2497:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2489:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:30:5"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2522:0:5"
									},
									"scope": 1416,
									"src": "2449:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "2676:88:5",
										"statements": [
											{
												"expression": {
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 978,
															"name": "s_addressToAllowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "2687:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 980,
														"indexExpression": {
															"id": 979,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "2709:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2687:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2717:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2687:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "2687:31:5"
											},
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 984,
															"name": "s_freezeAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2729:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 986,
														"indexExpression": {
															"id": 985,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "2747:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2729:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2755:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2729:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "2729:27:5"
											}
										]
									},
									"functionSelector": "459ccec7",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 976,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 975,
												"name": "onlyOwner",
												"nameLocations": [
													"2666:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "2666:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2666:9:5"
										}
									],
									"name": "destroyAllAllowance",
									"nameLocation": "2625:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2653:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2645:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:14:5"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2676:0:5"
									},
									"scope": 1416,
									"src": "2616:148:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "3027:691:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1006,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "3056:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3066:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3056:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1009,
																	"name": "stratTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "3084:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1010,
																	"name": "stratTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "3102:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3084:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3056:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1013,
																"name": "initPriceOfUnit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "3133:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3152:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3133:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3056:97:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1017,
															"name": "minimumBidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "3170:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1018,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "3189:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3170:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3056:139:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "IfStatement",
												"src": "3038:201:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1021,
															"name": "CarbonTrader_ParamError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "3214:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3214:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1023,
													"nodeType": "RevertStatement",
													"src": "3207:32:5"
												}
											},
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newTrade",
														"nameLocation": "3266:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "3252:22:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
															"typeString": "struct CarbonTrader.Trade"
														},
														"typeName": {
															"id": 1026,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1025,
																"name": "Trade",
																"nameLocations": [
																	"3252:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 819,
																"src": "3252:5:5"
															},
															"referencedDeclaration": 819,
															"src": "3252:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"baseExpression": {
														"id": 1028,
														"name": "s_trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "3277:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
															"typeString": "mapping(string memory => struct CarbonTrader.Trade storage ref)"
														}
													},
													"id": 1030,
													"indexExpression": {
														"id": 1029,
														"name": "tradeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "3285:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3277:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Trade_$819_storage",
														"typeString": "struct CarbonTrader.Trade storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3252:41:5"
											},
											{
												"expression": {
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1032,
															"name": "newTrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3304:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade storage pointer"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3313:6:5",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "3304:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1035,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3322:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3326:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3322:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3304:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "3304:28:5"
											},
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1039,
															"name": "newTrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3343:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade storage pointer"
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3352:10:5",
														"memberName": "sellAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 798,
														"src": "3343:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1042,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3365:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3343:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "3343:28:5"
											},
											{
												"expression": {
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1045,
															"name": "newTrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3382:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade storage pointer"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3391:14:5",
														"memberName": "startTimeStamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 800,
														"src": "3382:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1048,
														"name": "stratTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "3408:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3382:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "3382:40:5"
											},
											{
												"expression": {
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1051,
															"name": "newTrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3433:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade storage pointer"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3442:12:5",
														"memberName": "endTimeStamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 802,
														"src": "3433:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1054,
														"name": "endTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "3457:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3433:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "3433:36:5"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1057,
															"name": "newTrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3480:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade storage pointer"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3489:15:5",
														"memberName": "initPriceOfUint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 806,
														"src": "3480:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1060,
														"name": "initPriceOfUnit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "3507:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3480:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "3480:42:5"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1063,
															"name": "newTrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3533:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade storage pointer"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3542:16:5",
														"memberName": "minimumBidAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 804,
														"src": "3533:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1066,
														"name": "minimumBidAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "3561:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3533:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "3533:44:5"
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1069,
															"name": "s_addressToAllowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "3615:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1072,
														"indexExpression": {
															"expression": {
																"id": 1070,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3637:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3641:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3637:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3615:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1073,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3652:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3615:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "3615:43:5"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1076,
															"name": "s_freezeAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "3669:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1079,
														"indexExpression": {
															"expression": {
																"id": 1077,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3687:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3691:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3687:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3669:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1080,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3702:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3669:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "3669:39:5"
											}
										]
									},
									"functionSelector": "69527363",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stertTrade",
									"nameLocation": "2802:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "tradeId",
												"nameLocation": "2838:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2824:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 992,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2864:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2856:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "stratTimeStamp",
												"nameLocation": "2889:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2881:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "endTimeStamp",
												"nameLocation": "2922:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2914:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2914:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "minimumBidAmount",
												"nameLocation": "2953:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2945:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "initPriceOfUnit",
												"nameLocation": "2988:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2980:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2980:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:207:5"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3027:0:5"
									},
									"scope": 1416,
									"src": "2793:925:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "3856:306:5",
										"statements": [
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "curTrade",
														"nameLocation": "3881:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "3867:22:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
															"typeString": "struct CarbonTrader.Trade"
														},
														"typeName": {
															"id": 1102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1101,
																"name": "Trade",
																"nameLocations": [
																	"3867:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 819,
																"src": "3867:5:5"
															},
															"referencedDeclaration": 819,
															"src": "3867:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"initialValue": {
													"baseExpression": {
														"id": 1104,
														"name": "s_trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "3892:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
															"typeString": "mapping(string memory => struct CarbonTrader.Trade storage ref)"
														}
													},
													"id": 1106,
													"indexExpression": {
														"id": 1105,
														"name": "treadId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "3900:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3892:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Trade_$819_storage",
														"typeString": "struct CarbonTrader.Trade storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3867:41:5"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1108,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "3941:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3950:6:5",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 796,
															"src": "3941:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1110,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "3971:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3980:10:5",
															"memberName": "sellAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 798,
															"src": "3971:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1112,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "4005:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4014:14:5",
															"memberName": "startTimeStamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 800,
															"src": "4005:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1114,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "4043:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4052:12:5",
															"memberName": "endTimeStamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 802,
															"src": "4043:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1116,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "4079:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4088:15:5",
															"memberName": "initPriceOfUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 806,
															"src": "4079:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1118,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "4118:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4127:16:5",
															"memberName": "minimumBidAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 804,
															"src": "4118:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1120,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3926:228:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1121,
												"nodeType": "Return",
												"src": "3919:235:5"
											}
										]
									},
									"functionSelector": "97b1a8b7",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTread",
									"nameLocation": "3754:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "treadId",
												"nameLocation": "3778:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "3764:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3764:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:23:5"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "3808:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "3816:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3816:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "3824:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "3832:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "3840:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3840:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "3848:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:49:5"
									},
									"scope": 1416,
									"src": "3745:417:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "4251:323:5",
										"statements": [
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "curTrade",
														"nameLocation": "4276:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "4262:22:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
															"typeString": "struct CarbonTrader.Trade"
														},
														"typeName": {
															"id": 1133,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1132,
																"name": "Trade",
																"nameLocations": [
																	"4262:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 819,
																"src": "4262:5:5"
															},
															"referencedDeclaration": 819,
															"src": "4262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"baseExpression": {
														"id": 1135,
														"name": "s_trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "4287:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
															"typeString": "mapping(string memory => struct CarbonTrader.Trade storage ref)"
														}
													},
													"id": 1137,
													"indexExpression": {
														"id": 1136,
														"name": "treadId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "4295:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4287:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Trade_$819_storage",
														"typeString": "struct CarbonTrader.Trade storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4262:41:5"
											},
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4319:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "4314:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4314:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1143,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4355:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4359:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4355:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1147,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4375:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CarbonTrader_$1416",
																		"typeString": "contract CarbonTrader"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CarbonTrader_$1416",
																		"typeString": "contract CarbonTrader"
																	}
																],
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4367:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1145,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4367:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4367:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4382:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1141,
															"name": "i_usdt_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4329:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4342:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "4329:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4329:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4314:75:5"
											},
											{
												"condition": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4404:8:5",
													"subExpression": {
														"id": 1152,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "4405:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1157,
												"nodeType": "IfStatement",
												"src": "4400:50:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1154,
															"name": "CarbonTrader_transferFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "4421:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4421:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1156,
													"nodeType": "RevertStatement",
													"src": "4414:36:5"
												}
											},
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1158,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "4492:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4501:9:5",
															"memberName": "deeposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "4492:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1163,
														"indexExpression": {
															"expression": {
																"id": 1160,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4511:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4515:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4511:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4492:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1164,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "4525:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4492:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "4492:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1168,
															"name": "treadId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "4550:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1169,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "4559:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1167,
														"name": "setInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "4542:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4542:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "4542:22:5"
											}
										]
									},
									"functionSelector": "68b377ca",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "4177:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "treadId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "4185:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4185:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4216:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "4208:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "4238:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "4224:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4224:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4184:59:5"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4251:0:5"
									},
									"scope": 1416,
									"src": "4168:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "4633:394:5",
										"statements": [
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "curTrade",
														"nameLocation": "4658:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "4644:22:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
															"typeString": "struct CarbonTrader.Trade"
														},
														"typeName": {
															"id": 1179,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1178,
																"name": "Trade",
																"nameLocations": [
																	"4644:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 819,
																"src": "4644:5:5"
															},
															"referencedDeclaration": 819,
															"src": "4644:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"baseExpression": {
														"id": 1181,
														"name": "s_trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "4669:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
															"typeString": "mapping(string memory => struct CarbonTrader.Trade storage ref)"
														}
													},
													"id": 1183,
													"indexExpression": {
														"id": 1182,
														"name": "treadId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "4677:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4669:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Trade_$819_storage",
														"typeString": "struct CarbonTrader.Trade storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4644:41:5"
											},
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "depositAmount",
														"nameLocation": "4704:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "4696:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4696:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1187,
															"name": "curTrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "4720:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade storage pointer"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4729:9:5",
														"memberName": "deeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 810,
														"src": "4720:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1191,
													"indexExpression": {
														"expression": {
															"id": 1189,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4739:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4743:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4739:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4720:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4696:54:5"
											},
											{
												"expression": {
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1193,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "4761:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4770:9:5",
															"memberName": "deeposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "4761:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1198,
														"indexExpression": {
															"expression": {
																"id": 1195,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4780:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4784:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4780:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4761:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4794:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4761:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "4761:34:5"
											},
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4811:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "4806:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1202,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4806:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1210,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4843:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4847:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4843:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "depositAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "4855:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1204,
															"name": "i_usdt_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4821:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4834:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "4821:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4821:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4806:63:5"
											},
											{
												"condition": {
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4884:8:5",
													"subExpression": {
														"id": 1211,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "4885:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "4880:138:5",
												"trueBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "4894:124:5",
													"statements": [
														{
															"expression": {
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1213,
																			"name": "curTrade",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "4909:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																				"typeString": "struct CarbonTrader.Trade storage pointer"
																			}
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4918:9:5",
																		"memberName": "deeposits",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 810,
																		"src": "4909:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1218,
																	"indexExpression": {
																		"expression": {
																			"id": 1215,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4928:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4932:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4928:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4909:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1219,
																	"name": "depositAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "4942:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4909:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1221,
															"nodeType": "ExpressionStatement",
															"src": "4909:46:5"
														},
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1222,
																	"name": "CarbonTrader_transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "4977:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4977:29:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1224,
															"nodeType": "RevertStatement",
															"src": "4970:36:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "69524d31",
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "refundDeposit",
									"nameLocation": "4589:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "treadId",
												"nameLocation": "4617:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "4603:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4603:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4602:23:5"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4633:0:5"
									},
									"scope": 1416,
									"src": "4580:447:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "5102:107:5",
										"statements": [
											{
												"assignments": [
													1237
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "curTrade",
														"nameLocation": "5127:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5113:22:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
															"typeString": "struct CarbonTrader.Trade"
														},
														"typeName": {
															"id": 1236,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1235,
																"name": "Trade",
																"nameLocations": [
																	"5113:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 819,
																"src": "5113:5:5"
															},
															"referencedDeclaration": 819,
															"src": "5113:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1241,
												"initialValue": {
													"baseExpression": {
														"id": 1238,
														"name": "s_trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
															"typeString": "mapping(string memory => struct CarbonTrader.Trade storage ref)"
														}
													},
													"id": 1240,
													"indexExpression": {
														"id": 1239,
														"name": "treadId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "5146:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5138:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Trade_$819_storage",
														"typeString": "struct CarbonTrader.Trade storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5113:41:5"
											},
											{
												"expression": {
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1242,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "5165:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5174:8:5",
															"memberName": "bidInfos",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 814,
															"src": "5165:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 1247,
														"indexExpression": {
															"expression": {
																"id": 1244,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5183:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5187:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5183:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5165:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1248,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "5197:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5165:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "5165:36:5"
											}
										]
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInfo",
									"nameLocation": "5044:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "treadId",
												"nameLocation": "5066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5052:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1229,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5052:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "5088:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5074:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5051:42:5"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5102:0:5"
									},
									"scope": 1416,
									"src": "5035:174:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "5296:112:5",
										"statements": [
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "curTrade",
														"nameLocation": "5321:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1275,
														"src": "5307:22:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
															"typeString": "struct CarbonTrader.Trade"
														},
														"typeName": {
															"id": 1260,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1259,
																"name": "Trade",
																"nameLocations": [
																	"5307:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 819,
																"src": "5307:5:5"
															},
															"referencedDeclaration": 819,
															"src": "5307:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1265,
												"initialValue": {
													"baseExpression": {
														"id": 1262,
														"name": "s_trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5332:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
															"typeString": "mapping(string memory => struct CarbonTrader.Trade storage ref)"
														}
													},
													"id": 1264,
													"indexExpression": {
														"id": 1263,
														"name": "treadId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "5340:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5332:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Trade_$819_storage",
														"typeString": "struct CarbonTrader.Trade storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5307:41:5"
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1266,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "5359:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5368:10:5",
															"memberName": "bidSecrets",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 818,
															"src": "5359:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 1271,
														"indexExpression": {
															"expression": {
																"id": 1268,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5379:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5383:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5379:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5359:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1272,
														"name": "secret",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "5393:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5359:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "5359:40:5"
											}
										]
									},
									"functionSelector": "4fe19125",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBidSecret",
									"nameLocation": "5232:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "treadId",
												"nameLocation": "5259:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5245:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5245:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "secret",
												"nameLocation": "5282:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5268:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5268:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:45:5"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5296:0:5"
									},
									"scope": 1416,
									"src": "5223:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "5495:110:5",
										"statements": [
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "curTrade",
														"nameLocation": "5520:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "5506:22:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
															"typeString": "struct CarbonTrader.Trade"
														},
														"typeName": {
															"id": 1284,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1283,
																"name": "Trade",
																"nameLocations": [
																	"5506:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 819,
																"src": "5506:5:5"
															},
															"referencedDeclaration": 819,
															"src": "5506:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"baseExpression": {
														"id": 1286,
														"name": "s_trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5531:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
															"typeString": "mapping(string memory => struct CarbonTrader.Trade storage ref)"
														}
													},
													"id": 1288,
													"indexExpression": {
														"id": 1287,
														"name": "treadId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "5539:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5531:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Trade_$819_storage",
														"typeString": "struct CarbonTrader.Trade storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5506:41:5"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1290,
															"name": "curTrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "5565:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade storage pointer"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5574:10:5",
														"memberName": "bidSecrets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 818,
														"src": "5565:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
															"typeString": "mapping(address => string storage ref)"
														}
													},
													"id": 1294,
													"indexExpression": {
														"expression": {
															"id": 1292,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5585:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5589:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5585:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5565:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1282,
												"id": 1295,
												"nodeType": "Return",
												"src": "5558:38:5"
											}
										]
									},
									"functionSelector": "5ed04c43",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBidSecret",
									"nameLocation": "5424:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "treadId",
												"nameLocation": "5451:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "5437:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5437:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5436:23:5"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "5480:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5480:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5479:15:5"
									},
									"scope": 1416,
									"src": "5415:190:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "5772:689:5",
										"statements": [
											{
												"assignments": [
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1308,
														"mutability": "mutable",
														"name": "curTrade",
														"nameLocation": "5797:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "5783:22:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
															"typeString": "struct CarbonTrader.Trade"
														},
														"typeName": {
															"id": 1307,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1306,
																"name": "Trade",
																"nameLocations": [
																	"5783:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 819,
																"src": "5783:5:5"
															},
															"referencedDeclaration": 819,
															"src": "5783:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"baseExpression": {
														"id": 1309,
														"name": "s_trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5808:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
															"typeString": "mapping(string memory => struct CarbonTrader.Trade storage ref)"
														}
													},
													"id": 1311,
													"indexExpression": {
														"id": 1310,
														"name": "treadId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "5816:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5808:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Trade_$819_storage",
														"typeString": "struct CarbonTrader.Trade storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5783:41:5"
											},
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "depositAmount",
														"nameLocation": "5871:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "5863:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5863:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1315,
															"name": "curTrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "5887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																"typeString": "struct CarbonTrader.Trade storage pointer"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5896:9:5",
														"memberName": "deeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 810,
														"src": "5887:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1319,
													"indexExpression": {
														"expression": {
															"id": 1317,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5906:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5910:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5906:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5887:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5863:54:5"
											},
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1321,
																	"name": "s_trade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "5928:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Trade_$819_storage_$",
																		"typeString": "mapping(string memory => struct CarbonTrader.Trade storage ref)"
																	}
																},
																"id": 1323,
																"indexExpression": {
																	"id": 1322,
																	"name": "treadId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "5936:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5928:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage",
																	"typeString": "struct CarbonTrader.Trade storage ref"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5945:9:5",
															"memberName": "deeposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "5928:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1327,
														"indexExpression": {
															"expression": {
																"id": 1325,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5955:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5959:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5955:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5928:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5969:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5928:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "5928:42:5"
											},
											{
												"expression": {
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1331,
															"name": "s_auctionAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5981:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1334,
														"indexExpression": {
															"expression": {
																"id": 1332,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "5997:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6006:6:5",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 796,
															"src": "5997:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5981:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1335,
															"name": "depositAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "6017:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1336,
															"name": "addtionalAmountToPay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "6032:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6017:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5981:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "5981:71:5"
											},
											{
												"expression": {
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1340,
															"name": "s_addressToAllowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "6097:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1343,
														"indexExpression": {
															"expression": {
																"id": 1341,
																"name": "curTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "6119:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Trade_$819_storage_ptr",
																	"typeString": "struct CarbonTrader.Trade storage pointer"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6128:6:5",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 796,
															"src": "6119:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6097:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1344,
														"name": "allowanceAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "6139:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6097:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "6097:57:5"
											},
											{
												"expression": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1347,
															"name": "s_addressToAllowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "6199:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1350,
														"indexExpression": {
															"expression": {
																"id": 1348,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6221:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6225:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6221:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6199:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1351,
														"name": "allowanceAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "6236:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6199:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "6199:52:5"
											},
											{
												"assignments": [
													1355
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6304:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "6299:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1354,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6299:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6340:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6344:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6340:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1362,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6360:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CarbonTrader_$1416",
																		"typeString": "contract CarbonTrader"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CarbonTrader_$1416",
																		"typeString": "contract CarbonTrader"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6352:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6352:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6352:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1364,
															"name": "addtionalAmountToPay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "6367:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1356,
															"name": "i_usdt_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "6314:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6327:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "6314:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:74:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6299:89:5"
											},
											{
												"condition": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6403:8:5",
													"subExpression": {
														"id": 1367,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "6404:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "6399:50:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1369,
															"name": "CarbonTrader_transferFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "6420:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6420:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1371,
													"nodeType": "RevertStatement",
													"src": "6413:36:5"
												}
											}
										]
									},
									"functionSelector": "d62b58ca",
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeAuctionAndTransferCarbon",
									"nameLocation": "5635:32:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "treadId",
												"nameLocation": "5692:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "5678:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1298,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5678:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "allowanceAmount",
												"nameLocation": "5709:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "5701:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "addtionalAmountToPay",
												"nameLocation": "5733:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "5725:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5667:97:5"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5772:0:5"
									},
									"scope": 1416,
									"src": "5626:835:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "6506:310:5",
										"statements": [
											{
												"assignments": [
													1378
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6525:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "6517:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6517:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1383,
												"initialValue": {
													"baseExpression": {
														"id": 1379,
														"name": "s_auctionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "6534:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1382,
													"indexExpression": {
														"expression": {
															"id": 1380,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6550:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6554:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6550:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6534:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6517:44:5"
											},
											{
												"expression": {
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1384,
															"name": "s_auctionAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "6572:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1387,
														"indexExpression": {
															"expression": {
																"id": 1385,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6588:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6592:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6588:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6572:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6602:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6572:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "6572:31:5"
											},
											{
												"assignments": [
													1392
												],
												"declarations": [
													{
														"constant": false,
														"id": 1392,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6620:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "6615:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1391,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6615:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1399,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1395,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6652:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6656:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6652:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "6664:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1393,
															"name": "i_usdt_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "6630:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6643:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "6630:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6630:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6615:56:5"
											},
											{
												"condition": {
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6686:8:5",
													"subExpression": {
														"id": 1400,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "6687:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1413,
												"nodeType": "IfStatement",
												"src": "6682:127:5",
												"trueBody": {
													"id": 1412,
													"nodeType": "Block",
													"src": "6696:113:5",
													"statements": [
														{
															"expression": {
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1402,
																		"name": "s_auctionAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "6710:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1405,
																	"indexExpression": {
																		"expression": {
																			"id": 1403,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6726:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6730:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6726:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6710:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1406,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "6740:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6710:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1408,
															"nodeType": "ExpressionStatement",
															"src": "6710:36:5"
														},
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1409,
																	"name": "CarbonTrader_transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "6768:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6768:29:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1411,
															"nodeType": "RevertStatement",
															"src": "6761:36:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7feab380",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAcutionAmount",
									"nameLocation": "6476:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6497:2:5"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6506:0:5"
									},
									"scope": 1416,
									"src": "6467:349:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1417,
							"src": "224:6597:5",
							"usedErrors": [
								790,
								792,
								794
							],
							"usedEvents": []
						}
					],
					"src": "33:6788:5"
				},
				"id": 5
			}
		}
	}
}